// Copyright 2012 Lightpoke. All rights reserved.
// This source code is subject to the terms and
// conditions defined in the "License.txt" file.
//
// Code generated by this program is also under
// the above license.

// glwrap is a tool for generating Go OpenGL wrappers.
package main

import (
	"io"
	"text/template"
)

const enumsTemplate = `// Copyright 2012 Lightpoke. All rights reserved.
// This source code is subject to the terms and
// conditions defined in the "License.txt" file.
//
// This source file was automatically generated using glwrap.{{range $tag := .BuildTags}}
// +build {{$tag}}{{end}}

// Package opengl implements Go bindings to {{.Title}}
package opengl

const(
{{range $element := .Constants}}	{{.Name}} {{.Type}} = {{.Value}}
{{end}}
)
`

func writeEnums(out io.Writer, tmplData *TmplData) error {
	tmpl := template.Must(template.New("enumsTemplate").Parse(enumsTemplate))
	err = tmpl.Execute(out, map[string]interface{}{
		"BuildTags": tmplData.BuildTags,
		"Constants": tmplData.Constants,
		"Title":     tmplData.Title,
	})
	if err != nil {
		return err
	}
	return nil
}
