#include <stdbool.h>
#include <stdlib.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;

typedef void(*gl14PAccum)(GLenum, GLfloat);
typedef void(*gl14PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl14PBegin)(GLenum);
typedef void(*gl14PEnd)();
typedef void(*gl14PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl14PBlendFunc)(GLenum, GLenum);
typedef void(*gl14PCallList)(GLuint);
typedef void(*gl14PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl14PClear)(GLbitfield);
typedef void(*gl14PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl14PClearDepth)(GLclampd);
typedef void(*gl14PClearIndex)(GLfloat);
typedef void(*gl14PClearStencil)(GLint);
typedef void(*gl14PClipPlane)(GLenum, GLdouble*);
typedef void(*gl14PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl14PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PColor3i)(GLint, GLint, GLint);
typedef void(*gl14PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl14PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl14PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl14PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl14PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl14PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl14PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl14PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl14PColor3bv)(GLbyte*);
typedef void(*gl14PColor3dv)(GLdouble*);
typedef void(*gl14PColor3fv)(GLfloat*);
typedef void(*gl14PColor3iv)(GLint*);
typedef void(*gl14PColor3sv)(GLshort*);
typedef void(*gl14PColor3ubv)(GLubyte*);
typedef void(*gl14PColor3uiv)(GLuint*);
typedef void(*gl14PColor3usv)(GLushort*);
typedef void(*gl14PColor4bv)(GLbyte*);
typedef void(*gl14PColor4dv)(GLdouble*);
typedef void(*gl14PColor4fv)(GLfloat*);
typedef void(*gl14PColor4iv)(GLint*);
typedef void(*gl14PColor4sv)(GLshort*);
typedef void(*gl14PColor4ubv)(GLubyte*);
typedef void(*gl14PColor4uiv)(GLuint*);
typedef void(*gl14PColor4usv)(GLushort*);
typedef void(*gl14PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl14PColorMaterial)(GLenum, GLenum);
typedef void(*gl14PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl14PCullFace)(GLenum);
typedef void(*gl14PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl14PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl14PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl14PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl14PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl14PDeleteLists)(GLuint, GLsizei);
typedef void(*gl14PDepthFunc)(GLenum);
typedef void(*gl14PDepthMask)(GLboolean);
typedef void(*gl14PDepthRange)(GLclampd, GLclampd);
typedef void(*gl14PEnable)(GLenum);
typedef void(*gl14PDisable)(GLenum);
typedef void(*gl14PDrawBuffer)(GLenum);
typedef void(*gl14PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PEdgeFlag)(GLboolean);
typedef void(*gl14PEdgeFlagv)(GLboolean*);
typedef void(*gl14PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl14PEvalCoord1d)(GLdouble);
typedef void(*gl14PEvalCoord1f)(GLfloat);
typedef void(*gl14PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl14PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl14PEvalCoord1dv)(GLdouble*);
typedef void(*gl14PEvalCoord1fv)(GLfloat*);
typedef void(*gl14PEvalCoord2dv)(GLdouble*);
typedef void(*gl14PEvalCoord2fv)(GLfloat*);
typedef void(*gl14PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl14PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl14PEvalPoint1)(GLint);
typedef void(*gl14PEvalPoint2)(GLint, GLint);
typedef void(*gl14PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl14PFinish)();
typedef void(*gl14PFlush)();
typedef void(*gl14PFogf)(GLenum, GLfloat);
typedef void(*gl14PFogi)(GLenum, GLint);
typedef void(*gl14PFogfv)(GLenum, GLfloat*);
typedef void(*gl14PFogiv)(GLenum, GLint*);
typedef void(*gl14PFrontFace)(GLenum);
typedef void(*gl14PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl14PGenLists)(GLsizei);
typedef void(*gl14PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl14PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl14PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl14PGetIntegerv)(GLenum, GLint*);
typedef void(*gl14PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl14PGetError)();
typedef void(*gl14PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl14PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl14PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl14PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl14PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl14PGetString)(GLenum);
typedef void(*gl14PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl14PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl14PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl14PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl14PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PHint)(GLenum, GLenum);
typedef void(*gl14PIndexd)(GLdouble);
typedef void(*gl14PIndexf)(GLfloat);
typedef void(*gl14PIndexi)(GLint);
typedef void(*gl14PIndexs)(GLshort);
typedef void(*gl14PIndexdv)(GLdouble*);
typedef void(*gl14PIndexfv)(GLfloat*);
typedef void(*gl14PIndexiv)(GLint*);
typedef void(*gl14PIndexsv)(GLshort*);
typedef void(*gl14PIndexMask)(GLuint);
typedef void(*gl14PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl14PInitNames)();
typedef void(*gl14PIsEnabled)(GLenum);
typedef GLboolean(*gl14PIsList)(GLuint);
typedef void(*gl14PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PLighti)(GLenum, GLenum, GLint);
typedef void(*gl14PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl14PLightModelf)(GLenum, GLfloat);
typedef void(*gl14PLightModeli)(GLenum, GLint);
typedef void(*gl14PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl14PLightModeliv)(GLenum, GLint*);
typedef void(*gl14PLineStipple)(GLint, GLushort);
typedef void(*gl14PLineWidth)(GLfloat);
typedef void(*gl14PListBase)(GLuint);
typedef void(*gl14PLoadIdentity)();
typedef void(*gl14PLoadMatrixd)(GLdouble*);
typedef void(*gl14PLoadMatrixf)(GLfloat*);
typedef void(*gl14PLoadName)(GLuint);
typedef void(*gl14PLogicOp)(GLenum);
typedef void(*gl14PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl14PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl14PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl14PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl14PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl14PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl14PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl14PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl14PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl14PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl14PMatrixMode)(GLenum);
typedef void(*gl14PMultMatrixd)(GLdouble*);
typedef void(*gl14PMultMatrixf)(GLfloat*);
typedef void(*gl14PNewList)(GLuint, GLenum);
typedef void(*gl14PEndList)();
typedef void(*gl14PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl14PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PNormal3i)(GLint, GLint, GLint);
typedef void(*gl14PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PNormal3bv)(GLbyte*);
typedef void(*gl14PNormal3dv)(GLdouble*);
typedef void(*gl14PNormal3fv)(GLfloat*);
typedef void(*gl14PNormal3iv)(GLint*);
typedef void(*gl14PNormal3sv)(GLshort*);
typedef void(*gl14POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PPassThrough)(GLfloat);
typedef void(*gl14PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl14PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl14PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl14PPixelStoref)(GLenum, GLfloat);
typedef void(*gl14PPixelStorei)(GLenum, GLint);
typedef void(*gl14PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl14PPixelTransferi)(GLenum, GLint);
typedef void(*gl14PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl14PPointSize)(GLfloat);
typedef void(*gl14PPolygonMode)(GLenum, GLenum);
typedef void(*gl14PPolygonStipple)(GLubyte*);
typedef void(*gl14PPushAttrib)(GLbitfield);
typedef void(*gl14PPopAttrib)();
typedef void(*gl14PPushMatrix)();
typedef void(*gl14PPopMatrix)();
typedef void(*gl14PPushName)(GLuint);
typedef void(*gl14PPopName)();
typedef void(*gl14PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl14PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl14PRasterPos2i)(GLint, GLint);
typedef void(*gl14PRasterPos2s)(GLshort, GLshort);
typedef void(*gl14PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl14PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl14PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PRasterPos2dv)(GLdouble*);
typedef void(*gl14PRasterPos2fv)(GLfloat*);
typedef void(*gl14PRasterPos2iv)(GLint*);
typedef void(*gl14PRasterPos2sv)(GLshort*);
typedef void(*gl14PRasterPos3dv)(GLdouble*);
typedef void(*gl14PRasterPos3fv)(GLfloat*);
typedef void(*gl14PRasterPos3iv)(GLint*);
typedef void(*gl14PRasterPos3sv)(GLshort*);
typedef void(*gl14PRasterPos4dv)(GLdouble*);
typedef void(*gl14PRasterPos4fv)(GLfloat*);
typedef void(*gl14PRasterPos4iv)(GLint*);
typedef void(*gl14PRasterPos4sv)(GLshort*);
typedef void(*gl14PReadBuffer)(GLenum);
typedef void(*gl14PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl14PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl14PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl14PRectiv)(GLint*, GLint*);
typedef void(*gl14PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl14PRenderMode)(GLenum);
typedef void(*gl14PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl14PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl14PShadeModel)(GLenum);
typedef void(*gl14PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl14PStencilMask)(GLuint);
typedef void(*gl14PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl14PTexCoord1d)(GLdouble);
typedef void(*gl14PTexCoord1f)(GLfloat);
typedef void(*gl14PTexCoord1i)(GLint);
typedef void(*gl14PTexCoord1s)(GLshort);
typedef void(*gl14PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl14PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl14PTexCoord2i)(GLint, GLint);
typedef void(*gl14PTexCoord2s)(GLshort, GLshort);
typedef void(*gl14PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl14PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl14PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PTexCoord1dv)(GLdouble*);
typedef void(*gl14PTexCoord1fv)(GLfloat*);
typedef void(*gl14PTexCoord1iv)(GLint*);
typedef void(*gl14PTexCoord1sv)(GLshort*);
typedef void(*gl14PTexCoord2dv)(GLdouble*);
typedef void(*gl14PTexCoord2fv)(GLfloat*);
typedef void(*gl14PTexCoord2iv)(GLint*);
typedef void(*gl14PTexCoord2sv)(GLshort*);
typedef void(*gl14PTexCoord3dv)(GLdouble*);
typedef void(*gl14PTexCoord3fv)(GLfloat*);
typedef void(*gl14PTexCoord3iv)(GLint*);
typedef void(*gl14PTexCoord3sv)(GLshort*);
typedef void(*gl14PTexCoord4dv)(GLdouble*);
typedef void(*gl14PTexCoord4fv)(GLfloat*);
typedef void(*gl14PTexCoord4iv)(GLint*);
typedef void(*gl14PTexCoord4sv)(GLshort*);
typedef void(*gl14PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl14PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl14PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl14PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl14PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl14PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl14PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl14PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl14PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl14PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl14PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PVertex2s)(GLshort, GLshort);
typedef void(*gl14PVertex2i)(GLint, GLint);
typedef void(*gl14PVertex2f)(GLfloat, GLfloat);
typedef void(*gl14PVertex2d)(GLdouble, GLdouble);
typedef void(*gl14PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PVertex3i)(GLint, GLint, GLint);
typedef void(*gl14PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl14PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl14PGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl14PGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl14PGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
typedef void(*gl14PGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl14PGetHistogramParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl14PGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
typedef void(*gl14PHistogram)(GLenum, GLsizei, GLenum, GLboolean);
typedef void(*gl14PMinmax)(GLenum, GLenum, GLboolean);
typedef void(*gl14PMultiTexCoord1s)(GLenum, GLshort);
typedef void(*gl14PMultiTexCoord1i)(GLenum, GLint);
typedef void(*gl14PMultiTexCoord1f)(GLenum, GLfloat);
typedef void(*gl14PMultiTexCoord1d)(GLenum, GLdouble);
typedef void(*gl14PMultiTexCoord2s)(GLenum, GLshort, GLshort);
typedef void(*gl14PMultiTexCoord2i)(GLenum, GLint, GLint);
typedef void(*gl14PMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
typedef void(*gl14PMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
typedef void(*gl14PMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
typedef void(*gl14PMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
typedef void(*gl14PMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl14PMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl14PMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl14PMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl14PMultiTexCoord1sv)(GLenum, GLshort*);
typedef void(*gl14PMultiTexCoord1iv)(GLenum, GLint*);
typedef void(*gl14PMultiTexCoord1fv)(GLenum, GLfloat*);
typedef void(*gl14PMultiTexCoord1dv)(GLenum, GLdouble*);
typedef void(*gl14PMultiTexCoord2sv)(GLenum, GLshort*);
typedef void(*gl14PMultiTexCoord2iv)(GLenum, GLint*);
typedef void(*gl14PMultiTexCoord2fv)(GLenum, GLfloat*);
typedef void(*gl14PMultiTexCoord2dv)(GLenum, GLdouble*);
typedef void(*gl14PMultiTexCoord3sv)(GLenum, GLshort*);
typedef void(*gl14PMultiTexCoord3iv)(GLenum, GLint*);
typedef void(*gl14PMultiTexCoord3fv)(GLenum, GLfloat*);
typedef void(*gl14PMultiTexCoord3dv)(GLenum, GLdouble*);
typedef void(*gl14PMultiTexCoord4sv)(GLenum, GLshort*);
typedef void(*gl14PMultiTexCoord4iv)(GLenum, GLint*);
typedef void(*gl14PMultiTexCoord4fv)(GLenum, GLfloat*);
typedef void(*gl14PMultiTexCoord4dv)(GLenum, GLdouble*);
typedef void(*gl14PResetHistogram)(GLenum);
typedef void(*gl14PResetMinmax)(GLenum);
typedef void(*gl14PSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*);
typedef GLboolean(*gl14PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl14PArrayElement)(GLint);
typedef void(*gl14PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl14PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl14PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl14PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl14PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl14PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl14PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl14PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl14PBindTexture)(GLenum, GLuint);
typedef void(*gl14PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl14PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl14PIsTexture)(GLuint);
typedef void(*gl14PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PEnableClientState)(GLenum);
typedef void(*gl14PDisableClientState)(GLenum);
typedef void(*gl14PIndexub)(GLubyte);
typedef void(*gl14PIndexubv)(GLubyte*);
typedef void(*gl14PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl14PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl14PPushClientAttrib)(GLbitfield);
typedef void(*gl14PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl14PPopClientAttrib)();
typedef void(*gl14PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl14PBlendEquation)(GLenum);
typedef void(*gl14PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl14PDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
typedef void(*gl14PTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl14PTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl14PActiveTexture)(GLenum);
typedef void(*gl14PClientActiveTexture)(GLenum);
typedef void(*gl14PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl14PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl14PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl14PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PGetCompressedTexImage)(GLenum, GLint, GLvoid*);
typedef void(*gl14PLoadTransposeMatrixd)(GLdouble*);
typedef void(*gl14PLoadTransposeMatrixf)(GLdouble*);
typedef void(*gl14PMultTransposeMatrixd)(GLdouble*);
typedef void(*gl14PMultTransposeMatrixf)(GLfloat*);
typedef void(*gl14PSampleCoverage)(GLclampf, GLboolean);
typedef void(*gl14PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl14PFogCoordPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl14PFogCoordd)(GLdouble);
typedef void(*gl14PFogCoordf)(GLfloat);
typedef void(*gl14PFogCoorddv)(GLdouble*);
typedef void(*gl14PFogCoordfv)(GLfloat*);
typedef void(*gl14PMultiDrawArrays)(GLenum, GLint*, GLsizei*, GLsizei);
typedef void(*gl14PMultiDrawElements)(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei);
typedef void(*gl14PPointParameterf)(GLenum, GLfloat);
typedef void(*gl14PPointParameteri)(GLenum, GLint);
typedef void(*gl14PSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl14PSecondaryColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PSecondaryColor3i)(GLint, GLint, GLint);
typedef void(*gl14PSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl14PSecondaryColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl14PSecondaryColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl14PSecondaryColor3bv)(GLbyte*);
typedef void(*gl14PSecondaryColor3sv)(GLshort*);
typedef void(*gl14PSecondaryColor3iv)(GLint*);
typedef void(*gl14PSecondaryColor3fv)(GLfloat*);
typedef void(*gl14PSecondaryColor3dv)(GLdouble*);
typedef void(*gl14PSecondaryColor3ubv)(GLubyte*);
typedef void(*gl14PSecondaryColor3usv)(GLushort*);
typedef void(*gl14PSecondaryColor3uiv)(GLuint*);
typedef void(*gl14PSecondaryColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl14PWindowPos2s)(GLshort, GLshort);
typedef void(*gl14PWindowPos2i)(GLint, GLint);
typedef void(*gl14PWindowPos2f)(GLfloat, GLfloat);
typedef void(*gl14PWindowPos2d)(GLdouble, GLdouble);
typedef void(*gl14PWindowPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl14PWindowPos3i)(GLint, GLint, GLint);
typedef void(*gl14PWindowPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl14PWindowPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl14PWindowPos2sv)(GLshort*);
typedef void(*gl14PWindowPos2iv)(GLint*);
typedef void(*gl14PWindowPos2fv)(GLfloat*);
typedef void(*gl14PWindowPos2dv)(GLdouble*);
typedef void(*gl14PWindowPos3sv)(GLshort*);
typedef void(*gl14PWindowPos3iv)(GLint*);
typedef void(*gl14PWindowPos3fv)(GLfloat*);
typedef void(*gl14PWindowPos3dv)(GLdouble*);

typedef struct {
    gl14PAccum fnAccum;
    gl14PAlphaFunc fnAlphaFunc;
    gl14PBegin fnBegin;
    gl14PEnd fnEnd;
    gl14PBitmap fnBitmap;
    gl14PBlendFunc fnBlendFunc;
    gl14PCallList fnCallList;
    gl14PCallLists fnCallLists;
    gl14PClear fnClear;
    gl14PClearAccum fnClearAccum;
    gl14PClearColor fnClearColor;
    gl14PClearDepth fnClearDepth;
    gl14PClearIndex fnClearIndex;
    gl14PClearStencil fnClearStencil;
    gl14PClipPlane fnClipPlane;
    gl14PColor3b fnColor3b;
    gl14PColor3d fnColor3d;
    gl14PColor3f fnColor3f;
    gl14PColor3i fnColor3i;
    gl14PColor3s fnColor3s;
    gl14PColor3ub fnColor3ub;
    gl14PColor3ui fnColor3ui;
    gl14PColor3us fnColor3us;
    gl14PColor4b fnColor4b;
    gl14PColor4d fnColor4d;
    gl14PColor4f fnColor4f;
    gl14PColor4i fnColor4i;
    gl14PColor4s fnColor4s;
    gl14PColor4ub fnColor4ub;
    gl14PColor4ui fnColor4ui;
    gl14PColor4us fnColor4us;
    gl14PColor3bv fnColor3bv;
    gl14PColor3dv fnColor3dv;
    gl14PColor3fv fnColor3fv;
    gl14PColor3iv fnColor3iv;
    gl14PColor3sv fnColor3sv;
    gl14PColor3ubv fnColor3ubv;
    gl14PColor3uiv fnColor3uiv;
    gl14PColor3usv fnColor3usv;
    gl14PColor4bv fnColor4bv;
    gl14PColor4dv fnColor4dv;
    gl14PColor4fv fnColor4fv;
    gl14PColor4iv fnColor4iv;
    gl14PColor4sv fnColor4sv;
    gl14PColor4ubv fnColor4ubv;
    gl14PColor4uiv fnColor4uiv;
    gl14PColor4usv fnColor4usv;
    gl14PColorMask fnColorMask;
    gl14PColorMaterial fnColorMaterial;
    gl14PColorTable fnColorTable;
    gl14PColorTableParameterfv fnColorTableParameterfv;
    gl14PColorTableParameteriv fnColorTableParameteriv;
    gl14PColorSubTable fnColorSubTable;
    gl14PCopyPixels fnCopyPixels;
    gl14PCullFace fnCullFace;
    gl14PConvolutionFilter1D fnConvolutionFilter1D;
    gl14PConvolutionFilter2D fnConvolutionFilter2D;
    gl14PConvolutionParameterf fnConvolutionParameterf;
    gl14PConvolutionParameteri fnConvolutionParameteri;
    gl14PCopyColorTable fnCopyColorTable;
    gl14PCopyColorSubTable fnCopyColorSubTable;
    gl14PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl14PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl14PDeleteLists fnDeleteLists;
    gl14PDepthFunc fnDepthFunc;
    gl14PDepthMask fnDepthMask;
    gl14PDepthRange fnDepthRange;
    gl14PEnable fnEnable;
    gl14PDisable fnDisable;
    gl14PDrawBuffer fnDrawBuffer;
    gl14PDrawPixels fnDrawPixels;
    gl14PEdgeFlag fnEdgeFlag;
    gl14PEdgeFlagv fnEdgeFlagv;
    gl14PEdgeFlagPointer fnEdgeFlagPointer;
    gl14PEvalCoord1d fnEvalCoord1d;
    gl14PEvalCoord1f fnEvalCoord1f;
    gl14PEvalCoord2d fnEvalCoord2d;
    gl14PEvalCoord2f fnEvalCoord2f;
    gl14PEvalCoord1dv fnEvalCoord1dv;
    gl14PEvalCoord1fv fnEvalCoord1fv;
    gl14PEvalCoord2dv fnEvalCoord2dv;
    gl14PEvalCoord2fv fnEvalCoord2fv;
    gl14PEvalMesh1 fnEvalMesh1;
    gl14PEvalMesh2 fnEvalMesh2;
    gl14PEvalPoint1 fnEvalPoint1;
    gl14PEvalPoint2 fnEvalPoint2;
    gl14PFeedbackBuffer fnFeedbackBuffer;
    gl14PFinish fnFinish;
    gl14PFlush fnFlush;
    gl14PFogf fnFogf;
    gl14PFogi fnFogi;
    gl14PFogfv fnFogfv;
    gl14PFogiv fnFogiv;
    gl14PFrontFace fnFrontFace;
    gl14PFrustum fnFrustum;
    gl14PGenLists fnGenLists;
    gl14PGetBooleanv fnGetBooleanv;
    gl14PGetDoublev fnGetDoublev;
    gl14PGetFloatv fnGetFloatv;
    gl14PGetIntegerv fnGetIntegerv;
    gl14PGetClipPlane fnGetClipPlane;
    gl14PGetError fnGetError;
    gl14PGetLightfv fnGetLightfv;
    gl14PGetLightiv fnGetLightiv;
    gl14PGetMapdv fnGetMapdv;
    gl14PGetMapfv fnGetMapfv;
    gl14PGetMapiv fnGetMapiv;
    gl14PGetMaterialfv fnGetMaterialfv;
    gl14PGetMaterialiv fnGetMaterialiv;
    gl14PGetPixelMapfv fnGetPixelMapfv;
    gl14PGetPixelMapuiv fnGetPixelMapuiv;
    gl14PGetPixelMapusv fnGetPixelMapusv;
    gl14PGetPolygonStipple fnGetPolygonStipple;
    gl14PGetString fnGetString;
    gl14PGetTexEnvfv fnGetTexEnvfv;
    gl14PGetTexEnviv fnGetTexEnviv;
    gl14PGetTexGendv fnGetTexGendv;
    gl14PGetTexGenfv fnGetTexGenfv;
    gl14PGetTexGeniv fnGetTexGeniv;
    gl14PGetTexImage fnGetTexImage;
    gl14PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl14PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl14PGetTexParameterfv fnGetTexParameterfv;
    gl14PGetTexParameteriv fnGetTexParameteriv;
    gl14PHint fnHint;
    gl14PIndexd fnIndexd;
    gl14PIndexf fnIndexf;
    gl14PIndexi fnIndexi;
    gl14PIndexs fnIndexs;
    gl14PIndexdv fnIndexdv;
    gl14PIndexfv fnIndexfv;
    gl14PIndexiv fnIndexiv;
    gl14PIndexsv fnIndexsv;
    gl14PIndexMask fnIndexMask;
    gl14PIndexPointer fnIndexPointer;
    gl14PInitNames fnInitNames;
    gl14PIsEnabled fnIsEnabled;
    gl14PIsList fnIsList;
    gl14PLightf fnLightf;
    gl14PLighti fnLighti;
    gl14PLightfv fnLightfv;
    gl14PLightiv fnLightiv;
    gl14PLightModelf fnLightModelf;
    gl14PLightModeli fnLightModeli;
    gl14PLightModelfv fnLightModelfv;
    gl14PLightModeliv fnLightModeliv;
    gl14PLineStipple fnLineStipple;
    gl14PLineWidth fnLineWidth;
    gl14PListBase fnListBase;
    gl14PLoadIdentity fnLoadIdentity;
    gl14PLoadMatrixd fnLoadMatrixd;
    gl14PLoadMatrixf fnLoadMatrixf;
    gl14PLoadName fnLoadName;
    gl14PLogicOp fnLogicOp;
    gl14PMap1d fnMap1d;
    gl14PMap1f fnMap1f;
    gl14PMap2d fnMap2d;
    gl14PMap2f fnMap2f;
    gl14PMapGrid1d fnMapGrid1d;
    gl14PMapGrid1f fnMapGrid1f;
    gl14PMapGrid2d fnMapGrid2d;
    gl14PMapGrid2f fnMapGrid2f;
    gl14PMaterialf fnMaterialf;
    gl14PMateriali fnMateriali;
    gl14PMaterialfv fnMaterialfv;
    gl14PMaterialiv fnMaterialiv;
    gl14PMatrixMode fnMatrixMode;
    gl14PMultMatrixd fnMultMatrixd;
    gl14PMultMatrixf fnMultMatrixf;
    gl14PNewList fnNewList;
    gl14PEndList fnEndList;
    gl14PNormal3b fnNormal3b;
    gl14PNormal3d fnNormal3d;
    gl14PNormal3f fnNormal3f;
    gl14PNormal3i fnNormal3i;
    gl14PNormal3s fnNormal3s;
    gl14PNormal3bv fnNormal3bv;
    gl14PNormal3dv fnNormal3dv;
    gl14PNormal3fv fnNormal3fv;
    gl14PNormal3iv fnNormal3iv;
    gl14PNormal3sv fnNormal3sv;
    gl14POrtho fnOrtho;
    gl14PPassThrough fnPassThrough;
    gl14PPixelMapfv fnPixelMapfv;
    gl14PPixelMapuiv fnPixelMapuiv;
    gl14PPixelMapusv fnPixelMapusv;
    gl14PPixelStoref fnPixelStoref;
    gl14PPixelStorei fnPixelStorei;
    gl14PPixelTransferf fnPixelTransferf;
    gl14PPixelTransferi fnPixelTransferi;
    gl14PPixelZoom fnPixelZoom;
    gl14PPointSize fnPointSize;
    gl14PPolygonMode fnPolygonMode;
    gl14PPolygonStipple fnPolygonStipple;
    gl14PPushAttrib fnPushAttrib;
    gl14PPopAttrib fnPopAttrib;
    gl14PPushMatrix fnPushMatrix;
    gl14PPopMatrix fnPopMatrix;
    gl14PPushName fnPushName;
    gl14PPopName fnPopName;
    gl14PRasterPos2d fnRasterPos2d;
    gl14PRasterPos2f fnRasterPos2f;
    gl14PRasterPos2i fnRasterPos2i;
    gl14PRasterPos2s fnRasterPos2s;
    gl14PRasterPos3d fnRasterPos3d;
    gl14PRasterPos3f fnRasterPos3f;
    gl14PRasterPos3i fnRasterPos3i;
    gl14PRasterPos3s fnRasterPos3s;
    gl14PRasterPos4d fnRasterPos4d;
    gl14PRasterPos4f fnRasterPos4f;
    gl14PRasterPos4i fnRasterPos4i;
    gl14PRasterPos4s fnRasterPos4s;
    gl14PRasterPos2dv fnRasterPos2dv;
    gl14PRasterPos2fv fnRasterPos2fv;
    gl14PRasterPos2iv fnRasterPos2iv;
    gl14PRasterPos2sv fnRasterPos2sv;
    gl14PRasterPos3dv fnRasterPos3dv;
    gl14PRasterPos3fv fnRasterPos3fv;
    gl14PRasterPos3iv fnRasterPos3iv;
    gl14PRasterPos3sv fnRasterPos3sv;
    gl14PRasterPos4dv fnRasterPos4dv;
    gl14PRasterPos4fv fnRasterPos4fv;
    gl14PRasterPos4iv fnRasterPos4iv;
    gl14PRasterPos4sv fnRasterPos4sv;
    gl14PReadBuffer fnReadBuffer;
    gl14PReadPixels fnReadPixels;
    gl14PRectd fnRectd;
    gl14PRectf fnRectf;
    gl14PRecti fnRecti;
    gl14PRects fnRects;
    gl14PRectdv fnRectdv;
    gl14PRectfv fnRectfv;
    gl14PRectiv fnRectiv;
    gl14PRectsv fnRectsv;
    gl14PRenderMode fnRenderMode;
    gl14PRotated fnRotated;
    gl14PRotatef fnRotatef;
    gl14PScaled fnScaled;
    gl14PScalef fnScalef;
    gl14PScissor fnScissor;
    gl14PSelectBuffer fnSelectBuffer;
    gl14PShadeModel fnShadeModel;
    gl14PStencilFunc fnStencilFunc;
    gl14PStencilMask fnStencilMask;
    gl14PStencilOp fnStencilOp;
    gl14PTexCoord1d fnTexCoord1d;
    gl14PTexCoord1f fnTexCoord1f;
    gl14PTexCoord1i fnTexCoord1i;
    gl14PTexCoord1s fnTexCoord1s;
    gl14PTexCoord2d fnTexCoord2d;
    gl14PTexCoord2f fnTexCoord2f;
    gl14PTexCoord2i fnTexCoord2i;
    gl14PTexCoord2s fnTexCoord2s;
    gl14PTexCoord3d fnTexCoord3d;
    gl14PTexCoord3f fnTexCoord3f;
    gl14PTexCoord3i fnTexCoord3i;
    gl14PTexCoord3s fnTexCoord3s;
    gl14PTexCoord4d fnTexCoord4d;
    gl14PTexCoord4f fnTexCoord4f;
    gl14PTexCoord4i fnTexCoord4i;
    gl14PTexCoord4s fnTexCoord4s;
    gl14PTexCoord1dv fnTexCoord1dv;
    gl14PTexCoord1fv fnTexCoord1fv;
    gl14PTexCoord1iv fnTexCoord1iv;
    gl14PTexCoord1sv fnTexCoord1sv;
    gl14PTexCoord2dv fnTexCoord2dv;
    gl14PTexCoord2fv fnTexCoord2fv;
    gl14PTexCoord2iv fnTexCoord2iv;
    gl14PTexCoord2sv fnTexCoord2sv;
    gl14PTexCoord3dv fnTexCoord3dv;
    gl14PTexCoord3fv fnTexCoord3fv;
    gl14PTexCoord3iv fnTexCoord3iv;
    gl14PTexCoord3sv fnTexCoord3sv;
    gl14PTexCoord4dv fnTexCoord4dv;
    gl14PTexCoord4fv fnTexCoord4fv;
    gl14PTexCoord4iv fnTexCoord4iv;
    gl14PTexCoord4sv fnTexCoord4sv;
    gl14PTexEnvf fnTexEnvf;
    gl14PTexEnvi fnTexEnvi;
    gl14PTexEnvfv fnTexEnvfv;
    gl14PTexEnviv fnTexEnviv;
    gl14PTexGend fnTexGend;
    gl14PTexGenf fnTexGenf;
    gl14PTexGeni fnTexGeni;
    gl14PTexGendv fnTexGendv;
    gl14PTexGenfv fnTexGenfv;
    gl14PTexGeniv fnTexGeniv;
    gl14PTexImage1D fnTexImage1D;
    gl14PTexImage2D fnTexImage2D;
    gl14PTexParameterf fnTexParameterf;
    gl14PTexParameteri fnTexParameteri;
    gl14PTexParameterfv fnTexParameterfv;
    gl14PTexParameteriv fnTexParameteriv;
    gl14PTranslated fnTranslated;
    gl14PTranslatef fnTranslatef;
    gl14PVertex2s fnVertex2s;
    gl14PVertex2i fnVertex2i;
    gl14PVertex2f fnVertex2f;
    gl14PVertex2d fnVertex2d;
    gl14PVertex3s fnVertex3s;
    gl14PVertex3i fnVertex3i;
    gl14PVertex3f fnVertex3f;
    gl14PVertex3d fnVertex3d;
    gl14PVertex4s fnVertex4s;
    gl14PVertex4i fnVertex4i;
    gl14PVertex4f fnVertex4f;
    gl14PVertex4d fnVertex4d;
    gl14PViewport fnViewport;
    gl14PGetColorTable fnGetColorTable;
    gl14PGetColorTableParameterfv fnGetColorTableParameterfv;
    gl14PGetColorTableParameteriv fnGetColorTableParameteriv;
    gl14PGetConvolutionFilter fnGetConvolutionFilter;
    gl14PGetConvolutionParameterfv fnGetConvolutionParameterfv;
    gl14PGetConvolutionParameteriv fnGetConvolutionParameteriv;
    gl14PGetHistogram fnGetHistogram;
    gl14PGetHistogramParameterfv fnGetHistogramParameterfv;
    gl14PGetHistogramParameteriv fnGetHistogramParameteriv;
    gl14PGetSeparableFilter fnGetSeparableFilter;
    gl14PHistogram fnHistogram;
    gl14PMinmax fnMinmax;
    gl14PMultiTexCoord1s fnMultiTexCoord1s;
    gl14PMultiTexCoord1i fnMultiTexCoord1i;
    gl14PMultiTexCoord1f fnMultiTexCoord1f;
    gl14PMultiTexCoord1d fnMultiTexCoord1d;
    gl14PMultiTexCoord2s fnMultiTexCoord2s;
    gl14PMultiTexCoord2i fnMultiTexCoord2i;
    gl14PMultiTexCoord2f fnMultiTexCoord2f;
    gl14PMultiTexCoord2d fnMultiTexCoord2d;
    gl14PMultiTexCoord3s fnMultiTexCoord3s;
    gl14PMultiTexCoord3i fnMultiTexCoord3i;
    gl14PMultiTexCoord3f fnMultiTexCoord3f;
    gl14PMultiTexCoord3d fnMultiTexCoord3d;
    gl14PMultiTexCoord4s fnMultiTexCoord4s;
    gl14PMultiTexCoord4i fnMultiTexCoord4i;
    gl14PMultiTexCoord4f fnMultiTexCoord4f;
    gl14PMultiTexCoord4d fnMultiTexCoord4d;
    gl14PMultiTexCoord1sv fnMultiTexCoord1sv;
    gl14PMultiTexCoord1iv fnMultiTexCoord1iv;
    gl14PMultiTexCoord1fv fnMultiTexCoord1fv;
    gl14PMultiTexCoord1dv fnMultiTexCoord1dv;
    gl14PMultiTexCoord2sv fnMultiTexCoord2sv;
    gl14PMultiTexCoord2iv fnMultiTexCoord2iv;
    gl14PMultiTexCoord2fv fnMultiTexCoord2fv;
    gl14PMultiTexCoord2dv fnMultiTexCoord2dv;
    gl14PMultiTexCoord3sv fnMultiTexCoord3sv;
    gl14PMultiTexCoord3iv fnMultiTexCoord3iv;
    gl14PMultiTexCoord3fv fnMultiTexCoord3fv;
    gl14PMultiTexCoord3dv fnMultiTexCoord3dv;
    gl14PMultiTexCoord4sv fnMultiTexCoord4sv;
    gl14PMultiTexCoord4iv fnMultiTexCoord4iv;
    gl14PMultiTexCoord4fv fnMultiTexCoord4fv;
    gl14PMultiTexCoord4dv fnMultiTexCoord4dv;
    gl14PResetHistogram fnResetHistogram;
    gl14PResetMinmax fnResetMinmax;
    gl14PSeparableFilter2D fnSeparableFilter2D;
    gl14PAreTexturesResident fnAreTexturesResident;
    gl14PArrayElement fnArrayElement;
    gl14PDrawArrays fnDrawArrays;
    gl14PDrawElements fnDrawElements;
    gl14PGetPointerv fnGetPointerv;
    gl14PPolygonOffset fnPolygonOffset;
    gl14PCopyTexImage1D fnCopyTexImage1D;
    gl14PCopyTexImage2D fnCopyTexImage2D;
    gl14PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl14PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl14PBindTexture fnBindTexture;
    gl14PDeleteTextures fnDeleteTextures;
    gl14PGenTextures fnGenTextures;
    gl14PIsTexture fnIsTexture;
    gl14PColorPointer fnColorPointer;
    gl14PEnableClientState fnEnableClientState;
    gl14PDisableClientState fnDisableClientState;
    gl14PIndexub fnIndexub;
    gl14PIndexubv fnIndexubv;
    gl14PInterleavedArrays fnInterleavedArrays;
    gl14PNormalPointer fnNormalPointer;
    gl14PPushClientAttrib fnPushClientAttrib;
    gl14PPrioritizeTextures fnPrioritizeTextures;
    gl14PPopClientAttrib fnPopClientAttrib;
    gl14PTexCoordPointer fnTexCoordPointer;
    gl14PTexSubImage1D fnTexSubImage1D;
    gl14PTexSubImage2D fnTexSubImage2D;
    gl14PVertexPointer fnVertexPointer;
    gl14PBlendColor fnBlendColor;
    gl14PBlendEquation fnBlendEquation;
    gl14PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl14PDrawRangeElements fnDrawRangeElements;
    gl14PTexImage3D fnTexImage3D;
    gl14PTexSubImage3D fnTexSubImage3D;
    gl14PActiveTexture fnActiveTexture;
    gl14PClientActiveTexture fnClientActiveTexture;
    gl14PCompressedTexImage1D fnCompressedTexImage1D;
    gl14PCompressedTexImage2D fnCompressedTexImage2D;
    gl14PCompressedTexImage3D fnCompressedTexImage3D;
    gl14PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl14PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl14PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl14PGetCompressedTexImage fnGetCompressedTexImage;
    gl14PLoadTransposeMatrixd fnLoadTransposeMatrixd;
    gl14PLoadTransposeMatrixf fnLoadTransposeMatrixf;
    gl14PMultTransposeMatrixd fnMultTransposeMatrixd;
    gl14PMultTransposeMatrixf fnMultTransposeMatrixf;
    gl14PSampleCoverage fnSampleCoverage;
    gl14PBlendFuncSeparate fnBlendFuncSeparate;
    gl14PFogCoordPointer fnFogCoordPointer;
    gl14PFogCoordd fnFogCoordd;
    gl14PFogCoordf fnFogCoordf;
    gl14PFogCoorddv fnFogCoorddv;
    gl14PFogCoordfv fnFogCoordfv;
    gl14PMultiDrawArrays fnMultiDrawArrays;
    gl14PMultiDrawElements fnMultiDrawElements;
    gl14PPointParameterf fnPointParameterf;
    gl14PPointParameteri fnPointParameteri;
    gl14PSecondaryColor3b fnSecondaryColor3b;
    gl14PSecondaryColor3s fnSecondaryColor3s;
    gl14PSecondaryColor3i fnSecondaryColor3i;
    gl14PSecondaryColor3f fnSecondaryColor3f;
    gl14PSecondaryColor3d fnSecondaryColor3d;
    gl14PSecondaryColor3ub fnSecondaryColor3ub;
    gl14PSecondaryColor3us fnSecondaryColor3us;
    gl14PSecondaryColor3ui fnSecondaryColor3ui;
    gl14PSecondaryColor3bv fnSecondaryColor3bv;
    gl14PSecondaryColor3sv fnSecondaryColor3sv;
    gl14PSecondaryColor3iv fnSecondaryColor3iv;
    gl14PSecondaryColor3fv fnSecondaryColor3fv;
    gl14PSecondaryColor3dv fnSecondaryColor3dv;
    gl14PSecondaryColor3ubv fnSecondaryColor3ubv;
    gl14PSecondaryColor3usv fnSecondaryColor3usv;
    gl14PSecondaryColor3uiv fnSecondaryColor3uiv;
    gl14PSecondaryColorPointer fnSecondaryColorPointer;
    gl14PWindowPos2s fnWindowPos2s;
    gl14PWindowPos2i fnWindowPos2i;
    gl14PWindowPos2f fnWindowPos2f;
    gl14PWindowPos2d fnWindowPos2d;
    gl14PWindowPos3s fnWindowPos3s;
    gl14PWindowPos3i fnWindowPos3i;
    gl14PWindowPos3f fnWindowPos3f;
    gl14PWindowPos3d fnWindowPos3d;
    gl14PWindowPos2sv fnWindowPos2sv;
    gl14PWindowPos2iv fnWindowPos2iv;
    gl14PWindowPos2fv fnWindowPos2fv;
    gl14PWindowPos2dv fnWindowPos2dv;
    gl14PWindowPos3sv fnWindowPos3sv;
    gl14PWindowPos3iv fnWindowPos3iv;
    gl14PWindowPos3fv fnWindowPos3fv;
    gl14PWindowPos3dv fnWindowPos3dv;
} gl14Context;

extern gl14Context* gl14NewContext();
void gl14Accum(gl14Context* glc, GLenum op, GLfloat value);
void gl14AlphaFunc(gl14Context* glc, GLenum func, GLclampf ref);
void gl14Begin(gl14Context* glc, GLenum mode);
void gl14End(gl14Context* glc);
void gl14Bitmap(gl14Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl14BlendFunc(gl14Context* glc, GLenum sfactor, GLenum dfactor);
void gl14CallList(gl14Context* glc, GLuint list);
void gl14CallLists(gl14Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl14Clear(gl14Context* glc, GLbitfield mask);
void gl14ClearAccum(gl14Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl14ClearColor(gl14Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl14ClearDepth(gl14Context* glc, GLclampd depth);
void gl14ClearIndex(gl14Context* glc, GLfloat c);
void gl14ClearStencil(gl14Context* glc, GLint s);
void gl14ClipPlane(gl14Context* glc, GLenum plane, GLdouble* equation);
void gl14Color3b(gl14Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl14Color3d(gl14Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl14Color3f(gl14Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl14Color3i(gl14Context* glc, GLint red, GLint green, GLint blue);
void gl14Color3s(gl14Context* glc, GLshort red, GLshort green, GLshort blue);
void gl14Color3ub(gl14Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl14Color3ui(gl14Context* glc, GLuint red, GLuint green, GLuint blue);
void gl14Color3us(gl14Context* glc, GLushort red, GLushort green, GLushort blue);
void gl14Color4b(gl14Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl14Color4d(gl14Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl14Color4f(gl14Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl14Color4i(gl14Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl14Color4s(gl14Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl14Color4ub(gl14Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl14Color4ui(gl14Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl14Color4us(gl14Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl14Color3bv(gl14Context* glc, GLbyte* v);
void gl14Color3dv(gl14Context* glc, GLdouble* v);
void gl14Color3fv(gl14Context* glc, GLfloat* v);
void gl14Color3iv(gl14Context* glc, GLint* v);
void gl14Color3sv(gl14Context* glc, GLshort* v);
void gl14Color3ubv(gl14Context* glc, GLubyte* v);
void gl14Color3uiv(gl14Context* glc, GLuint* v);
void gl14Color3usv(gl14Context* glc, GLushort* v);
void gl14Color4bv(gl14Context* glc, GLbyte* v);
void gl14Color4dv(gl14Context* glc, GLdouble* v);
void gl14Color4fv(gl14Context* glc, GLfloat* v);
void gl14Color4iv(gl14Context* glc, GLint* v);
void gl14Color4sv(gl14Context* glc, GLshort* v);
void gl14Color4ubv(gl14Context* glc, GLubyte* v);
void gl14Color4uiv(gl14Context* glc, GLuint* v);
void gl14Color4usv(gl14Context* glc, GLushort* v);
void gl14ColorMask(gl14Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl14ColorMaterial(gl14Context* glc, GLenum face, GLenum mode);
void gl14ColorTable(gl14Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl14ColorTableParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14ColorTableParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14ColorSubTable(gl14Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl14CopyPixels(gl14Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl14CullFace(gl14Context* glc, GLenum mode);
void gl14ConvolutionFilter1D(gl14Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl14ConvolutionFilter2D(gl14Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl14ConvolutionParameterf(gl14Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl14ConvolutionParameteri(gl14Context* glc, GLenum target, GLenum pname, GLint params);
void gl14CopyColorTable(gl14Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl14CopyColorSubTable(gl14Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl14CopyConvolutionFilter1D(gl14Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl14CopyConvolutionFilter2D(gl14Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl14DeleteLists(gl14Context* glc, GLuint list, GLsizei range);
void gl14DepthFunc(gl14Context* glc, GLenum func);
void gl14DepthMask(gl14Context* glc, GLboolean flag);
void gl14DepthRange(gl14Context* glc, GLclampd zNear, GLclampd zFar);
void gl14Enable(gl14Context* glc, GLenum cap);
void gl14Disable(gl14Context* glc, GLenum cap);
void gl14DrawBuffer(gl14Context* glc, GLenum mode);
void gl14DrawPixels(gl14Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl14EdgeFlag(gl14Context* glc, GLboolean flag);
void gl14EdgeFlagv(gl14Context* glc, GLboolean* flag);
void gl14EdgeFlagPointer(gl14Context* glc, GLsizei stride, GLvoid* pointer);
void gl14EvalCoord1d(gl14Context* glc, GLdouble u);
void gl14EvalCoord1f(gl14Context* glc, GLfloat u);
void gl14EvalCoord2d(gl14Context* glc, GLdouble u, GLdouble v);
void gl14EvalCoord2f(gl14Context* glc, GLfloat u, GLfloat v);
void gl14EvalCoord1dv(gl14Context* glc, GLdouble* u);
void gl14EvalCoord1fv(gl14Context* glc, GLfloat* u);
void gl14EvalCoord2dv(gl14Context* glc, GLdouble* u);
void gl14EvalCoord2fv(gl14Context* glc, GLfloat* u);
void gl14EvalMesh1(gl14Context* glc, GLenum mode, GLint i1, GLint i2);
void gl14EvalMesh2(gl14Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl14EvalPoint1(gl14Context* glc, GLint i);
void gl14EvalPoint2(gl14Context* glc, GLint i, GLint j);
void gl14FeedbackBuffer(gl14Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl14Finish(gl14Context* glc);
void gl14Flush(gl14Context* glc);
void gl14Fogf(gl14Context* glc, GLenum pname, GLfloat param);
void gl14Fogi(gl14Context* glc, GLenum pname, GLint param);
void gl14Fogfv(gl14Context* glc, GLenum pname, GLfloat* params);
void gl14Fogiv(gl14Context* glc, GLenum pname, GLint* params);
void gl14FrontFace(gl14Context* glc, GLenum mode);
void gl14Frustum(gl14Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl14GenLists(gl14Context* glc, GLsizei range);
void gl14GetBooleanv(gl14Context* glc, GLenum pname, GLboolean* params);
void gl14GetDoublev(gl14Context* glc, GLenum pname, GLdouble* params);
void gl14GetFloatv(gl14Context* glc, GLenum pname, GLfloat* params);
void gl14GetIntegerv(gl14Context* glc, GLenum pname, GLint* params);
void gl14GetClipPlane(gl14Context* glc, GLenum plane, GLdouble* equation);
GLenum gl14GetError(gl14Context* glc);
void gl14GetLightfv(gl14Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl14GetLightiv(gl14Context* glc, GLenum light, GLenum pname, GLint* params);
void gl14GetMapdv(gl14Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl14GetMapfv(gl14Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl14GetMapiv(gl14Context* glc, GLenum target, GLenum query, GLint* v);
void gl14GetMaterialfv(gl14Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl14GetMaterialiv(gl14Context* glc, GLenum face, GLenum pname, GLint* params);
void gl14GetPixelMapfv(gl14Context* glc, GLenum map, GLfloat* values);
void gl14GetPixelMapuiv(gl14Context* glc, GLenum map, GLuint* values);
void gl14GetPixelMapusv(gl14Context* glc, GLenum map, GLushort* values);
void gl14GetPolygonStipple(gl14Context* glc, GLubyte* pattern);
GLubyte* gl14GetString(gl14Context* glc, GLenum name);
void gl14GetTexEnvfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14GetTexEnviv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14GetTexGendv(gl14Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl14GetTexGenfv(gl14Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl14GetTexGeniv(gl14Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl14GetTexImage(gl14Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl14GetTexLevelParameterfv(gl14Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl14GetTexLevelParameteriv(gl14Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl14GetTexParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14GetTexParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14Hint(gl14Context* glc, GLenum target, GLenum mode);
void gl14Indexd(gl14Context* glc, GLdouble c);
void gl14Indexf(gl14Context* glc, GLfloat c);
void gl14Indexi(gl14Context* glc, GLint c);
void gl14Indexs(gl14Context* glc, GLshort c);
void gl14Indexdv(gl14Context* glc, GLdouble* c);
void gl14Indexfv(gl14Context* glc, GLfloat* c);
void gl14Indexiv(gl14Context* glc, GLint* c);
void gl14Indexsv(gl14Context* glc, GLshort* c);
void gl14IndexMask(gl14Context* glc, GLuint mask);
void gl14IndexPointer(gl14Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14InitNames(gl14Context* glc);
void gl14IsEnabled(gl14Context* glc, GLenum cap);
GLboolean gl14IsList(gl14Context* glc, GLuint list);
void gl14Lightf(gl14Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl14Lighti(gl14Context* glc, GLenum light, GLenum pname, GLint param);
void gl14Lightfv(gl14Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl14Lightiv(gl14Context* glc, GLenum light, GLenum pname, GLint* params);
void gl14LightModelf(gl14Context* glc, GLenum pname, GLfloat param);
void gl14LightModeli(gl14Context* glc, GLenum pname, GLint param);
void gl14LightModelfv(gl14Context* glc, GLenum pname, GLfloat* params);
void gl14LightModeliv(gl14Context* glc, GLenum pname, GLint* params);
void gl14LineStipple(gl14Context* glc, GLint factor, GLushort pattern);
void gl14LineWidth(gl14Context* glc, GLfloat width);
void gl14ListBase(gl14Context* glc, GLuint base);
void gl14LoadIdentity(gl14Context* glc);
void gl14LoadMatrixd(gl14Context* glc, GLdouble* m);
void gl14LoadMatrixf(gl14Context* glc, GLfloat* m);
void gl14LoadName(gl14Context* glc, GLuint name);
void gl14LogicOp(gl14Context* glc, GLenum opcode);
void gl14Map1d(gl14Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl14Map1f(gl14Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl14Map2d(gl14Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl14Map2f(gl14Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl14MapGrid1d(gl14Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl14MapGrid1f(gl14Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl14MapGrid2d(gl14Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl14MapGrid2f(gl14Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl14Materialf(gl14Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl14Materiali(gl14Context* glc, GLenum face, GLenum pname, GLint param);
void gl14Materialfv(gl14Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl14Materialiv(gl14Context* glc, GLenum face, GLenum pname, GLint* params);
void gl14MatrixMode(gl14Context* glc, GLenum mode);
void gl14MultMatrixd(gl14Context* glc, GLdouble* m);
void gl14MultMatrixf(gl14Context* glc, GLfloat* m);
void gl14NewList(gl14Context* glc, GLuint list, GLenum mode);
void gl14EndList(gl14Context* glc);
void gl14Normal3b(gl14Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl14Normal3d(gl14Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl14Normal3f(gl14Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl14Normal3i(gl14Context* glc, GLint nx, GLint ny, GLint nz);
void gl14Normal3s(gl14Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl14Normal3bv(gl14Context* glc, GLbyte* v);
void gl14Normal3dv(gl14Context* glc, GLdouble* v);
void gl14Normal3fv(gl14Context* glc, GLfloat* v);
void gl14Normal3iv(gl14Context* glc, GLint* v);
void gl14Normal3sv(gl14Context* glc, GLshort* v);
void gl14Ortho(gl14Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl14PassThrough(gl14Context* glc, GLfloat token);
void gl14PixelMapfv(gl14Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl14PixelMapuiv(gl14Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl14PixelMapusv(gl14Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl14PixelStoref(gl14Context* glc, GLenum pname, GLfloat param);
void gl14PixelStorei(gl14Context* glc, GLenum pname, GLint param);
void gl14PixelTransferf(gl14Context* glc, GLenum pname, GLfloat param);
void gl14PixelTransferi(gl14Context* glc, GLenum pname, GLint param);
void gl14PixelZoom(gl14Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl14PointSize(gl14Context* glc, GLfloat size);
void gl14PolygonMode(gl14Context* glc, GLenum face, GLenum mode);
void gl14PolygonStipple(gl14Context* glc, GLubyte* mask);
void gl14PushAttrib(gl14Context* glc, GLbitfield mask);
void gl14PopAttrib(gl14Context* glc);
void gl14PushMatrix(gl14Context* glc);
void gl14PopMatrix(gl14Context* glc);
void gl14PushName(gl14Context* glc, GLuint name);
void gl14PopName(gl14Context* glc);
void gl14RasterPos2d(gl14Context* glc, GLdouble x, GLdouble y);
void gl14RasterPos2f(gl14Context* glc, GLfloat x, GLfloat y);
void gl14RasterPos2i(gl14Context* glc, GLint x, GLint y);
void gl14RasterPos2s(gl14Context* glc, GLshort x, GLshort y);
void gl14RasterPos3d(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl14RasterPos3f(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl14RasterPos3i(gl14Context* glc, GLint x, GLint y, GLint z);
void gl14RasterPos3s(gl14Context* glc, GLshort x, GLshort y, GLshort z);
void gl14RasterPos4d(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl14RasterPos4f(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl14RasterPos4i(gl14Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl14RasterPos4s(gl14Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl14RasterPos2dv(gl14Context* glc, GLdouble* v);
void gl14RasterPos2fv(gl14Context* glc, GLfloat* v);
void gl14RasterPos2iv(gl14Context* glc, GLint* v);
void gl14RasterPos2sv(gl14Context* glc, GLshort* v);
void gl14RasterPos3dv(gl14Context* glc, GLdouble* v);
void gl14RasterPos3fv(gl14Context* glc, GLfloat* v);
void gl14RasterPos3iv(gl14Context* glc, GLint* v);
void gl14RasterPos3sv(gl14Context* glc, GLshort* v);
void gl14RasterPos4dv(gl14Context* glc, GLdouble* v);
void gl14RasterPos4fv(gl14Context* glc, GLfloat* v);
void gl14RasterPos4iv(gl14Context* glc, GLint* v);
void gl14RasterPos4sv(gl14Context* glc, GLshort* v);
void gl14ReadBuffer(gl14Context* glc, GLenum mode);
void gl14ReadPixels(gl14Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl14Rectd(gl14Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl14Rectf(gl14Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl14Recti(gl14Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl14Rects(gl14Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl14Rectdv(gl14Context* glc, GLdouble* v1, GLdouble* v2);
void gl14Rectfv(gl14Context* glc, GLfloat* v1, GLfloat* v2);
void gl14Rectiv(gl14Context* glc, GLint* v1, GLint* v2);
void gl14Rectsv(gl14Context* glc, GLshort* v1, GLshort* v2);
GLint gl14RenderMode(gl14Context* glc, GLenum mode);
void gl14Rotated(gl14Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl14Rotatef(gl14Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl14Scaled(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl14Scalef(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl14Scissor(gl14Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl14SelectBuffer(gl14Context* glc, GLsizei size, GLuint* buffer);
void gl14ShadeModel(gl14Context* glc, GLenum mode);
void gl14StencilFunc(gl14Context* glc, GLenum func, GLint ref, GLuint mask);
void gl14StencilMask(gl14Context* glc, GLuint mask);
void gl14StencilOp(gl14Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl14TexCoord1d(gl14Context* glc, GLdouble s);
void gl14TexCoord1f(gl14Context* glc, GLfloat s);
void gl14TexCoord1i(gl14Context* glc, GLint s);
void gl14TexCoord1s(gl14Context* glc, GLshort s);
void gl14TexCoord2d(gl14Context* glc, GLdouble s, GLdouble t);
void gl14TexCoord2f(gl14Context* glc, GLfloat s, GLfloat t);
void gl14TexCoord2i(gl14Context* glc, GLint s, GLint t);
void gl14TexCoord2s(gl14Context* glc, GLshort s, GLshort t);
void gl14TexCoord3d(gl14Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl14TexCoord3f(gl14Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl14TexCoord3i(gl14Context* glc, GLint s, GLint t, GLint r);
void gl14TexCoord3s(gl14Context* glc, GLshort s, GLshort t, GLshort r);
void gl14TexCoord4d(gl14Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl14TexCoord4f(gl14Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl14TexCoord4i(gl14Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl14TexCoord4s(gl14Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl14TexCoord1dv(gl14Context* glc, GLdouble* v);
void gl14TexCoord1fv(gl14Context* glc, GLfloat* v);
void gl14TexCoord1iv(gl14Context* glc, GLint* v);
void gl14TexCoord1sv(gl14Context* glc, GLshort* v);
void gl14TexCoord2dv(gl14Context* glc, GLdouble* v);
void gl14TexCoord2fv(gl14Context* glc, GLfloat* v);
void gl14TexCoord2iv(gl14Context* glc, GLint* v);
void gl14TexCoord2sv(gl14Context* glc, GLshort* v);
void gl14TexCoord3dv(gl14Context* glc, GLdouble* v);
void gl14TexCoord3fv(gl14Context* glc, GLfloat* v);
void gl14TexCoord3iv(gl14Context* glc, GLint* v);
void gl14TexCoord3sv(gl14Context* glc, GLshort* v);
void gl14TexCoord4dv(gl14Context* glc, GLdouble* v);
void gl14TexCoord4fv(gl14Context* glc, GLfloat* v);
void gl14TexCoord4iv(gl14Context* glc, GLint* v);
void gl14TexCoord4sv(gl14Context* glc, GLshort* v);
void gl14TexEnvf(gl14Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl14TexEnvi(gl14Context* glc, GLenum target, GLenum pname, GLint param);
void gl14TexEnvfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14TexEnviv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14TexGend(gl14Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl14TexGenf(gl14Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl14TexGeni(gl14Context* glc, GLenum coord, GLenum pname, GLint param);
void gl14TexGendv(gl14Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl14TexGenfv(gl14Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl14TexGeniv(gl14Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl14TexImage1D(gl14Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl14TexImage2D(gl14Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl14TexParameterf(gl14Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl14TexParameteri(gl14Context* glc, GLenum target, GLenum pname, GLint param);
void gl14TexParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14TexParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14Translated(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl14Translatef(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl14Vertex2s(gl14Context* glc, GLshort x, GLshort y);
void gl14Vertex2i(gl14Context* glc, GLint x, GLint y);
void gl14Vertex2f(gl14Context* glc, GLfloat x, GLfloat y);
void gl14Vertex2d(gl14Context* glc, GLdouble x, GLdouble y);
void gl14Vertex3s(gl14Context* glc, GLshort x, GLshort y, GLshort z);
void gl14Vertex3i(gl14Context* glc, GLint x, GLint y, GLint z);
void gl14Vertex3f(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl14Vertex3d(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl14Vertex4s(gl14Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl14Vertex4i(gl14Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl14Vertex4f(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl14Vertex4d(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl14Viewport(gl14Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl14GetColorTable(gl14Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* table);
void gl14GetColorTableParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14GetColorTableParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14GetConvolutionFilter(gl14Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* image);
void gl14GetConvolutionParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14GetConvolutionParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14GetHistogram(gl14Context* glc, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
void gl14GetHistogramParameterfv(gl14Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl14GetHistogramParameteriv(gl14Context* glc, GLenum target, GLenum pname, GLint* params);
void gl14GetSeparableFilter(gl14Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
void gl14Histogram(gl14Context* glc, GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void gl14Minmax(gl14Context* glc, GLenum target, GLenum internalformat, GLboolean sink);
void gl14MultiTexCoord1s(gl14Context* glc, GLenum target, GLshort s);
void gl14MultiTexCoord1i(gl14Context* glc, GLenum target, GLint s);
void gl14MultiTexCoord1f(gl14Context* glc, GLenum target, GLfloat s);
void gl14MultiTexCoord1d(gl14Context* glc, GLenum target, GLdouble s);
void gl14MultiTexCoord2s(gl14Context* glc, GLenum target, GLshort s, GLshort t);
void gl14MultiTexCoord2i(gl14Context* glc, GLenum target, GLint s, GLint t);
void gl14MultiTexCoord2f(gl14Context* glc, GLenum target, GLfloat s, GLfloat t);
void gl14MultiTexCoord2d(gl14Context* glc, GLenum target, GLdouble s, GLdouble t);
void gl14MultiTexCoord3s(gl14Context* glc, GLenum target, GLshort s, GLshort t, GLshort r);
void gl14MultiTexCoord3i(gl14Context* glc, GLenum target, GLint s, GLint t, GLint r);
void gl14MultiTexCoord3f(gl14Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl14MultiTexCoord3d(gl14Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl14MultiTexCoord4s(gl14Context* glc, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl14MultiTexCoord4i(gl14Context* glc, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl14MultiTexCoord4f(gl14Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl14MultiTexCoord4d(gl14Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl14MultiTexCoord1sv(gl14Context* glc, GLenum target, GLshort* v);
void gl14MultiTexCoord1iv(gl14Context* glc, GLenum target, GLint* v);
void gl14MultiTexCoord1fv(gl14Context* glc, GLenum target, GLfloat* v);
void gl14MultiTexCoord1dv(gl14Context* glc, GLenum target, GLdouble* v);
void gl14MultiTexCoord2sv(gl14Context* glc, GLenum target, GLshort* v);
void gl14MultiTexCoord2iv(gl14Context* glc, GLenum target, GLint* v);
void gl14MultiTexCoord2fv(gl14Context* glc, GLenum target, GLfloat* v);
void gl14MultiTexCoord2dv(gl14Context* glc, GLenum target, GLdouble* v);
void gl14MultiTexCoord3sv(gl14Context* glc, GLenum target, GLshort* v);
void gl14MultiTexCoord3iv(gl14Context* glc, GLenum target, GLint* v);
void gl14MultiTexCoord3fv(gl14Context* glc, GLenum target, GLfloat* v);
void gl14MultiTexCoord3dv(gl14Context* glc, GLenum target, GLdouble* v);
void gl14MultiTexCoord4sv(gl14Context* glc, GLenum target, GLshort* v);
void gl14MultiTexCoord4iv(gl14Context* glc, GLenum target, GLint* v);
void gl14MultiTexCoord4fv(gl14Context* glc, GLenum target, GLfloat* v);
void gl14MultiTexCoord4dv(gl14Context* glc, GLenum target, GLdouble* v);
void gl14ResetHistogram(gl14Context* glc, GLenum target);
void gl14ResetMinmax(gl14Context* glc, GLenum target);
void gl14SeparableFilter2D(gl14Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
GLboolean gl14AreTexturesResident(gl14Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl14ArrayElement(gl14Context* glc, GLint i);
void gl14DrawArrays(gl14Context* glc, GLenum mode, GLint first, GLsizei count);
void gl14DrawElements(gl14Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl14GetPointerv(gl14Context* glc, GLenum pname, GLvoid* params);
void gl14PolygonOffset(gl14Context* glc, GLfloat factor, GLfloat units);
void gl14CopyTexImage1D(gl14Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl14CopyTexImage2D(gl14Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl14CopyTexSubImage1D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl14CopyTexSubImage2D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl14BindTexture(gl14Context* glc, GLenum target, GLuint texture);
void gl14DeleteTextures(gl14Context* glc, GLsizei n, GLuint* textures);
void gl14GenTextures(gl14Context* glc, GLsizei n, GLuint* textures);
GLboolean gl14IsTexture(gl14Context* glc, GLuint texture);
void gl14ColorPointer(gl14Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14EnableClientState(gl14Context* glc, GLenum cap);
void gl14DisableClientState(gl14Context* glc, GLenum cap);
void gl14Indexub(gl14Context* glc, GLubyte c);
void gl14Indexubv(gl14Context* glc, GLubyte* c);
void gl14InterleavedArrays(gl14Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl14NormalPointer(gl14Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14PushClientAttrib(gl14Context* glc, GLbitfield mask);
void gl14PrioritizeTextures(gl14Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl14PopClientAttrib(gl14Context* glc);
void gl14TexCoordPointer(gl14Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14TexSubImage1D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl14TexSubImage2D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl14VertexPointer(gl14Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14BlendColor(gl14Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl14BlendEquation(gl14Context* glc, GLenum mode);
void gl14CopyTexSubImage3D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl14DrawRangeElements(gl14Context* glc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
void gl14TexImage3D(gl14Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl14TexSubImage3D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl14ActiveTexture(gl14Context* glc, GLenum texture);
void gl14ClientActiveTexture(gl14Context* glc, GLenum texture);
void gl14CompressedTexImage1D(gl14Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl14CompressedTexImage2D(gl14Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl14CompressedTexImage3D(gl14Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl14CompressedTexSubImage1D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl14CompressedTexSubImage2D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl14CompressedTexSubImage3D(gl14Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl14GetCompressedTexImage(gl14Context* glc, GLenum target, GLint lod, GLvoid* img);
void gl14LoadTransposeMatrixd(gl14Context* glc, GLdouble* m);
void gl14LoadTransposeMatrixf(gl14Context* glc, GLdouble* m);
void gl14MultTransposeMatrixd(gl14Context* glc, GLdouble* m);
void gl14MultTransposeMatrixf(gl14Context* glc, GLfloat* m);
void gl14SampleCoverage(gl14Context* glc, GLclampf value, GLboolean invert);
void gl14BlendFuncSeparate(gl14Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl14FogCoordPointer(gl14Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14FogCoordd(gl14Context* glc, GLdouble coord);
void gl14FogCoordf(gl14Context* glc, GLfloat coord);
void gl14FogCoorddv(gl14Context* glc, GLdouble* coord);
void gl14FogCoordfv(gl14Context* glc, GLfloat* coord);
void gl14MultiDrawArrays(gl14Context* glc, GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
void gl14MultiDrawElements(gl14Context* glc, GLenum mode, GLsizei* count, GLenum type, GLvoid* indices, GLsizei primcount);
void gl14PointParameterf(gl14Context* glc, GLenum pname, GLfloat param);
void gl14PointParameteri(gl14Context* glc, GLenum pname, GLint param);
void gl14SecondaryColor3b(gl14Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl14SecondaryColor3s(gl14Context* glc, GLshort red, GLshort green, GLshort blue);
void gl14SecondaryColor3i(gl14Context* glc, GLint red, GLint green, GLint blue);
void gl14SecondaryColor3f(gl14Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl14SecondaryColor3d(gl14Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl14SecondaryColor3ub(gl14Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl14SecondaryColor3us(gl14Context* glc, GLushort red, GLushort green, GLushort blue);
void gl14SecondaryColor3ui(gl14Context* glc, GLuint red, GLuint green, GLuint blue);
void gl14SecondaryColor3bv(gl14Context* glc, GLbyte* v);
void gl14SecondaryColor3sv(gl14Context* glc, GLshort* v);
void gl14SecondaryColor3iv(gl14Context* glc, GLint* v);
void gl14SecondaryColor3fv(gl14Context* glc, GLfloat* v);
void gl14SecondaryColor3dv(gl14Context* glc, GLdouble* v);
void gl14SecondaryColor3ubv(gl14Context* glc, GLubyte* v);
void gl14SecondaryColor3usv(gl14Context* glc, GLushort* v);
void gl14SecondaryColor3uiv(gl14Context* glc, GLuint* v);
void gl14SecondaryColorPointer(gl14Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl14WindowPos2s(gl14Context* glc, GLshort x, GLshort y);
void gl14WindowPos2i(gl14Context* glc, GLint x, GLint y);
void gl14WindowPos2f(gl14Context* glc, GLfloat x, GLfloat y);
void gl14WindowPos2d(gl14Context* glc, GLdouble x, GLdouble y);
void gl14WindowPos3s(gl14Context* glc, GLshort x, GLshort y, GLshort z);
void gl14WindowPos3i(gl14Context* glc, GLint x, GLint y, GLint z);
void gl14WindowPos3f(gl14Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl14WindowPos3d(gl14Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl14WindowPos2sv(gl14Context* glc, GLshort* v);
void gl14WindowPos2iv(gl14Context* glc, GLint* v);
void gl14WindowPos2fv(gl14Context* glc, GLfloat* v);
void gl14WindowPos2dv(gl14Context* glc, GLdouble* v);
void gl14WindowPos3sv(gl14Context* glc, GLshort* v);
void gl14WindowPos3iv(gl14Context* glc, GLint* v);
void gl14WindowPos3fv(gl14Context* glc, GLfloat* v);
void gl14WindowPos3dv(gl14Context* glc, GLdouble* v);
