#include <stdbool.h>
#include <stdlib.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;

typedef void(*gl21PAccum)(GLenum, GLfloat);
typedef void(*gl21PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl21PBegin)(GLenum);
typedef void(*gl21PEnd)();
typedef void(*gl21PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl21PBlendFunc)(GLenum, GLenum);
typedef void(*gl21PCallList)(GLuint);
typedef void(*gl21PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl21PClear)(GLbitfield);
typedef void(*gl21PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl21PClearDepth)(GLclampd);
typedef void(*gl21PClearIndex)(GLfloat);
typedef void(*gl21PClearStencil)(GLint);
typedef void(*gl21PClipPlane)(GLenum, GLdouble*);
typedef void(*gl21PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl21PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PColor3i)(GLint, GLint, GLint);
typedef void(*gl21PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl21PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl21PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl21PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl21PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl21PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl21PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl21PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl21PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl21PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl21PColor3bv)(GLbyte*);
typedef void(*gl21PColor3dv)(GLdouble*);
typedef void(*gl21PColor3fv)(GLfloat*);
typedef void(*gl21PColor3iv)(GLint*);
typedef void(*gl21PColor3sv)(GLshort*);
typedef void(*gl21PColor3ubv)(GLubyte*);
typedef void(*gl21PColor3uiv)(GLuint*);
typedef void(*gl21PColor3usv)(GLushort*);
typedef void(*gl21PColor4bv)(GLbyte*);
typedef void(*gl21PColor4dv)(GLdouble*);
typedef void(*gl21PColor4fv)(GLfloat*);
typedef void(*gl21PColor4iv)(GLint*);
typedef void(*gl21PColor4sv)(GLshort*);
typedef void(*gl21PColor4ubv)(GLubyte*);
typedef void(*gl21PColor4uiv)(GLuint*);
typedef void(*gl21PColor4usv)(GLushort*);
typedef void(*gl21PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl21PColorMaterial)(GLenum, GLenum);
typedef void(*gl21PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl21PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl21PCullFace)(GLenum);
typedef void(*gl21PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl21PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl21PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl21PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl21PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl21PDeleteLists)(GLuint, GLsizei);
typedef void(*gl21PDepthFunc)(GLenum);
typedef void(*gl21PDepthRange)(GLclampd, GLclampd);
typedef void(*gl21PEnable)(GLenum);
typedef void(*gl21PDisable)(GLenum);
typedef void(*gl21PDrawBuffer)(GLenum);
typedef void(*gl21PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PEdgeFlag)(GLboolean);
typedef void(*gl21PEdgeFlagv)(GLboolean*);
typedef void(*gl21PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl21PEnableClientState)(GLenum);
typedef void(*gl21PDisableClientState)(GLenum);
typedef void(*gl21PEvalCoord1d)(GLdouble);
typedef void(*gl21PEvalCoord1f)(GLfloat);
typedef void(*gl21PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl21PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl21PEvalCoord1dv)(GLdouble*);
typedef void(*gl21PEvalCoord1fv)(GLfloat*);
typedef void(*gl21PEvalCoord2dv)(GLdouble*);
typedef void(*gl21PEvalCoord2fv)(GLfloat*);
typedef void(*gl21PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl21PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl21PEvalPoint1)(GLint);
typedef void(*gl21PEvalPoint2)(GLint, GLint);
typedef void(*gl21PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl21PFinish)();
typedef void(*gl21PFlush)();
typedef void(*gl21PFogf)(GLenum, GLfloat);
typedef void(*gl21PFogi)(GLenum, GLint);
typedef void(*gl21PFogfv)(GLenum, GLfloat*);
typedef void(*gl21PFogiv)(GLenum, GLint*);
typedef void(*gl21PFrontFace)(GLenum);
typedef void(*gl21PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl21PGenLists)(GLsizei);
typedef void(*gl21PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl21PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl21PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl21PGetIntegerv)(GLenum, GLint*);
typedef void(*gl21PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl21PGetError)();
typedef void(*gl21PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl21PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl21PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl21PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl21PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl21PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl21PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl21PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl21PGetString)(GLenum);
typedef void(*gl21PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl21PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl21PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl21PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl21PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl21PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl21PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl21PHint)(GLenum, GLenum);
typedef void(*gl21PIndexd)(GLdouble);
typedef void(*gl21PIndexf)(GLfloat);
typedef void(*gl21PIndexi)(GLint);
typedef void(*gl21PIndexs)(GLshort);
typedef void(*gl21PIndexub)(GLubyte);
typedef void(*gl21PIndexdv)(GLdouble*);
typedef void(*gl21PIndexfv)(GLfloat*);
typedef void(*gl21PIndexiv)(GLint*);
typedef void(*gl21PIndexsv)(GLshort*);
typedef void(*gl21PIndexubv)(GLubyte*);
typedef void(*gl21PIndexMask)(GLuint);
typedef void(*gl21PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl21PInitNames)();
typedef void(*gl21PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl21PIsEnabled)(GLenum);
typedef GLboolean(*gl21PIsList)(GLuint);
typedef void(*gl21PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PLighti)(GLenum, GLenum, GLint);
typedef void(*gl21PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl21PLightModelf)(GLenum, GLfloat);
typedef void(*gl21PLightModeli)(GLenum, GLint);
typedef void(*gl21PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl21PLightModeliv)(GLenum, GLint*);
typedef void(*gl21PLineStipple)(GLint, GLushort);
typedef void(*gl21PLineWidth)(GLfloat);
typedef void(*gl21PListBase)(GLuint);
typedef void(*gl21PLoadIdentity)();
typedef void(*gl21PLoadMatrixd)(GLdouble*);
typedef void(*gl21PLoadMatrixf)(GLfloat*);
typedef void(*gl21PLoadName)(GLuint);
typedef void(*gl21PLogicOp)(GLenum);
typedef void(*gl21PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl21PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl21PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl21PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl21PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl21PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl21PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl21PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl21PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl21PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl21PMatrixMode)(GLenum);
typedef void(*gl21PMultMatrixd)(GLdouble*);
typedef void(*gl21PMultMatrixf)(GLfloat*);
typedef void(*gl21PNewList)(GLuint, GLenum);
typedef void(*gl21PEndList)();
typedef void(*gl21PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl21PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PNormal3i)(GLint, GLint, GLint);
typedef void(*gl21PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl21PNormal3bv)(GLbyte*);
typedef void(*gl21PNormal3dv)(GLdouble*);
typedef void(*gl21PNormal3fv)(GLfloat*);
typedef void(*gl21PNormal3iv)(GLint*);
typedef void(*gl21PNormal3sv)(GLshort*);
typedef void(*gl21PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl21POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PPassThrough)(GLfloat);
typedef void(*gl21PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl21PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl21PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl21PPixelStoref)(GLenum, GLfloat);
typedef void(*gl21PPixelStorei)(GLenum, GLint);
typedef void(*gl21PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl21PPixelTransferi)(GLenum, GLint);
typedef void(*gl21PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl21PPointSize)(GLfloat);
typedef void(*gl21PPolygonMode)(GLenum, GLenum);
typedef void(*gl21PPolygonStipple)(GLubyte*);
typedef void(*gl21PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl21PPushAttrib)(GLbitfield);
typedef void(*gl21PPopAttrib)();
typedef void(*gl21PPushClientAttrib)(GLbitfield);
typedef void(*gl21PPopClientAttrib)();
typedef void(*gl21PPushMatrix)();
typedef void(*gl21PPopMatrix)();
typedef void(*gl21PPushName)(GLuint);
typedef void(*gl21PPopName)();
typedef void(*gl21PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl21PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl21PRasterPos2i)(GLint, GLint);
typedef void(*gl21PRasterPos2s)(GLshort, GLshort);
typedef void(*gl21PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl21PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl21PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl21PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl21PRasterPos2dv)(GLdouble*);
typedef void(*gl21PRasterPos2fv)(GLfloat*);
typedef void(*gl21PRasterPos2iv)(GLint*);
typedef void(*gl21PRasterPos2sv)(GLshort*);
typedef void(*gl21PRasterPos3dv)(GLdouble*);
typedef void(*gl21PRasterPos3fv)(GLfloat*);
typedef void(*gl21PRasterPos3iv)(GLint*);
typedef void(*gl21PRasterPos3sv)(GLshort*);
typedef void(*gl21PRasterPos4dv)(GLdouble*);
typedef void(*gl21PRasterPos4fv)(GLfloat*);
typedef void(*gl21PRasterPos4iv)(GLint*);
typedef void(*gl21PRasterPos4sv)(GLshort*);
typedef void(*gl21PReadBuffer)(GLenum);
typedef void(*gl21PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl21PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl21PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl21PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl21PRectiv)(GLint*, GLint*);
typedef void(*gl21PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl21PRenderMode)(GLenum);
typedef void(*gl21PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl21PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl21PShadeModel)(GLenum);
typedef void(*gl21PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl21PStencilMask)(GLuint);
typedef void(*gl21PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl21PTexCoord1d)(GLdouble);
typedef void(*gl21PTexCoord1f)(GLfloat);
typedef void(*gl21PTexCoord1i)(GLint);
typedef void(*gl21PTexCoord1s)(GLshort);
typedef void(*gl21PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl21PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl21PTexCoord2i)(GLint, GLint);
typedef void(*gl21PTexCoord2s)(GLshort, GLshort);
typedef void(*gl21PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl21PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl21PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl21PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl21PTexCoord1dv)(GLdouble*);
typedef void(*gl21PTexCoord1fv)(GLfloat*);
typedef void(*gl21PTexCoord1iv)(GLint*);
typedef void(*gl21PTexCoord1sv)(GLshort*);
typedef void(*gl21PTexCoord2dv)(GLdouble*);
typedef void(*gl21PTexCoord2fv)(GLfloat*);
typedef void(*gl21PTexCoord2iv)(GLint*);
typedef void(*gl21PTexCoord2sv)(GLshort*);
typedef void(*gl21PTexCoord3dv)(GLdouble*);
typedef void(*gl21PTexCoord3fv)(GLfloat*);
typedef void(*gl21PTexCoord3iv)(GLint*);
typedef void(*gl21PTexCoord3sv)(GLshort*);
typedef void(*gl21PTexCoord4dv)(GLdouble*);
typedef void(*gl21PTexCoord4fv)(GLfloat*);
typedef void(*gl21PTexCoord4iv)(GLint*);
typedef void(*gl21PTexCoord4sv)(GLshort*);
typedef void(*gl21PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl21PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl21PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl21PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl21PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl21PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl21PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTexImage3DEXT)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl21PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl21PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl21PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl21PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTexSubImage3DEXT)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl21PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PVertex2s)(GLshort, GLshort);
typedef void(*gl21PVertex2i)(GLint, GLint);
typedef void(*gl21PVertex2f)(GLfloat, GLfloat);
typedef void(*gl21PVertex2d)(GLdouble, GLdouble);
typedef void(*gl21PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl21PVertex3i)(GLint, GLint, GLint);
typedef void(*gl21PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl21PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl21PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl21PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl21PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl21PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl21PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef GLboolean(*gl21PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl21PArrayElement)(GLint);
typedef void(*gl21PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl21PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl21PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl21PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl21PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl21PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl21PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl21PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl21PBindTexture)(GLenum, GLuint);
typedef void(*gl21PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl21PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl21PIsTexture)(GLuint);
typedef void(*gl21PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PBlendColorEXT)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl21PBlendEquation)(GLenum);
typedef void(*gl21PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl21PActiveTexture)(GLenum);
typedef void(*gl21PClientActiveTexture)(GLenum);
typedef void(*gl21PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl21PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl21PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl21PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl21PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl21PBeginQuery)(GLenum, GLuint);
typedef void(*gl21PBindBuffer)(GLenum, GLuint);
typedef void(*gl21PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl21PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl21PAttachShader)(GLuint, GLuint);
typedef void(*gl21PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl21PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl21PCompileShader)(GLuint);
typedef GLuint(*gl21PCreateProgram)();
typedef GLuint(*gl21PCreateShader)(GLenum);

typedef struct {
    gl21PAccum fnAccum;
    gl21PAlphaFunc fnAlphaFunc;
    gl21PBegin fnBegin;
    gl21PEnd fnEnd;
    gl21PBitmap fnBitmap;
    gl21PBlendFunc fnBlendFunc;
    gl21PCallList fnCallList;
    gl21PCallLists fnCallLists;
    gl21PClear fnClear;
    gl21PClearAccum fnClearAccum;
    gl21PClearColor fnClearColor;
    gl21PClearDepth fnClearDepth;
    gl21PClearIndex fnClearIndex;
    gl21PClearStencil fnClearStencil;
    gl21PClipPlane fnClipPlane;
    gl21PColor3b fnColor3b;
    gl21PColor3d fnColor3d;
    gl21PColor3f fnColor3f;
    gl21PColor3i fnColor3i;
    gl21PColor3s fnColor3s;
    gl21PColor3ub fnColor3ub;
    gl21PColor3ui fnColor3ui;
    gl21PColor3us fnColor3us;
    gl21PColor4b fnColor4b;
    gl21PColor4d fnColor4d;
    gl21PColor4f fnColor4f;
    gl21PColor4i fnColor4i;
    gl21PColor4s fnColor4s;
    gl21PColor4ub fnColor4ub;
    gl21PColor4ui fnColor4ui;
    gl21PColor4us fnColor4us;
    gl21PColor3bv fnColor3bv;
    gl21PColor3dv fnColor3dv;
    gl21PColor3fv fnColor3fv;
    gl21PColor3iv fnColor3iv;
    gl21PColor3sv fnColor3sv;
    gl21PColor3ubv fnColor3ubv;
    gl21PColor3uiv fnColor3uiv;
    gl21PColor3usv fnColor3usv;
    gl21PColor4bv fnColor4bv;
    gl21PColor4dv fnColor4dv;
    gl21PColor4fv fnColor4fv;
    gl21PColor4iv fnColor4iv;
    gl21PColor4sv fnColor4sv;
    gl21PColor4ubv fnColor4ubv;
    gl21PColor4uiv fnColor4uiv;
    gl21PColor4usv fnColor4usv;
    gl21PColorMask fnColorMask;
    gl21PColorMaterial fnColorMaterial;
    gl21PColorTable fnColorTable;
    gl21PColorTableParameterfv fnColorTableParameterfv;
    gl21PColorTableParameteriv fnColorTableParameteriv;
    gl21PColorSubTable fnColorSubTable;
    gl21PCopyPixels fnCopyPixels;
    gl21PCullFace fnCullFace;
    gl21PConvolutionFilter1D fnConvolutionFilter1D;
    gl21PConvolutionFilter2D fnConvolutionFilter2D;
    gl21PConvolutionParameterf fnConvolutionParameterf;
    gl21PConvolutionParameteri fnConvolutionParameteri;
    gl21PCopyColorTable fnCopyColorTable;
    gl21PCopyColorSubTable fnCopyColorSubTable;
    gl21PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl21PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl21PDeleteLists fnDeleteLists;
    gl21PDepthFunc fnDepthFunc;
    gl21PDepthRange fnDepthRange;
    gl21PEnable fnEnable;
    gl21PDisable fnDisable;
    gl21PDrawBuffer fnDrawBuffer;
    gl21PDrawPixels fnDrawPixels;
    gl21PEdgeFlag fnEdgeFlag;
    gl21PEdgeFlagv fnEdgeFlagv;
    gl21PEdgeFlagPointer fnEdgeFlagPointer;
    gl21PEnableClientState fnEnableClientState;
    gl21PDisableClientState fnDisableClientState;
    gl21PEvalCoord1d fnEvalCoord1d;
    gl21PEvalCoord1f fnEvalCoord1f;
    gl21PEvalCoord2d fnEvalCoord2d;
    gl21PEvalCoord2f fnEvalCoord2f;
    gl21PEvalCoord1dv fnEvalCoord1dv;
    gl21PEvalCoord1fv fnEvalCoord1fv;
    gl21PEvalCoord2dv fnEvalCoord2dv;
    gl21PEvalCoord2fv fnEvalCoord2fv;
    gl21PEvalMesh1 fnEvalMesh1;
    gl21PEvalMesh2 fnEvalMesh2;
    gl21PEvalPoint1 fnEvalPoint1;
    gl21PEvalPoint2 fnEvalPoint2;
    gl21PFeedbackBuffer fnFeedbackBuffer;
    gl21PFinish fnFinish;
    gl21PFlush fnFlush;
    gl21PFogf fnFogf;
    gl21PFogi fnFogi;
    gl21PFogfv fnFogfv;
    gl21PFogiv fnFogiv;
    gl21PFrontFace fnFrontFace;
    gl21PFrustum fnFrustum;
    gl21PGenLists fnGenLists;
    gl21PGetBooleanv fnGetBooleanv;
    gl21PGetDoublev fnGetDoublev;
    gl21PGetFloatv fnGetFloatv;
    gl21PGetIntegerv fnGetIntegerv;
    gl21PGetClipPlane fnGetClipPlane;
    gl21PGetError fnGetError;
    gl21PGetLightfv fnGetLightfv;
    gl21PGetLightiv fnGetLightiv;
    gl21PGetMapdv fnGetMapdv;
    gl21PGetMapfv fnGetMapfv;
    gl21PGetMapiv fnGetMapiv;
    gl21PGetMaterialfv fnGetMaterialfv;
    gl21PGetMaterialiv fnGetMaterialiv;
    gl21PGetPixelMapfv fnGetPixelMapfv;
    gl21PGetPixelMapuiv fnGetPixelMapuiv;
    gl21PGetPixelMapusv fnGetPixelMapusv;
    gl21PGetPolygonStipple fnGetPolygonStipple;
    gl21PGetString fnGetString;
    gl21PGetTexEnvfv fnGetTexEnvfv;
    gl21PGetTexEnviv fnGetTexEnviv;
    gl21PGetTexGendv fnGetTexGendv;
    gl21PGetTexGenfv fnGetTexGenfv;
    gl21PGetTexGeniv fnGetTexGeniv;
    gl21PGetTexImage fnGetTexImage;
    gl21PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl21PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl21PGetTexParameterfv fnGetTexParameterfv;
    gl21PGetTexParameteriv fnGetTexParameteriv;
    gl21PHint fnHint;
    gl21PIndexd fnIndexd;
    gl21PIndexf fnIndexf;
    gl21PIndexi fnIndexi;
    gl21PIndexs fnIndexs;
    gl21PIndexub fnIndexub;
    gl21PIndexdv fnIndexdv;
    gl21PIndexfv fnIndexfv;
    gl21PIndexiv fnIndexiv;
    gl21PIndexsv fnIndexsv;
    gl21PIndexubv fnIndexubv;
    gl21PIndexMask fnIndexMask;
    gl21PIndexPointer fnIndexPointer;
    gl21PInitNames fnInitNames;
    gl21PInterleavedArrays fnInterleavedArrays;
    gl21PIsEnabled fnIsEnabled;
    gl21PIsList fnIsList;
    gl21PLightf fnLightf;
    gl21PLighti fnLighti;
    gl21PLightfv fnLightfv;
    gl21PLightiv fnLightiv;
    gl21PLightModelf fnLightModelf;
    gl21PLightModeli fnLightModeli;
    gl21PLightModelfv fnLightModelfv;
    gl21PLightModeliv fnLightModeliv;
    gl21PLineStipple fnLineStipple;
    gl21PLineWidth fnLineWidth;
    gl21PListBase fnListBase;
    gl21PLoadIdentity fnLoadIdentity;
    gl21PLoadMatrixd fnLoadMatrixd;
    gl21PLoadMatrixf fnLoadMatrixf;
    gl21PLoadName fnLoadName;
    gl21PLogicOp fnLogicOp;
    gl21PMap1d fnMap1d;
    gl21PMap1f fnMap1f;
    gl21PMap2d fnMap2d;
    gl21PMap2f fnMap2f;
    gl21PMapGrid1d fnMapGrid1d;
    gl21PMapGrid1f fnMapGrid1f;
    gl21PMapGrid2d fnMapGrid2d;
    gl21PMapGrid2f fnMapGrid2f;
    gl21PMaterialf fnMaterialf;
    gl21PMateriali fnMateriali;
    gl21PMaterialfv fnMaterialfv;
    gl21PMaterialiv fnMaterialiv;
    gl21PMatrixMode fnMatrixMode;
    gl21PMultMatrixd fnMultMatrixd;
    gl21PMultMatrixf fnMultMatrixf;
    gl21PNewList fnNewList;
    gl21PEndList fnEndList;
    gl21PNormal3b fnNormal3b;
    gl21PNormal3d fnNormal3d;
    gl21PNormal3f fnNormal3f;
    gl21PNormal3i fnNormal3i;
    gl21PNormal3s fnNormal3s;
    gl21PNormal3bv fnNormal3bv;
    gl21PNormal3dv fnNormal3dv;
    gl21PNormal3fv fnNormal3fv;
    gl21PNormal3iv fnNormal3iv;
    gl21PNormal3sv fnNormal3sv;
    gl21PNormalPointer fnNormalPointer;
    gl21POrtho fnOrtho;
    gl21PPassThrough fnPassThrough;
    gl21PPixelMapfv fnPixelMapfv;
    gl21PPixelMapuiv fnPixelMapuiv;
    gl21PPixelMapusv fnPixelMapusv;
    gl21PPixelStoref fnPixelStoref;
    gl21PPixelStorei fnPixelStorei;
    gl21PPixelTransferf fnPixelTransferf;
    gl21PPixelTransferi fnPixelTransferi;
    gl21PPixelZoom fnPixelZoom;
    gl21PPointSize fnPointSize;
    gl21PPolygonMode fnPolygonMode;
    gl21PPolygonStipple fnPolygonStipple;
    gl21PPrioritizeTextures fnPrioritizeTextures;
    gl21PPushAttrib fnPushAttrib;
    gl21PPopAttrib fnPopAttrib;
    gl21PPushClientAttrib fnPushClientAttrib;
    gl21PPopClientAttrib fnPopClientAttrib;
    gl21PPushMatrix fnPushMatrix;
    gl21PPopMatrix fnPopMatrix;
    gl21PPushName fnPushName;
    gl21PPopName fnPopName;
    gl21PRasterPos2d fnRasterPos2d;
    gl21PRasterPos2f fnRasterPos2f;
    gl21PRasterPos2i fnRasterPos2i;
    gl21PRasterPos2s fnRasterPos2s;
    gl21PRasterPos3d fnRasterPos3d;
    gl21PRasterPos3f fnRasterPos3f;
    gl21PRasterPos3i fnRasterPos3i;
    gl21PRasterPos3s fnRasterPos3s;
    gl21PRasterPos4d fnRasterPos4d;
    gl21PRasterPos4f fnRasterPos4f;
    gl21PRasterPos4i fnRasterPos4i;
    gl21PRasterPos4s fnRasterPos4s;
    gl21PRasterPos2dv fnRasterPos2dv;
    gl21PRasterPos2fv fnRasterPos2fv;
    gl21PRasterPos2iv fnRasterPos2iv;
    gl21PRasterPos2sv fnRasterPos2sv;
    gl21PRasterPos3dv fnRasterPos3dv;
    gl21PRasterPos3fv fnRasterPos3fv;
    gl21PRasterPos3iv fnRasterPos3iv;
    gl21PRasterPos3sv fnRasterPos3sv;
    gl21PRasterPos4dv fnRasterPos4dv;
    gl21PRasterPos4fv fnRasterPos4fv;
    gl21PRasterPos4iv fnRasterPos4iv;
    gl21PRasterPos4sv fnRasterPos4sv;
    gl21PReadBuffer fnReadBuffer;
    gl21PReadPixels fnReadPixels;
    gl21PRectd fnRectd;
    gl21PRectf fnRectf;
    gl21PRecti fnRecti;
    gl21PRects fnRects;
    gl21PRectdv fnRectdv;
    gl21PRectfv fnRectfv;
    gl21PRectiv fnRectiv;
    gl21PRectsv fnRectsv;
    gl21PRenderMode fnRenderMode;
    gl21PRotated fnRotated;
    gl21PRotatef fnRotatef;
    gl21PScaled fnScaled;
    gl21PScalef fnScalef;
    gl21PScissor fnScissor;
    gl21PSelectBuffer fnSelectBuffer;
    gl21PShadeModel fnShadeModel;
    gl21PStencilFunc fnStencilFunc;
    gl21PStencilMask fnStencilMask;
    gl21PStencilOp fnStencilOp;
    gl21PTexCoord1d fnTexCoord1d;
    gl21PTexCoord1f fnTexCoord1f;
    gl21PTexCoord1i fnTexCoord1i;
    gl21PTexCoord1s fnTexCoord1s;
    gl21PTexCoord2d fnTexCoord2d;
    gl21PTexCoord2f fnTexCoord2f;
    gl21PTexCoord2i fnTexCoord2i;
    gl21PTexCoord2s fnTexCoord2s;
    gl21PTexCoord3d fnTexCoord3d;
    gl21PTexCoord3f fnTexCoord3f;
    gl21PTexCoord3i fnTexCoord3i;
    gl21PTexCoord3s fnTexCoord3s;
    gl21PTexCoord4d fnTexCoord4d;
    gl21PTexCoord4f fnTexCoord4f;
    gl21PTexCoord4i fnTexCoord4i;
    gl21PTexCoord4s fnTexCoord4s;
    gl21PTexCoord1dv fnTexCoord1dv;
    gl21PTexCoord1fv fnTexCoord1fv;
    gl21PTexCoord1iv fnTexCoord1iv;
    gl21PTexCoord1sv fnTexCoord1sv;
    gl21PTexCoord2dv fnTexCoord2dv;
    gl21PTexCoord2fv fnTexCoord2fv;
    gl21PTexCoord2iv fnTexCoord2iv;
    gl21PTexCoord2sv fnTexCoord2sv;
    gl21PTexCoord3dv fnTexCoord3dv;
    gl21PTexCoord3fv fnTexCoord3fv;
    gl21PTexCoord3iv fnTexCoord3iv;
    gl21PTexCoord3sv fnTexCoord3sv;
    gl21PTexCoord4dv fnTexCoord4dv;
    gl21PTexCoord4fv fnTexCoord4fv;
    gl21PTexCoord4iv fnTexCoord4iv;
    gl21PTexCoord4sv fnTexCoord4sv;
    gl21PTexCoordPointer fnTexCoordPointer;
    gl21PTexEnvf fnTexEnvf;
    gl21PTexEnvi fnTexEnvi;
    gl21PTexEnvfv fnTexEnvfv;
    gl21PTexEnviv fnTexEnviv;
    gl21PTexGend fnTexGend;
    gl21PTexGenf fnTexGenf;
    gl21PTexGeni fnTexGeni;
    gl21PTexGendv fnTexGendv;
    gl21PTexGenfv fnTexGenfv;
    gl21PTexGeniv fnTexGeniv;
    gl21PTexImage1D fnTexImage1D;
    gl21PTexImage2D fnTexImage2D;
    gl21PTexImage3DEXT fnTexImage3DEXT;
    gl21PTexParameterf fnTexParameterf;
    gl21PTexParameteri fnTexParameteri;
    gl21PTexParameterfv fnTexParameterfv;
    gl21PTexParameteriv fnTexParameteriv;
    gl21PTexSubImage1D fnTexSubImage1D;
    gl21PTexSubImage2D fnTexSubImage2D;
    gl21PTexSubImage3DEXT fnTexSubImage3DEXT;
    gl21PTranslated fnTranslated;
    gl21PTranslatef fnTranslatef;
    gl21PVertex2s fnVertex2s;
    gl21PVertex2i fnVertex2i;
    gl21PVertex2f fnVertex2f;
    gl21PVertex2d fnVertex2d;
    gl21PVertex3s fnVertex3s;
    gl21PVertex3i fnVertex3i;
    gl21PVertex3f fnVertex3f;
    gl21PVertex3d fnVertex3d;
    gl21PVertex4s fnVertex4s;
    gl21PVertex4i fnVertex4i;
    gl21PVertex4f fnVertex4f;
    gl21PVertex4d fnVertex4d;
    gl21PVertexPointer fnVertexPointer;
    gl21PViewport fnViewport;
    gl21PAreTexturesResident fnAreTexturesResident;
    gl21PArrayElement fnArrayElement;
    gl21PDrawArrays fnDrawArrays;
    gl21PDrawElements fnDrawElements;
    gl21PGetPointerv fnGetPointerv;
    gl21PPolygonOffset fnPolygonOffset;
    gl21PCopyTexImage1D fnCopyTexImage1D;
    gl21PCopyTexImage2D fnCopyTexImage2D;
    gl21PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl21PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl21PBindTexture fnBindTexture;
    gl21PDeleteTextures fnDeleteTextures;
    gl21PGenTextures fnGenTextures;
    gl21PIsTexture fnIsTexture;
    gl21PColorPointer fnColorPointer;
    gl21PBlendColorEXT fnBlendColorEXT;
    gl21PBlendEquation fnBlendEquation;
    gl21PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl21PActiveTexture fnActiveTexture;
    gl21PClientActiveTexture fnClientActiveTexture;
    gl21PCompressedTexImage1D fnCompressedTexImage1D;
    gl21PCompressedTexImage2D fnCompressedTexImage2D;
    gl21PCompressedTexImage3D fnCompressedTexImage3D;
    gl21PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl21PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl21PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl21PBlendFuncSeparate fnBlendFuncSeparate;
    gl21PBeginQuery fnBeginQuery;
    gl21PBindBuffer fnBindBuffer;
    gl21PBufferData fnBufferData;
    gl21PBufferSubData fnBufferSubData;
    gl21PAttachShader fnAttachShader;
    gl21PBindAttribLocation fnBindAttribLocation;
    gl21PBlendEquationSeperate fnBlendEquationSeperate;
    gl21PCompileShader fnCompileShader;
    gl21PCreateProgram fnCreateProgram;
    gl21PCreateShader fnCreateShader;
} gl21Context;

extern gl21Context* gl21NewContext();
void gl21Accum(gl21Context* glc, GLenum op, GLfloat value);
void gl21AlphaFunc(gl21Context* glc, GLenum func, GLclampf ref);
void gl21Begin(gl21Context* glc, GLenum mode);
void gl21End(gl21Context* glc);
void gl21Bitmap(gl21Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl21BlendFunc(gl21Context* glc, GLenum sfactor, GLenum dfactor);
void gl21CallList(gl21Context* glc, GLuint list);
void gl21CallLists(gl21Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl21Clear(gl21Context* glc, GLbitfield mask);
void gl21ClearAccum(gl21Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl21ClearColor(gl21Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl21ClearDepth(gl21Context* glc, GLclampd depth);
void gl21ClearIndex(gl21Context* glc, GLfloat c);
void gl21ClearStencil(gl21Context* glc, GLint s);
void gl21ClipPlane(gl21Context* glc, GLenum plane, GLdouble* equation);
void gl21Color3b(gl21Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl21Color3d(gl21Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl21Color3f(gl21Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl21Color3i(gl21Context* glc, GLint red, GLint green, GLint blue);
void gl21Color3s(gl21Context* glc, GLshort red, GLshort green, GLshort blue);
void gl21Color3ub(gl21Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl21Color3ui(gl21Context* glc, GLuint red, GLuint green, GLuint blue);
void gl21Color3us(gl21Context* glc, GLushort red, GLushort green, GLushort blue);
void gl21Color4b(gl21Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl21Color4d(gl21Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl21Color4f(gl21Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl21Color4i(gl21Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl21Color4s(gl21Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl21Color4ub(gl21Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl21Color4ui(gl21Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl21Color4us(gl21Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl21Color3bv(gl21Context* glc, GLbyte* v);
void gl21Color3dv(gl21Context* glc, GLdouble* v);
void gl21Color3fv(gl21Context* glc, GLfloat* v);
void gl21Color3iv(gl21Context* glc, GLint* v);
void gl21Color3sv(gl21Context* glc, GLshort* v);
void gl21Color3ubv(gl21Context* glc, GLubyte* v);
void gl21Color3uiv(gl21Context* glc, GLuint* v);
void gl21Color3usv(gl21Context* glc, GLushort* v);
void gl21Color4bv(gl21Context* glc, GLbyte* v);
void gl21Color4dv(gl21Context* glc, GLdouble* v);
void gl21Color4fv(gl21Context* glc, GLfloat* v);
void gl21Color4iv(gl21Context* glc, GLint* v);
void gl21Color4sv(gl21Context* glc, GLshort* v);
void gl21Color4ubv(gl21Context* glc, GLubyte* v);
void gl21Color4uiv(gl21Context* glc, GLuint* v);
void gl21Color4usv(gl21Context* glc, GLushort* v);
void gl21ColorMask(gl21Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl21ColorMaterial(gl21Context* glc, GLenum face, GLenum mode);
void gl21ColorTable(gl21Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl21ColorTableParameterfv(gl21Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl21ColorTableParameteriv(gl21Context* glc, GLenum target, GLenum pname, GLint* params);
void gl21ColorSubTable(gl21Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl21CopyPixels(gl21Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl21CullFace(gl21Context* glc, GLenum mode);
void gl21ConvolutionFilter1D(gl21Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl21ConvolutionFilter2D(gl21Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl21ConvolutionParameterf(gl21Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl21ConvolutionParameteri(gl21Context* glc, GLenum target, GLenum pname, GLint params);
void gl21CopyColorTable(gl21Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl21CopyColorSubTable(gl21Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl21CopyConvolutionFilter1D(gl21Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl21CopyConvolutionFilter2D(gl21Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl21DeleteLists(gl21Context* glc, GLuint list, GLsizei range);
void gl21DepthFunc(gl21Context* glc, GLenum func);
void gl21DepthRange(gl21Context* glc, GLclampd zNear, GLclampd zFar);
void gl21Enable(gl21Context* glc, GLenum cap);
void gl21Disable(gl21Context* glc, GLenum cap);
void gl21DrawBuffer(gl21Context* glc, GLenum mode);
void gl21DrawPixels(gl21Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl21EdgeFlag(gl21Context* glc, GLboolean flag);
void gl21EdgeFlagv(gl21Context* glc, GLboolean* flag);
void gl21EdgeFlagPointer(gl21Context* glc, GLsizei stride, GLvoid* pointer);
void gl21EnableClientState(gl21Context* glc, GLenum cap);
void gl21DisableClientState(gl21Context* glc, GLenum cap);
void gl21EvalCoord1d(gl21Context* glc, GLdouble u);
void gl21EvalCoord1f(gl21Context* glc, GLfloat u);
void gl21EvalCoord2d(gl21Context* glc, GLdouble u, GLdouble v);
void gl21EvalCoord2f(gl21Context* glc, GLfloat u, GLfloat v);
void gl21EvalCoord1dv(gl21Context* glc, GLdouble* u);
void gl21EvalCoord1fv(gl21Context* glc, GLfloat* u);
void gl21EvalCoord2dv(gl21Context* glc, GLdouble* u);
void gl21EvalCoord2fv(gl21Context* glc, GLfloat* u);
void gl21EvalMesh1(gl21Context* glc, GLenum mode, GLint i1, GLint i2);
void gl21EvalMesh2(gl21Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl21EvalPoint1(gl21Context* glc, GLint i);
void gl21EvalPoint2(gl21Context* glc, GLint i, GLint j);
void gl21FeedbackBuffer(gl21Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl21Finish(gl21Context* glc);
void gl21Flush(gl21Context* glc);
void gl21Fogf(gl21Context* glc, GLenum pname, GLfloat param);
void gl21Fogi(gl21Context* glc, GLenum pname, GLint param);
void gl21Fogfv(gl21Context* glc, GLenum pname, GLfloat* params);
void gl21Fogiv(gl21Context* glc, GLenum pname, GLint* params);
void gl21FrontFace(gl21Context* glc, GLenum mode);
void gl21Frustum(gl21Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl21GenLists(gl21Context* glc, GLsizei range);
void gl21GetBooleanv(gl21Context* glc, GLenum pname, GLboolean* params);
void gl21GetDoublev(gl21Context* glc, GLenum pname, GLdouble* params);
void gl21GetFloatv(gl21Context* glc, GLenum pname, GLfloat* params);
void gl21GetIntegerv(gl21Context* glc, GLenum pname, GLint* params);
void gl21GetClipPlane(gl21Context* glc, GLenum plane, GLdouble* equation);
GLenum gl21GetError(gl21Context* glc);
void gl21GetLightfv(gl21Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl21GetLightiv(gl21Context* glc, GLenum light, GLenum pname, GLint* params);
void gl21GetMapdv(gl21Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl21GetMapfv(gl21Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl21GetMapiv(gl21Context* glc, GLenum target, GLenum query, GLint* v);
void gl21GetMaterialfv(gl21Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl21GetMaterialiv(gl21Context* glc, GLenum face, GLenum pname, GLint* params);
void gl21GetPixelMapfv(gl21Context* glc, GLenum map, GLfloat* values);
void gl21GetPixelMapuiv(gl21Context* glc, GLenum map, GLuint* values);
void gl21GetPixelMapusv(gl21Context* glc, GLenum map, GLushort* values);
void gl21GetPolygonStipple(gl21Context* glc, GLubyte* mask);
GLubyte* gl21GetString(gl21Context* glc, GLenum name);
void gl21GetTexEnvfv(gl21Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl21GetTexEnviv(gl21Context* glc, GLenum target, GLenum pname, GLint* params);
void gl21GetTexGendv(gl21Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl21GetTexGenfv(gl21Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl21GetTexGeniv(gl21Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl21GetTexImage(gl21Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl21GetTexLevelParameterfv(gl21Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl21GetTexLevelParameteriv(gl21Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl21GetTexParameterfv(gl21Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl21GetTexParameteriv(gl21Context* glc, GLenum target, GLenum pname, GLint* params);
void gl21Hint(gl21Context* glc, GLenum target, GLenum mode);
void gl21Indexd(gl21Context* glc, GLdouble c);
void gl21Indexf(gl21Context* glc, GLfloat c);
void gl21Indexi(gl21Context* glc, GLint c);
void gl21Indexs(gl21Context* glc, GLshort c);
void gl21Indexub(gl21Context* glc, GLubyte c);
void gl21Indexdv(gl21Context* glc, GLdouble* c);
void gl21Indexfv(gl21Context* glc, GLfloat* c);
void gl21Indexiv(gl21Context* glc, GLint* c);
void gl21Indexsv(gl21Context* glc, GLshort* c);
void gl21Indexubv(gl21Context* glc, GLubyte* c);
void gl21IndexMask(gl21Context* glc, GLuint mask);
void gl21IndexPointer(gl21Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl21InitNames(gl21Context* glc);
void gl21InterleavedArrays(gl21Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl21IsEnabled(gl21Context* glc, GLenum cap);
GLboolean gl21IsList(gl21Context* glc, GLuint list);
void gl21Lightf(gl21Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl21Lighti(gl21Context* glc, GLenum light, GLenum pname, GLint param);
void gl21Lightfv(gl21Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl21Lightiv(gl21Context* glc, GLenum light, GLenum pname, GLint* params);
void gl21LightModelf(gl21Context* glc, GLenum pname, GLfloat param);
void gl21LightModeli(gl21Context* glc, GLenum pname, GLint param);
void gl21LightModelfv(gl21Context* glc, GLenum pname, GLfloat* params);
void gl21LightModeliv(gl21Context* glc, GLenum pname, GLint* params);
void gl21LineStipple(gl21Context* glc, GLint factor, GLushort pattern);
void gl21LineWidth(gl21Context* glc, GLfloat width);
void gl21ListBase(gl21Context* glc, GLuint base);
void gl21LoadIdentity(gl21Context* glc);
void gl21LoadMatrixd(gl21Context* glc, GLdouble* m);
void gl21LoadMatrixf(gl21Context* glc, GLfloat* m);
void gl21LoadName(gl21Context* glc, GLuint name);
void gl21LogicOp(gl21Context* glc, GLenum opcode);
void gl21Map1d(gl21Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl21Map1f(gl21Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl21Map2d(gl21Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl21Map2f(gl21Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl21MapGrid1d(gl21Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl21MapGrid1f(gl21Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl21MapGrid2d(gl21Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl21MapGrid2f(gl21Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl21Materialf(gl21Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl21Materiali(gl21Context* glc, GLenum face, GLenum pname, GLint param);
void gl21Materialfv(gl21Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl21Materialiv(gl21Context* glc, GLenum face, GLenum pname, GLint* params);
void gl21MatrixMode(gl21Context* glc, GLenum mode);
void gl21MultMatrixd(gl21Context* glc, GLdouble* m);
void gl21MultMatrixf(gl21Context* glc, GLfloat* m);
void gl21NewList(gl21Context* glc, GLuint list, GLenum mode);
void gl21EndList(gl21Context* glc);
void gl21Normal3b(gl21Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl21Normal3d(gl21Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl21Normal3f(gl21Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl21Normal3i(gl21Context* glc, GLint nx, GLint ny, GLint nz);
void gl21Normal3s(gl21Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl21Normal3bv(gl21Context* glc, GLbyte* v);
void gl21Normal3dv(gl21Context* glc, GLdouble* v);
void gl21Normal3fv(gl21Context* glc, GLfloat* v);
void gl21Normal3iv(gl21Context* glc, GLint* v);
void gl21Normal3sv(gl21Context* glc, GLshort* v);
void gl21NormalPointer(gl21Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl21Ortho(gl21Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl21PassThrough(gl21Context* glc, GLfloat token);
void gl21PixelMapfv(gl21Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl21PixelMapuiv(gl21Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl21PixelMapusv(gl21Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl21PixelStoref(gl21Context* glc, GLenum pname, GLfloat param);
void gl21PixelStorei(gl21Context* glc, GLenum pname, GLint param);
void gl21PixelTransferf(gl21Context* glc, GLenum pname, GLfloat param);
void gl21PixelTransferi(gl21Context* glc, GLenum pname, GLint param);
void gl21PixelZoom(gl21Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl21PointSize(gl21Context* glc, GLfloat size);
void gl21PolygonMode(gl21Context* glc, GLenum face, GLenum mode);
void gl21PolygonStipple(gl21Context* glc, GLubyte* mask);
void gl21PrioritizeTextures(gl21Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl21PushAttrib(gl21Context* glc, GLbitfield mask);
void gl21PopAttrib(gl21Context* glc);
void gl21PushClientAttrib(gl21Context* glc, GLbitfield mask);
void gl21PopClientAttrib(gl21Context* glc);
void gl21PushMatrix(gl21Context* glc);
void gl21PopMatrix(gl21Context* glc);
void gl21PushName(gl21Context* glc, GLuint name);
void gl21PopName(gl21Context* glc);
void gl21RasterPos2d(gl21Context* glc, GLdouble x, GLdouble y);
void gl21RasterPos2f(gl21Context* glc, GLfloat x, GLfloat y);
void gl21RasterPos2i(gl21Context* glc, GLint x, GLint y);
void gl21RasterPos2s(gl21Context* glc, GLshort x, GLshort y);
void gl21RasterPos3d(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl21RasterPos3f(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl21RasterPos3i(gl21Context* glc, GLint x, GLint y, GLint z);
void gl21RasterPos3s(gl21Context* glc, GLshort x, GLshort y, GLshort z);
void gl21RasterPos4d(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl21RasterPos4f(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl21RasterPos4i(gl21Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl21RasterPos4s(gl21Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl21RasterPos2dv(gl21Context* glc, GLdouble* v);
void gl21RasterPos2fv(gl21Context* glc, GLfloat* v);
void gl21RasterPos2iv(gl21Context* glc, GLint* v);
void gl21RasterPos2sv(gl21Context* glc, GLshort* v);
void gl21RasterPos3dv(gl21Context* glc, GLdouble* v);
void gl21RasterPos3fv(gl21Context* glc, GLfloat* v);
void gl21RasterPos3iv(gl21Context* glc, GLint* v);
void gl21RasterPos3sv(gl21Context* glc, GLshort* v);
void gl21RasterPos4dv(gl21Context* glc, GLdouble* v);
void gl21RasterPos4fv(gl21Context* glc, GLfloat* v);
void gl21RasterPos4iv(gl21Context* glc, GLint* v);
void gl21RasterPos4sv(gl21Context* glc, GLshort* v);
void gl21ReadBuffer(gl21Context* glc, GLenum mode);
void gl21ReadPixels(gl21Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl21Rectd(gl21Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl21Rectf(gl21Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl21Recti(gl21Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl21Rects(gl21Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl21Rectdv(gl21Context* glc, GLdouble* v1, GLdouble* v2);
void gl21Rectfv(gl21Context* glc, GLfloat* v1, GLfloat* v2);
void gl21Rectiv(gl21Context* glc, GLint* v1, GLint* v2);
void gl21Rectsv(gl21Context* glc, GLshort* v1, GLshort* v2);
GLint gl21RenderMode(gl21Context* glc, GLenum mode);
void gl21Rotated(gl21Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl21Rotatef(gl21Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl21Scaled(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl21Scalef(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl21Scissor(gl21Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl21SelectBuffer(gl21Context* glc, GLsizei size, GLuint* buffer);
void gl21ShadeModel(gl21Context* glc, GLenum mode);
void gl21StencilFunc(gl21Context* glc, GLenum func, GLint ref, GLuint mask);
void gl21StencilMask(gl21Context* glc, GLuint mask);
void gl21StencilOp(gl21Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl21TexCoord1d(gl21Context* glc, GLdouble s);
void gl21TexCoord1f(gl21Context* glc, GLfloat s);
void gl21TexCoord1i(gl21Context* glc, GLint s);
void gl21TexCoord1s(gl21Context* glc, GLshort s);
void gl21TexCoord2d(gl21Context* glc, GLdouble s, GLdouble t);
void gl21TexCoord2f(gl21Context* glc, GLfloat s, GLfloat t);
void gl21TexCoord2i(gl21Context* glc, GLint s, GLint t);
void gl21TexCoord2s(gl21Context* glc, GLshort s, GLshort t);
void gl21TexCoord3d(gl21Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl21TexCoord3f(gl21Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl21TexCoord3i(gl21Context* glc, GLint s, GLint t, GLint r);
void gl21TexCoord3s(gl21Context* glc, GLshort s, GLshort t, GLshort r);
void gl21TexCoord4d(gl21Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl21TexCoord4f(gl21Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl21TexCoord4i(gl21Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl21TexCoord4s(gl21Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl21TexCoord1dv(gl21Context* glc, GLdouble* v);
void gl21TexCoord1fv(gl21Context* glc, GLfloat* v);
void gl21TexCoord1iv(gl21Context* glc, GLint* v);
void gl21TexCoord1sv(gl21Context* glc, GLshort* v);
void gl21TexCoord2dv(gl21Context* glc, GLdouble* v);
void gl21TexCoord2fv(gl21Context* glc, GLfloat* v);
void gl21TexCoord2iv(gl21Context* glc, GLint* v);
void gl21TexCoord2sv(gl21Context* glc, GLshort* v);
void gl21TexCoord3dv(gl21Context* glc, GLdouble* v);
void gl21TexCoord3fv(gl21Context* glc, GLfloat* v);
void gl21TexCoord3iv(gl21Context* glc, GLint* v);
void gl21TexCoord3sv(gl21Context* glc, GLshort* v);
void gl21TexCoord4dv(gl21Context* glc, GLdouble* v);
void gl21TexCoord4fv(gl21Context* glc, GLfloat* v);
void gl21TexCoord4iv(gl21Context* glc, GLint* v);
void gl21TexCoord4sv(gl21Context* glc, GLshort* v);
void gl21TexCoordPointer(gl21Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl21TexEnvf(gl21Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl21TexEnvi(gl21Context* glc, GLenum target, GLenum pname, GLint param);
void gl21TexEnvfv(gl21Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl21TexEnviv(gl21Context* glc, GLenum target, GLenum pname, GLint* params);
void gl21TexGend(gl21Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl21TexGenf(gl21Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl21TexGeni(gl21Context* glc, GLenum coord, GLenum pname, GLint param);
void gl21TexGendv(gl21Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl21TexGenfv(gl21Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl21TexGeniv(gl21Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl21TexImage1D(gl21Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl21TexImage2D(gl21Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl21TexImage3DEXT(gl21Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl21TexParameterf(gl21Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl21TexParameteri(gl21Context* glc, GLenum target, GLenum pname, GLint param);
void gl21TexParameterfv(gl21Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl21TexParameteriv(gl21Context* glc, GLenum target, GLenum pname, GLint* params);
void gl21TexSubImage1D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl21TexSubImage2D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl21TexSubImage3DEXT(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl21Translated(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl21Translatef(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl21Vertex2s(gl21Context* glc, GLshort x, GLshort y);
void gl21Vertex2i(gl21Context* glc, GLint x, GLint y);
void gl21Vertex2f(gl21Context* glc, GLfloat x, GLfloat y);
void gl21Vertex2d(gl21Context* glc, GLdouble x, GLdouble y);
void gl21Vertex3s(gl21Context* glc, GLshort x, GLshort y, GLshort z);
void gl21Vertex3i(gl21Context* glc, GLint x, GLint y, GLint z);
void gl21Vertex3f(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl21Vertex3d(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl21Vertex4s(gl21Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl21Vertex4i(gl21Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl21Vertex4f(gl21Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl21Vertex4d(gl21Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl21VertexPointer(gl21Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl21Viewport(gl21Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
GLboolean gl21AreTexturesResident(gl21Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl21ArrayElement(gl21Context* glc, GLint i);
void gl21DrawArrays(gl21Context* glc, GLenum mode, GLint first, GLsizei count);
void gl21DrawElements(gl21Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl21GetPointerv(gl21Context* glc, GLenum pname, GLvoid* params);
void gl21PolygonOffset(gl21Context* glc, GLfloat factor, GLfloat units);
void gl21CopyTexImage1D(gl21Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl21CopyTexImage2D(gl21Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl21CopyTexSubImage1D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl21CopyTexSubImage2D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl21BindTexture(gl21Context* glc, GLenum target, GLuint texture);
void gl21DeleteTextures(gl21Context* glc, GLsizei n, GLuint* textures);
void gl21GenTextures(gl21Context* glc, GLsizei n, GLuint* textures);
GLboolean gl21IsTexture(gl21Context* glc, GLuint texture);
void gl21ColorPointer(gl21Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl21BlendColorEXT(gl21Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl21BlendEquation(gl21Context* glc, GLenum mode);
void gl21CopyTexSubImage3D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl21ActiveTexture(gl21Context* glc, GLenum texture);
void gl21ClientActiveTexture(gl21Context* glc, GLenum texture);
void gl21CompressedTexImage1D(gl21Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl21CompressedTexImage2D(gl21Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl21CompressedTexImage3D(gl21Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl21CompressedTexSubImage1D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl21CompressedTexSubImage2D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl21CompressedTexSubImage3D(gl21Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl21BlendFuncSeparate(gl21Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl21BeginQuery(gl21Context* glc, GLenum target, GLuint id);
void gl21BindBuffer(gl21Context* glc, GLenum target, GLuint buffer);
void gl21BufferData(gl21Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl21BufferSubData(gl21Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl21AttachShader(gl21Context* glc, GLuint program, GLuint shader);
void gl21BindAttribLocation(gl21Context* glc, GLuint program, GLuint index, GLchar* name);
void gl21BlendEquationSeperate(gl21Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl21CompileShader(gl21Context* glc, GLuint shader);
GLuint gl21CreateProgram(gl21Context* glc);
GLuint gl21CreateShader(gl21Context* glc, GLenum shaderType);
