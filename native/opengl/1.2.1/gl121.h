#include <stdbool.h>
#include <stdlib.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;

typedef void(*gl121PAccum)(GLenum, GLfloat);
typedef void(*gl121PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl121PBegin)(GLenum);
typedef void(*gl121PEnd)();
typedef void(*gl121PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl121PBlendFunc)(GLenum, GLenum);
typedef void(*gl121PCallList)(GLuint);
typedef void(*gl121PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl121PClear)(GLbitfield);
typedef void(*gl121PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl121PClearDepth)(GLclampd);
typedef void(*gl121PClearDepthf)(GLclampf);
typedef void(*gl121PClearIndex)(GLfloat);
typedef void(*gl121PClearStencil)(GLint);
typedef void(*gl121PClipPlane)(GLenum, GLdouble*);
typedef void(*gl121PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl121PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PColor3i)(GLint, GLint, GLint);
typedef void(*gl121PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl121PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl121PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl121PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl121PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl121PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl121PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl121PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl121PColor3bv)(GLbyte*);
typedef void(*gl121PColor3dv)(GLdouble*);
typedef void(*gl121PColor3fv)(GLfloat*);
typedef void(*gl121PColor3iv)(GLint*);
typedef void(*gl121PColor3sv)(GLshort*);
typedef void(*gl121PColor3ubv)(GLubyte*);
typedef void(*gl121PColor3uiv)(GLuint*);
typedef void(*gl121PColor3usv)(GLushort*);
typedef void(*gl121PColor4bv)(GLbyte*);
typedef void(*gl121PColor4dv)(GLdouble*);
typedef void(*gl121PColor4fv)(GLfloat*);
typedef void(*gl121PColor4iv)(GLint*);
typedef void(*gl121PColor4sv)(GLshort*);
typedef void(*gl121PColor4ubv)(GLubyte*);
typedef void(*gl121PColor4uiv)(GLuint*);
typedef void(*gl121PColor4usv)(GLushort*);
typedef void(*gl121PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl121PColorMaterial)(GLenum, GLenum);
typedef void(*gl121PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl121PCullFace)(GLenum);
typedef void(*gl121PDeleteLists)(GLuint, GLsizei);
typedef void(*gl121PDepthFunc)(GLenum);
typedef void(*gl121PDepthMask)(GLboolean);
typedef void(*gl121PDepthRange)(GLclampd, GLclampd);
typedef void(*gl121PEnable)(GLenum);
typedef void(*gl121PDisable)(GLenum);
typedef void(*gl121PDrawBuffer)(GLenum);
typedef void(*gl121PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PEdgeFlag)(GLboolean);
typedef void(*gl121PEdgeFlagv)(GLboolean*);
typedef void(*gl121PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl121PEvalCoord1d)(GLdouble);
typedef void(*gl121PEvalCoord1f)(GLfloat);
typedef void(*gl121PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl121PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl121PEvalCoord1dv)(GLdouble*);
typedef void(*gl121PEvalCoord1fv)(GLfloat*);
typedef void(*gl121PEvalCoord2dv)(GLdouble*);
typedef void(*gl121PEvalCoord2fv)(GLfloat*);
typedef void(*gl121PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl121PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl121PEvalPoint1)(GLint);
typedef void(*gl121PEvalPoint2)(GLint, GLint);
typedef void(*gl121PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl121PFinish)();
typedef void(*gl121PFlush)();
typedef void(*gl121PFogf)(GLenum, GLfloat);
typedef void(*gl121PFogi)(GLenum, GLint);
typedef void(*gl121PFogfv)(GLenum, GLfloat*);
typedef void(*gl121PFogiv)(GLenum, GLint*);
typedef void(*gl121PFrontFace)(GLenum);
typedef void(*gl121PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl121PGenLists)(GLsizei);
typedef void(*gl121PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl121PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl121PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl121PGetIntegerv)(GLenum, GLint*);
typedef void(*gl121PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl121PGetError)();
typedef void(*gl121PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl121PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl121PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl121PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl121PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl121PGetString)(GLenum);
typedef void(*gl121PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl121PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl121PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl121PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl121PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PHint)(GLenum, GLenum);
typedef void(*gl121PIndexd)(GLdouble);
typedef void(*gl121PIndexf)(GLfloat);
typedef void(*gl121PIndexi)(GLint);
typedef void(*gl121PIndexs)(GLshort);
typedef void(*gl121PIndexdv)(GLdouble*);
typedef void(*gl121PIndexfv)(GLfloat*);
typedef void(*gl121PIndexiv)(GLint*);
typedef void(*gl121PIndexsv)(GLshort*);
typedef void(*gl121PIndexMask)(GLuint);
typedef void(*gl121PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl121PInitNames)();
typedef void(*gl121PIsEnabled)(GLenum);
typedef GLboolean(*gl121PIsList)(GLuint);
typedef void(*gl121PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PLighti)(GLenum, GLenum, GLint);
typedef void(*gl121PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl121PLightModelf)(GLenum, GLfloat);
typedef void(*gl121PLightModeli)(GLenum, GLint);
typedef void(*gl121PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl121PLightModeliv)(GLenum, GLint*);
typedef void(*gl121PLineStipple)(GLint, GLushort);
typedef void(*gl121PLineWidth)(GLfloat);
typedef void(*gl121PListBase)(GLuint);
typedef void(*gl121PLoadIdentity)();
typedef void(*gl121PLoadMatrixd)(GLdouble*);
typedef void(*gl121PLoadMatrixf)(GLfloat*);
typedef void(*gl121PLoadName)(GLuint);
typedef void(*gl121PLogicOp)(GLenum);
typedef void(*gl121PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl121PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl121PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl121PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl121PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl121PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl121PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl121PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl121PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl121PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl121PMatrixMode)(GLenum);
typedef void(*gl121PMultMatrixd)(GLdouble*);
typedef void(*gl121PMultMatrixf)(GLfloat*);
typedef void(*gl121PNewList)(GLuint, GLenum);
typedef void(*gl121PEndList)();
typedef void(*gl121PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl121PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PNormal3i)(GLint, GLint, GLint);
typedef void(*gl121PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PNormal3bv)(GLbyte*);
typedef void(*gl121PNormal3dv)(GLdouble*);
typedef void(*gl121PNormal3fv)(GLfloat*);
typedef void(*gl121PNormal3iv)(GLint*);
typedef void(*gl121PNormal3sv)(GLshort*);
typedef void(*gl121POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PPassThrough)(GLfloat);
typedef void(*gl121PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl121PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl121PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl121PPixelStoref)(GLenum, GLfloat);
typedef void(*gl121PPixelStorei)(GLenum, GLint);
typedef void(*gl121PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl121PPixelTransferi)(GLenum, GLint);
typedef void(*gl121PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl121PPointSize)(GLfloat);
typedef void(*gl121PPolygonMode)(GLenum, GLenum);
typedef void(*gl121PPolygonStipple)(GLubyte*);
typedef void(*gl121PPushAttrib)(GLbitfield);
typedef void(*gl121PPopAttrib)();
typedef void(*gl121PPushMatrix)();
typedef void(*gl121PPopMatrix)();
typedef void(*gl121PPushName)(GLuint);
typedef void(*gl121PPopName)();
typedef void(*gl121PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl121PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl121PRasterPos2i)(GLint, GLint);
typedef void(*gl121PRasterPos2s)(GLshort, GLshort);
typedef void(*gl121PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl121PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl121PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PRasterPos2dv)(GLdouble*);
typedef void(*gl121PRasterPos2fv)(GLfloat*);
typedef void(*gl121PRasterPos2iv)(GLint*);
typedef void(*gl121PRasterPos2sv)(GLshort*);
typedef void(*gl121PRasterPos3dv)(GLdouble*);
typedef void(*gl121PRasterPos3fv)(GLfloat*);
typedef void(*gl121PRasterPos3iv)(GLint*);
typedef void(*gl121PRasterPos3sv)(GLshort*);
typedef void(*gl121PRasterPos4dv)(GLdouble*);
typedef void(*gl121PRasterPos4fv)(GLfloat*);
typedef void(*gl121PRasterPos4iv)(GLint*);
typedef void(*gl121PRasterPos4sv)(GLshort*);
typedef void(*gl121PReadBuffer)(GLenum);
typedef void(*gl121PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl121PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl121PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl121PRectiv)(GLint*, GLint*);
typedef void(*gl121PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl121PRenderMode)(GLenum);
typedef void(*gl121PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl121PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl121PShadeModel)(GLenum);
typedef void(*gl121PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl121PStencilMask)(GLuint);
typedef void(*gl121PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl121PTexCoord1d)(GLdouble);
typedef void(*gl121PTexCoord1f)(GLfloat);
typedef void(*gl121PTexCoord1i)(GLint);
typedef void(*gl121PTexCoord1s)(GLshort);
typedef void(*gl121PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl121PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl121PTexCoord2i)(GLint, GLint);
typedef void(*gl121PTexCoord2s)(GLshort, GLshort);
typedef void(*gl121PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl121PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl121PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PTexCoord1dv)(GLdouble*);
typedef void(*gl121PTexCoord1fv)(GLfloat*);
typedef void(*gl121PTexCoord1iv)(GLint*);
typedef void(*gl121PTexCoord1sv)(GLshort*);
typedef void(*gl121PTexCoord2dv)(GLdouble*);
typedef void(*gl121PTexCoord2fv)(GLfloat*);
typedef void(*gl121PTexCoord2iv)(GLint*);
typedef void(*gl121PTexCoord2sv)(GLshort*);
typedef void(*gl121PTexCoord3dv)(GLdouble*);
typedef void(*gl121PTexCoord3fv)(GLfloat*);
typedef void(*gl121PTexCoord3iv)(GLint*);
typedef void(*gl121PTexCoord3sv)(GLshort*);
typedef void(*gl121PTexCoord4dv)(GLdouble*);
typedef void(*gl121PTexCoord4fv)(GLfloat*);
typedef void(*gl121PTexCoord4iv)(GLint*);
typedef void(*gl121PTexCoord4sv)(GLshort*);
typedef void(*gl121PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl121PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl121PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl121PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl121PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl121PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl121PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl121PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl121PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl121PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PVertex2s)(GLshort, GLshort);
typedef void(*gl121PVertex2i)(GLint, GLint);
typedef void(*gl121PVertex2f)(GLfloat, GLfloat);
typedef void(*gl121PVertex2d)(GLdouble, GLdouble);
typedef void(*gl121PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PVertex3i)(GLint, GLint, GLint);
typedef void(*gl121PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl121PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl121PGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl121PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl121PArrayElement)(GLint);
typedef void(*gl121PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl121PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl121PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl121PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl121PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl121PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl121PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl121PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl121PBindTexture)(GLenum, GLuint);
typedef void(*gl121PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl121PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl121PIsTexture)(GLuint);
typedef void(*gl121PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PEnableClientState)(GLenum);
typedef void(*gl121PDisableClientState)(GLenum);
typedef void(*gl121PIndexub)(GLubyte);
typedef void(*gl121PIndexubv)(GLubyte*);
typedef void(*gl121PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl121PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl121PPushClientAttrib)(GLbitfield);
typedef void(*gl121PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl121PPopClientAttrib)();
typedef void(*gl121PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl121PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl121PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl121PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl121PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl121PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl121PGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl121PGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl121PGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
typedef void(*gl121PGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl121PGetHistogramParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
typedef void(*gl121PHistogram)(GLenum, GLsizei, GLenum, GLboolean);
typedef void(*gl121PMinmax)(GLenum, GLenum, GLboolean);
typedef void(*gl121PMultiTexCoord1s)(GLenum, GLshort);
typedef void(*gl121PMultiTexCoord1i)(GLenum, GLint);
typedef void(*gl121PMultiTexCoord1f)(GLenum, GLfloat);
typedef void(*gl121PMultiTexCoord1d)(GLenum, GLdouble);
typedef void(*gl121PMultiTexCoord2s)(GLenum, GLshort, GLshort);
typedef void(*gl121PMultiTexCoord2i)(GLenum, GLint, GLint);
typedef void(*gl121PMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
typedef void(*gl121PMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
typedef void(*gl121PMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
typedef void(*gl121PMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
typedef void(*gl121PMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl121PMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PMultiTexCoord1sv)(GLenum, GLshort*);
typedef void(*gl121PMultiTexCoord1iv)(GLenum, GLint*);
typedef void(*gl121PMultiTexCoord1fv)(GLenum, GLfloat*);
typedef void(*gl121PMultiTexCoord1dv)(GLenum, GLdouble*);
typedef void(*gl121PMultiTexCoord2sv)(GLenum, GLshort*);
typedef void(*gl121PMultiTexCoord2iv)(GLenum, GLint*);
typedef void(*gl121PMultiTexCoord2fv)(GLenum, GLfloat*);
typedef void(*gl121PMultiTexCoord2dv)(GLenum, GLdouble*);
typedef void(*gl121PMultiTexCoord3sv)(GLenum, GLshort*);
typedef void(*gl121PMultiTexCoord3iv)(GLenum, GLint*);
typedef void(*gl121PMultiTexCoord3fv)(GLenum, GLfloat*);
typedef void(*gl121PMultiTexCoord3dv)(GLenum, GLdouble*);
typedef void(*gl121PMultiTexCoord4sv)(GLenum, GLshort*);
typedef void(*gl121PMultiTexCoord4iv)(GLenum, GLint*);
typedef void(*gl121PMultiTexCoord4fv)(GLenum, GLfloat*);
typedef void(*gl121PMultiTexCoord4dv)(GLenum, GLdouble*);
typedef void(*gl121PResetHistogram)(GLenum);
typedef void(*gl121PResetMinmax)(GLenum);
typedef void(*gl121PSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*);
typedef void(*gl121PBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl121PBlendEquation)(GLenum);
typedef void(*gl121PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl121PDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
typedef void(*gl121PTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl121PTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl121PActiveTexture)(GLenum);
typedef void(*gl121PClientActiveTexture)(GLenum);
typedef void(*gl121PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl121PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl121PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl121PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PGetCompressedTexImage)(GLenum, GLint, GLvoid*);
typedef void(*gl121PLoadTransposeMatrixd)(GLdouble*);
typedef void(*gl121PLoadTransposeMatrixf)(GLdouble*);
typedef void(*gl121PMultTransposeMatrixd)(GLdouble*);
typedef void(*gl121PMultTransposeMatrixf)(GLfloat*);
typedef void(*gl121PSampleCoverage)(GLclampf, GLboolean);
typedef void(*gl121PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl121PFogCoordPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl121PFogCoordd)(GLdouble);
typedef void(*gl121PFogCoordf)(GLfloat);
typedef void(*gl121PFogCoorddv)(GLdouble*);
typedef void(*gl121PFogCoordfv)(GLfloat*);
typedef void(*gl121PMultiDrawArrays)(GLenum, GLint*, GLsizei*, GLsizei);
typedef void(*gl121PMultiDrawElements)(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei);
typedef void(*gl121PPointParameterf)(GLenum, GLfloat);
typedef void(*gl121PPointParameteri)(GLenum, GLint);
typedef void(*gl121PSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl121PSecondaryColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PSecondaryColor3i)(GLint, GLint, GLint);
typedef void(*gl121PSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl121PSecondaryColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl121PSecondaryColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl121PSecondaryColor3bv)(GLbyte*);
typedef void(*gl121PSecondaryColor3sv)(GLshort*);
typedef void(*gl121PSecondaryColor3iv)(GLint*);
typedef void(*gl121PSecondaryColor3fv)(GLfloat*);
typedef void(*gl121PSecondaryColor3dv)(GLdouble*);
typedef void(*gl121PSecondaryColor3ubv)(GLubyte*);
typedef void(*gl121PSecondaryColor3usv)(GLushort*);
typedef void(*gl121PSecondaryColor3uiv)(GLuint*);
typedef void(*gl121PSecondaryColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl121PWindowPos2s)(GLshort, GLshort);
typedef void(*gl121PWindowPos2i)(GLint, GLint);
typedef void(*gl121PWindowPos2f)(GLfloat, GLfloat);
typedef void(*gl121PWindowPos2d)(GLdouble, GLdouble);
typedef void(*gl121PWindowPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl121PWindowPos3i)(GLint, GLint, GLint);
typedef void(*gl121PWindowPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl121PWindowPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl121PWindowPos2sv)(GLshort*);
typedef void(*gl121PWindowPos2iv)(GLint*);
typedef void(*gl121PWindowPos2fv)(GLfloat*);
typedef void(*gl121PWindowPos2dv)(GLdouble*);
typedef void(*gl121PWindowPos3sv)(GLshort*);
typedef void(*gl121PWindowPos3iv)(GLint*);
typedef void(*gl121PWindowPos3fv)(GLfloat*);
typedef void(*gl121PWindowPos3dv)(GLdouble*);
typedef void(*gl121PBeginQuery)(GLenum, GLuint);
typedef void(*gl121PBindBuffer)(GLenum, GLuint);
typedef void(*gl121PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl121PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl121PDeleteBuffers)(GLsizei, GLuint*);
typedef void(*gl121PDeleteQueries)(GLsizei, GLuint*);
typedef void(*gl121PGenBuffers)(GLsizei, GLuint*);
typedef void(*gl121PGenQueries)(GLsizei, GLuint*);
typedef void(*gl121PGetBufferParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl121PGetBufferPointerv)(GLenum, GLenum, GLvoid*);
typedef void(*gl121PGetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
typedef void(*gl121PGetQueryObjectiv)(GLuint, GLenum, GLint*);
typedef void(*gl121PGetQueryObjectuiv)(GLuint, GLenum, GLuint*);
typedef void(*gl121PGetQueryiv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl121PIsBuffer)(GLuint);
typedef GLboolean(*gl121PIsQuery)(GLuint);
typedef GLvoid*(*gl121PMapBuffer)(GLenum, GLenum);
typedef GLboolean(*gl121PUnmapBuffer)(GLenum);
typedef void(*gl121PAttachShader)(GLuint, GLuint);
typedef void(*gl121PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl121PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl121PCompileShader)(GLuint);
typedef GLuint(*gl121PCreateProgram)();
typedef GLuint(*gl121PCreateShader)(GLenum);
typedef void(*gl121PDeleteProgram)(GLuint);
typedef void(*gl121PDeleteShader)(GLuint);
typedef void(*gl121PDetachShader)(GLuint, GLuint);
typedef void(*gl121PEnableVertexAttribArray)(GLuint);
typedef void(*gl121PDisableVertexAttribArray)(GLuint);
typedef void(*gl121PDrawBuffers)(GLsizei, GLenum*);
typedef void(*gl121PGetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl121PGetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl121PGetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
typedef GLint(*gl121PGetAttribLocation)(GLuint, GLchar*);
typedef void(*gl121PGetProgramiv)(GLuint, GLenum, GLint*);
typedef void(*gl121PGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl121PGetShaderiv)(GLuint, GLenum, GLint*);
typedef void(*gl121PGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl121PGetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl121PGetUniformfv)(GLuint, GLint, GLfloat*);
typedef void(*gl121PGetUniformiv)(GLuint, GLint, GLint*);
typedef GLint(*gl121PGetUniformLocation)(GLuint, GLchar*);
typedef void(*gl121PGetVertexAttribdv)(GLuint, GLenum, GLdouble*);
typedef void(*gl121PGetVertexAttribfv)(GLuint, GLenum, GLfloat*);
typedef void(*gl121PGetVertexAttribiv)(GLuint, GLenum, GLint*);
typedef void(*gl121PGetVertexAttribPointerv)(GLuint, GLenum, GLvoid*);
typedef GLboolean(*gl121PIsProgram)(GLuint);
typedef GLboolean(*gl121PIsShader)(GLuint);
typedef void(*gl121PLinkProgram)(GLuint);
typedef void(*gl121PShaderSource)(GLuint, GLsizei, GLchar**, GLint*);
typedef void(*gl121PStencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
typedef void(*gl121PStencilMaskSeparate)(GLenum, GLuint);
typedef void(*gl121PStencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl121PUniform1f)(GLint, GLfloat);
typedef void(*gl121PUniform2f)(GLint, GLfloat, GLfloat);
typedef void(*gl121PUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PUniform1i)(GLint, GLint);
typedef void(*gl121PUniform2i)(GLint, GLint, GLint);
typedef void(*gl121PUniform3i)(GLint, GLint, GLint, GLint);
typedef void(*gl121PUniform4i)(GLint, GLint, GLint, GLint, GLint);
typedef void(*gl121PUniform1fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl121PUniform2fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl121PUniform3fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl121PUniform4fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl121PUniform1iv)(GLint, GLsizei, GLint*);
typedef void(*gl121PUniform2iv)(GLint, GLsizei, GLint*);
typedef void(*gl121PUniform3iv)(GLint, GLsizei, GLint*);
typedef void(*gl121PUniform4iv)(GLint, GLsizei, GLint*);
typedef void(*gl121PUseProgram)(GLuint);
typedef void(*gl121PValidateProgram)(GLuint);
typedef void(*gl121PVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*);
typedef void(*gl121PVertexAttrib1f)(GLuint, GLfloat);
typedef void(*gl121PVertexAttrib1s)(GLuint, GLshort);
typedef void(*gl121PVertexAttrib1d)(GLuint, GLdouble);
typedef void(*gl121PVertexAttrib2f)(GLuint, GLfloat, GLfloat);
typedef void(*gl121PVertexAttrib2s)(GLuint, GLshort, GLshort);
typedef void(*gl121PVertexAttrib2d)(GLuint, GLdouble, GLdouble);
typedef void(*gl121PVertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PVertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
typedef void(*gl121PVertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PVertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl121PVertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl121PVertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl121PVertexAttrib4Nuv)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl121PVertexAttrib1fv)(GLuint, GLfloat*);
typedef void(*gl121PVertexAttrib1sv)(GLuint, GLshort*);
typedef void(*gl121PVertexAttrib1dv)(GLuint, GLdouble*);
typedef void(*gl121PVertexAttrib2fv)(GLuint, GLfloat*);
typedef void(*gl121PVertexAttrib2sv)(GLuint, GLshort*);
typedef void(*gl121PVertexAttrib2dv)(GLuint, GLdouble*);
typedef void(*gl121PVertexAttrib3fv)(GLuint, GLfloat*);
typedef void(*gl121PVertexAttrib3sv)(GLuint, GLshort*);
typedef void(*gl121PVertexAttrib3dv)(GLuint, GLdouble*);
typedef void(*gl121PVertexAttrib4fv)(GLuint, GLfloat*);
typedef void(*gl121PVertexAttrib4sv)(GLuint, GLshort*);
typedef void(*gl121PVertexAttrib4dv)(GLuint, GLdouble*);
typedef void(*gl121PVertexAttrib4iv)(GLuint, GLint*);
typedef void(*gl121PVertexAttrib4bv)(GLuint, GLbyte*);
typedef void(*gl121PVertexAttrib4ubv)(GLuint, GLubyte*);
typedef void(*gl121PVertexAttrib4usv)(GLuint, GLushort*);
typedef void(*gl121PVertexAttrib4uiv)(GLuint, GLuint*);
typedef void(*gl121PVertexAttrib4Nbv)(GLuint, GLbyte*);
typedef void(*gl121PVertexAttrib4Nsv)(GLuint, GLshort*);
typedef void(*gl121PVertexAttrib4Niv)(GLuint, GLint*);
typedef void(*gl121PVertexAttrib4Nubv)(GLuint, GLubyte*);
typedef void(*gl121PVertexAttrib4Nusv)(GLuint, GLushort*);
typedef void(*gl121PVertexAttrib4Nuiv)(GLuint, GLuint*);
typedef void(*gl121PUniformMatrix2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix2x3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix3x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix2x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix4x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix3x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl121PUniformMatrix4x3fv)(GLint, GLsizei, GLboolean, GLfloat*);

typedef struct {
    gl121PAccum fnAccum;
    gl121PAlphaFunc fnAlphaFunc;
    gl121PBegin fnBegin;
    gl121PEnd fnEnd;
    gl121PBitmap fnBitmap;
    gl121PBlendFunc fnBlendFunc;
    gl121PCallList fnCallList;
    gl121PCallLists fnCallLists;
    gl121PClear fnClear;
    gl121PClearAccum fnClearAccum;
    gl121PClearColor fnClearColor;
    gl121PClearDepth fnClearDepth;
    gl121PClearDepthf fnClearDepthf;
    gl121PClearIndex fnClearIndex;
    gl121PClearStencil fnClearStencil;
    gl121PClipPlane fnClipPlane;
    gl121PColor3b fnColor3b;
    gl121PColor3d fnColor3d;
    gl121PColor3f fnColor3f;
    gl121PColor3i fnColor3i;
    gl121PColor3s fnColor3s;
    gl121PColor3ub fnColor3ub;
    gl121PColor3ui fnColor3ui;
    gl121PColor3us fnColor3us;
    gl121PColor4b fnColor4b;
    gl121PColor4d fnColor4d;
    gl121PColor4f fnColor4f;
    gl121PColor4i fnColor4i;
    gl121PColor4s fnColor4s;
    gl121PColor4ub fnColor4ub;
    gl121PColor4ui fnColor4ui;
    gl121PColor4us fnColor4us;
    gl121PColor3bv fnColor3bv;
    gl121PColor3dv fnColor3dv;
    gl121PColor3fv fnColor3fv;
    gl121PColor3iv fnColor3iv;
    gl121PColor3sv fnColor3sv;
    gl121PColor3ubv fnColor3ubv;
    gl121PColor3uiv fnColor3uiv;
    gl121PColor3usv fnColor3usv;
    gl121PColor4bv fnColor4bv;
    gl121PColor4dv fnColor4dv;
    gl121PColor4fv fnColor4fv;
    gl121PColor4iv fnColor4iv;
    gl121PColor4sv fnColor4sv;
    gl121PColor4ubv fnColor4ubv;
    gl121PColor4uiv fnColor4uiv;
    gl121PColor4usv fnColor4usv;
    gl121PColorMask fnColorMask;
    gl121PColorMaterial fnColorMaterial;
    gl121PCopyPixels fnCopyPixels;
    gl121PCullFace fnCullFace;
    gl121PDeleteLists fnDeleteLists;
    gl121PDepthFunc fnDepthFunc;
    gl121PDepthMask fnDepthMask;
    gl121PDepthRange fnDepthRange;
    gl121PEnable fnEnable;
    gl121PDisable fnDisable;
    gl121PDrawBuffer fnDrawBuffer;
    gl121PDrawPixels fnDrawPixels;
    gl121PEdgeFlag fnEdgeFlag;
    gl121PEdgeFlagv fnEdgeFlagv;
    gl121PEdgeFlagPointer fnEdgeFlagPointer;
    gl121PEvalCoord1d fnEvalCoord1d;
    gl121PEvalCoord1f fnEvalCoord1f;
    gl121PEvalCoord2d fnEvalCoord2d;
    gl121PEvalCoord2f fnEvalCoord2f;
    gl121PEvalCoord1dv fnEvalCoord1dv;
    gl121PEvalCoord1fv fnEvalCoord1fv;
    gl121PEvalCoord2dv fnEvalCoord2dv;
    gl121PEvalCoord2fv fnEvalCoord2fv;
    gl121PEvalMesh1 fnEvalMesh1;
    gl121PEvalMesh2 fnEvalMesh2;
    gl121PEvalPoint1 fnEvalPoint1;
    gl121PEvalPoint2 fnEvalPoint2;
    gl121PFeedbackBuffer fnFeedbackBuffer;
    gl121PFinish fnFinish;
    gl121PFlush fnFlush;
    gl121PFogf fnFogf;
    gl121PFogi fnFogi;
    gl121PFogfv fnFogfv;
    gl121PFogiv fnFogiv;
    gl121PFrontFace fnFrontFace;
    gl121PFrustum fnFrustum;
    gl121PGenLists fnGenLists;
    gl121PGetBooleanv fnGetBooleanv;
    gl121PGetDoublev fnGetDoublev;
    gl121PGetFloatv fnGetFloatv;
    gl121PGetIntegerv fnGetIntegerv;
    gl121PGetClipPlane fnGetClipPlane;
    gl121PGetError fnGetError;
    gl121PGetLightfv fnGetLightfv;
    gl121PGetLightiv fnGetLightiv;
    gl121PGetMapdv fnGetMapdv;
    gl121PGetMapfv fnGetMapfv;
    gl121PGetMapiv fnGetMapiv;
    gl121PGetMaterialfv fnGetMaterialfv;
    gl121PGetMaterialiv fnGetMaterialiv;
    gl121PGetPixelMapfv fnGetPixelMapfv;
    gl121PGetPixelMapuiv fnGetPixelMapuiv;
    gl121PGetPixelMapusv fnGetPixelMapusv;
    gl121PGetPolygonStipple fnGetPolygonStipple;
    gl121PGetString fnGetString;
    gl121PGetTexEnvfv fnGetTexEnvfv;
    gl121PGetTexEnviv fnGetTexEnviv;
    gl121PGetTexGendv fnGetTexGendv;
    gl121PGetTexGenfv fnGetTexGenfv;
    gl121PGetTexGeniv fnGetTexGeniv;
    gl121PGetTexImage fnGetTexImage;
    gl121PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl121PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl121PGetTexParameterfv fnGetTexParameterfv;
    gl121PGetTexParameteriv fnGetTexParameteriv;
    gl121PHint fnHint;
    gl121PIndexd fnIndexd;
    gl121PIndexf fnIndexf;
    gl121PIndexi fnIndexi;
    gl121PIndexs fnIndexs;
    gl121PIndexdv fnIndexdv;
    gl121PIndexfv fnIndexfv;
    gl121PIndexiv fnIndexiv;
    gl121PIndexsv fnIndexsv;
    gl121PIndexMask fnIndexMask;
    gl121PIndexPointer fnIndexPointer;
    gl121PInitNames fnInitNames;
    gl121PIsEnabled fnIsEnabled;
    gl121PIsList fnIsList;
    gl121PLightf fnLightf;
    gl121PLighti fnLighti;
    gl121PLightfv fnLightfv;
    gl121PLightiv fnLightiv;
    gl121PLightModelf fnLightModelf;
    gl121PLightModeli fnLightModeli;
    gl121PLightModelfv fnLightModelfv;
    gl121PLightModeliv fnLightModeliv;
    gl121PLineStipple fnLineStipple;
    gl121PLineWidth fnLineWidth;
    gl121PListBase fnListBase;
    gl121PLoadIdentity fnLoadIdentity;
    gl121PLoadMatrixd fnLoadMatrixd;
    gl121PLoadMatrixf fnLoadMatrixf;
    gl121PLoadName fnLoadName;
    gl121PLogicOp fnLogicOp;
    gl121PMap1d fnMap1d;
    gl121PMap1f fnMap1f;
    gl121PMap2d fnMap2d;
    gl121PMap2f fnMap2f;
    gl121PMapGrid1d fnMapGrid1d;
    gl121PMapGrid1f fnMapGrid1f;
    gl121PMapGrid2d fnMapGrid2d;
    gl121PMapGrid2f fnMapGrid2f;
    gl121PMaterialf fnMaterialf;
    gl121PMateriali fnMateriali;
    gl121PMaterialfv fnMaterialfv;
    gl121PMaterialiv fnMaterialiv;
    gl121PMatrixMode fnMatrixMode;
    gl121PMultMatrixd fnMultMatrixd;
    gl121PMultMatrixf fnMultMatrixf;
    gl121PNewList fnNewList;
    gl121PEndList fnEndList;
    gl121PNormal3b fnNormal3b;
    gl121PNormal3d fnNormal3d;
    gl121PNormal3f fnNormal3f;
    gl121PNormal3i fnNormal3i;
    gl121PNormal3s fnNormal3s;
    gl121PNormal3bv fnNormal3bv;
    gl121PNormal3dv fnNormal3dv;
    gl121PNormal3fv fnNormal3fv;
    gl121PNormal3iv fnNormal3iv;
    gl121PNormal3sv fnNormal3sv;
    gl121POrtho fnOrtho;
    gl121PPassThrough fnPassThrough;
    gl121PPixelMapfv fnPixelMapfv;
    gl121PPixelMapuiv fnPixelMapuiv;
    gl121PPixelMapusv fnPixelMapusv;
    gl121PPixelStoref fnPixelStoref;
    gl121PPixelStorei fnPixelStorei;
    gl121PPixelTransferf fnPixelTransferf;
    gl121PPixelTransferi fnPixelTransferi;
    gl121PPixelZoom fnPixelZoom;
    gl121PPointSize fnPointSize;
    gl121PPolygonMode fnPolygonMode;
    gl121PPolygonStipple fnPolygonStipple;
    gl121PPushAttrib fnPushAttrib;
    gl121PPopAttrib fnPopAttrib;
    gl121PPushMatrix fnPushMatrix;
    gl121PPopMatrix fnPopMatrix;
    gl121PPushName fnPushName;
    gl121PPopName fnPopName;
    gl121PRasterPos2d fnRasterPos2d;
    gl121PRasterPos2f fnRasterPos2f;
    gl121PRasterPos2i fnRasterPos2i;
    gl121PRasterPos2s fnRasterPos2s;
    gl121PRasterPos3d fnRasterPos3d;
    gl121PRasterPos3f fnRasterPos3f;
    gl121PRasterPos3i fnRasterPos3i;
    gl121PRasterPos3s fnRasterPos3s;
    gl121PRasterPos4d fnRasterPos4d;
    gl121PRasterPos4f fnRasterPos4f;
    gl121PRasterPos4i fnRasterPos4i;
    gl121PRasterPos4s fnRasterPos4s;
    gl121PRasterPos2dv fnRasterPos2dv;
    gl121PRasterPos2fv fnRasterPos2fv;
    gl121PRasterPos2iv fnRasterPos2iv;
    gl121PRasterPos2sv fnRasterPos2sv;
    gl121PRasterPos3dv fnRasterPos3dv;
    gl121PRasterPos3fv fnRasterPos3fv;
    gl121PRasterPos3iv fnRasterPos3iv;
    gl121PRasterPos3sv fnRasterPos3sv;
    gl121PRasterPos4dv fnRasterPos4dv;
    gl121PRasterPos4fv fnRasterPos4fv;
    gl121PRasterPos4iv fnRasterPos4iv;
    gl121PRasterPos4sv fnRasterPos4sv;
    gl121PReadBuffer fnReadBuffer;
    gl121PReadPixels fnReadPixels;
    gl121PRectd fnRectd;
    gl121PRectf fnRectf;
    gl121PRecti fnRecti;
    gl121PRects fnRects;
    gl121PRectdv fnRectdv;
    gl121PRectfv fnRectfv;
    gl121PRectiv fnRectiv;
    gl121PRectsv fnRectsv;
    gl121PRenderMode fnRenderMode;
    gl121PRotated fnRotated;
    gl121PRotatef fnRotatef;
    gl121PScaled fnScaled;
    gl121PScalef fnScalef;
    gl121PScissor fnScissor;
    gl121PSelectBuffer fnSelectBuffer;
    gl121PShadeModel fnShadeModel;
    gl121PStencilFunc fnStencilFunc;
    gl121PStencilMask fnStencilMask;
    gl121PStencilOp fnStencilOp;
    gl121PTexCoord1d fnTexCoord1d;
    gl121PTexCoord1f fnTexCoord1f;
    gl121PTexCoord1i fnTexCoord1i;
    gl121PTexCoord1s fnTexCoord1s;
    gl121PTexCoord2d fnTexCoord2d;
    gl121PTexCoord2f fnTexCoord2f;
    gl121PTexCoord2i fnTexCoord2i;
    gl121PTexCoord2s fnTexCoord2s;
    gl121PTexCoord3d fnTexCoord3d;
    gl121PTexCoord3f fnTexCoord3f;
    gl121PTexCoord3i fnTexCoord3i;
    gl121PTexCoord3s fnTexCoord3s;
    gl121PTexCoord4d fnTexCoord4d;
    gl121PTexCoord4f fnTexCoord4f;
    gl121PTexCoord4i fnTexCoord4i;
    gl121PTexCoord4s fnTexCoord4s;
    gl121PTexCoord1dv fnTexCoord1dv;
    gl121PTexCoord1fv fnTexCoord1fv;
    gl121PTexCoord1iv fnTexCoord1iv;
    gl121PTexCoord1sv fnTexCoord1sv;
    gl121PTexCoord2dv fnTexCoord2dv;
    gl121PTexCoord2fv fnTexCoord2fv;
    gl121PTexCoord2iv fnTexCoord2iv;
    gl121PTexCoord2sv fnTexCoord2sv;
    gl121PTexCoord3dv fnTexCoord3dv;
    gl121PTexCoord3fv fnTexCoord3fv;
    gl121PTexCoord3iv fnTexCoord3iv;
    gl121PTexCoord3sv fnTexCoord3sv;
    gl121PTexCoord4dv fnTexCoord4dv;
    gl121PTexCoord4fv fnTexCoord4fv;
    gl121PTexCoord4iv fnTexCoord4iv;
    gl121PTexCoord4sv fnTexCoord4sv;
    gl121PTexEnvf fnTexEnvf;
    gl121PTexEnvi fnTexEnvi;
    gl121PTexEnvfv fnTexEnvfv;
    gl121PTexEnviv fnTexEnviv;
    gl121PTexGend fnTexGend;
    gl121PTexGenf fnTexGenf;
    gl121PTexGeni fnTexGeni;
    gl121PTexGendv fnTexGendv;
    gl121PTexGenfv fnTexGenfv;
    gl121PTexGeniv fnTexGeniv;
    gl121PTexImage1D fnTexImage1D;
    gl121PTexImage2D fnTexImage2D;
    gl121PTexParameterf fnTexParameterf;
    gl121PTexParameteri fnTexParameteri;
    gl121PTexParameterfv fnTexParameterfv;
    gl121PTexParameteriv fnTexParameteriv;
    gl121PTranslated fnTranslated;
    gl121PTranslatef fnTranslatef;
    gl121PVertex2s fnVertex2s;
    gl121PVertex2i fnVertex2i;
    gl121PVertex2f fnVertex2f;
    gl121PVertex2d fnVertex2d;
    gl121PVertex3s fnVertex3s;
    gl121PVertex3i fnVertex3i;
    gl121PVertex3f fnVertex3f;
    gl121PVertex3d fnVertex3d;
    gl121PVertex4s fnVertex4s;
    gl121PVertex4i fnVertex4i;
    gl121PVertex4f fnVertex4f;
    gl121PVertex4d fnVertex4d;
    gl121PViewport fnViewport;
    gl121PGetConvolutionParameterfv fnGetConvolutionParameterfv;
    gl121PGetConvolutionParameteriv fnGetConvolutionParameteriv;
    gl121PAreTexturesResident fnAreTexturesResident;
    gl121PArrayElement fnArrayElement;
    gl121PDrawArrays fnDrawArrays;
    gl121PDrawElements fnDrawElements;
    gl121PGetPointerv fnGetPointerv;
    gl121PPolygonOffset fnPolygonOffset;
    gl121PCopyTexImage1D fnCopyTexImage1D;
    gl121PCopyTexImage2D fnCopyTexImage2D;
    gl121PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl121PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl121PBindTexture fnBindTexture;
    gl121PDeleteTextures fnDeleteTextures;
    gl121PGenTextures fnGenTextures;
    gl121PIsTexture fnIsTexture;
    gl121PColorPointer fnColorPointer;
    gl121PEnableClientState fnEnableClientState;
    gl121PDisableClientState fnDisableClientState;
    gl121PIndexub fnIndexub;
    gl121PIndexubv fnIndexubv;
    gl121PInterleavedArrays fnInterleavedArrays;
    gl121PNormalPointer fnNormalPointer;
    gl121PPushClientAttrib fnPushClientAttrib;
    gl121PPrioritizeTextures fnPrioritizeTextures;
    gl121PPopClientAttrib fnPopClientAttrib;
    gl121PTexCoordPointer fnTexCoordPointer;
    gl121PTexSubImage1D fnTexSubImage1D;
    gl121PTexSubImage2D fnTexSubImage2D;
    gl121PVertexPointer fnVertexPointer;
    gl121PColorTable fnColorTable;
    gl121PColorTableParameterfv fnColorTableParameterfv;
    gl121PColorTableParameteriv fnColorTableParameteriv;
    gl121PColorSubTable fnColorSubTable;
    gl121PConvolutionFilter1D fnConvolutionFilter1D;
    gl121PConvolutionFilter2D fnConvolutionFilter2D;
    gl121PConvolutionParameterf fnConvolutionParameterf;
    gl121PConvolutionParameteri fnConvolutionParameteri;
    gl121PCopyColorTable fnCopyColorTable;
    gl121PCopyColorSubTable fnCopyColorSubTable;
    gl121PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl121PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl121PGetColorTable fnGetColorTable;
    gl121PGetColorTableParameterfv fnGetColorTableParameterfv;
    gl121PGetColorTableParameteriv fnGetColorTableParameteriv;
    gl121PGetConvolutionFilter fnGetConvolutionFilter;
    gl121PGetHistogram fnGetHistogram;
    gl121PGetHistogramParameterfv fnGetHistogramParameterfv;
    gl121PGetHistogramParameteriv fnGetHistogramParameteriv;
    gl121PGetSeparableFilter fnGetSeparableFilter;
    gl121PHistogram fnHistogram;
    gl121PMinmax fnMinmax;
    gl121PMultiTexCoord1s fnMultiTexCoord1s;
    gl121PMultiTexCoord1i fnMultiTexCoord1i;
    gl121PMultiTexCoord1f fnMultiTexCoord1f;
    gl121PMultiTexCoord1d fnMultiTexCoord1d;
    gl121PMultiTexCoord2s fnMultiTexCoord2s;
    gl121PMultiTexCoord2i fnMultiTexCoord2i;
    gl121PMultiTexCoord2f fnMultiTexCoord2f;
    gl121PMultiTexCoord2d fnMultiTexCoord2d;
    gl121PMultiTexCoord3s fnMultiTexCoord3s;
    gl121PMultiTexCoord3i fnMultiTexCoord3i;
    gl121PMultiTexCoord3f fnMultiTexCoord3f;
    gl121PMultiTexCoord3d fnMultiTexCoord3d;
    gl121PMultiTexCoord4s fnMultiTexCoord4s;
    gl121PMultiTexCoord4i fnMultiTexCoord4i;
    gl121PMultiTexCoord4f fnMultiTexCoord4f;
    gl121PMultiTexCoord4d fnMultiTexCoord4d;
    gl121PMultiTexCoord1sv fnMultiTexCoord1sv;
    gl121PMultiTexCoord1iv fnMultiTexCoord1iv;
    gl121PMultiTexCoord1fv fnMultiTexCoord1fv;
    gl121PMultiTexCoord1dv fnMultiTexCoord1dv;
    gl121PMultiTexCoord2sv fnMultiTexCoord2sv;
    gl121PMultiTexCoord2iv fnMultiTexCoord2iv;
    gl121PMultiTexCoord2fv fnMultiTexCoord2fv;
    gl121PMultiTexCoord2dv fnMultiTexCoord2dv;
    gl121PMultiTexCoord3sv fnMultiTexCoord3sv;
    gl121PMultiTexCoord3iv fnMultiTexCoord3iv;
    gl121PMultiTexCoord3fv fnMultiTexCoord3fv;
    gl121PMultiTexCoord3dv fnMultiTexCoord3dv;
    gl121PMultiTexCoord4sv fnMultiTexCoord4sv;
    gl121PMultiTexCoord4iv fnMultiTexCoord4iv;
    gl121PMultiTexCoord4fv fnMultiTexCoord4fv;
    gl121PMultiTexCoord4dv fnMultiTexCoord4dv;
    gl121PResetHistogram fnResetHistogram;
    gl121PResetMinmax fnResetMinmax;
    gl121PSeparableFilter2D fnSeparableFilter2D;
    gl121PBlendColor fnBlendColor;
    gl121PBlendEquation fnBlendEquation;
    gl121PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl121PDrawRangeElements fnDrawRangeElements;
    gl121PTexImage3D fnTexImage3D;
    gl121PTexSubImage3D fnTexSubImage3D;
    gl121PActiveTexture fnActiveTexture;
    gl121PClientActiveTexture fnClientActiveTexture;
    gl121PCompressedTexImage1D fnCompressedTexImage1D;
    gl121PCompressedTexImage2D fnCompressedTexImage2D;
    gl121PCompressedTexImage3D fnCompressedTexImage3D;
    gl121PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl121PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl121PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl121PGetCompressedTexImage fnGetCompressedTexImage;
    gl121PLoadTransposeMatrixd fnLoadTransposeMatrixd;
    gl121PLoadTransposeMatrixf fnLoadTransposeMatrixf;
    gl121PMultTransposeMatrixd fnMultTransposeMatrixd;
    gl121PMultTransposeMatrixf fnMultTransposeMatrixf;
    gl121PSampleCoverage fnSampleCoverage;
    gl121PBlendFuncSeparate fnBlendFuncSeparate;
    gl121PFogCoordPointer fnFogCoordPointer;
    gl121PFogCoordd fnFogCoordd;
    gl121PFogCoordf fnFogCoordf;
    gl121PFogCoorddv fnFogCoorddv;
    gl121PFogCoordfv fnFogCoordfv;
    gl121PMultiDrawArrays fnMultiDrawArrays;
    gl121PMultiDrawElements fnMultiDrawElements;
    gl121PPointParameterf fnPointParameterf;
    gl121PPointParameteri fnPointParameteri;
    gl121PSecondaryColor3b fnSecondaryColor3b;
    gl121PSecondaryColor3s fnSecondaryColor3s;
    gl121PSecondaryColor3i fnSecondaryColor3i;
    gl121PSecondaryColor3f fnSecondaryColor3f;
    gl121PSecondaryColor3d fnSecondaryColor3d;
    gl121PSecondaryColor3ub fnSecondaryColor3ub;
    gl121PSecondaryColor3us fnSecondaryColor3us;
    gl121PSecondaryColor3ui fnSecondaryColor3ui;
    gl121PSecondaryColor3bv fnSecondaryColor3bv;
    gl121PSecondaryColor3sv fnSecondaryColor3sv;
    gl121PSecondaryColor3iv fnSecondaryColor3iv;
    gl121PSecondaryColor3fv fnSecondaryColor3fv;
    gl121PSecondaryColor3dv fnSecondaryColor3dv;
    gl121PSecondaryColor3ubv fnSecondaryColor3ubv;
    gl121PSecondaryColor3usv fnSecondaryColor3usv;
    gl121PSecondaryColor3uiv fnSecondaryColor3uiv;
    gl121PSecondaryColorPointer fnSecondaryColorPointer;
    gl121PWindowPos2s fnWindowPos2s;
    gl121PWindowPos2i fnWindowPos2i;
    gl121PWindowPos2f fnWindowPos2f;
    gl121PWindowPos2d fnWindowPos2d;
    gl121PWindowPos3s fnWindowPos3s;
    gl121PWindowPos3i fnWindowPos3i;
    gl121PWindowPos3f fnWindowPos3f;
    gl121PWindowPos3d fnWindowPos3d;
    gl121PWindowPos2sv fnWindowPos2sv;
    gl121PWindowPos2iv fnWindowPos2iv;
    gl121PWindowPos2fv fnWindowPos2fv;
    gl121PWindowPos2dv fnWindowPos2dv;
    gl121PWindowPos3sv fnWindowPos3sv;
    gl121PWindowPos3iv fnWindowPos3iv;
    gl121PWindowPos3fv fnWindowPos3fv;
    gl121PWindowPos3dv fnWindowPos3dv;
    gl121PBeginQuery fnBeginQuery;
    gl121PBindBuffer fnBindBuffer;
    gl121PBufferData fnBufferData;
    gl121PBufferSubData fnBufferSubData;
    gl121PDeleteBuffers fnDeleteBuffers;
    gl121PDeleteQueries fnDeleteQueries;
    gl121PGenBuffers fnGenBuffers;
    gl121PGenQueries fnGenQueries;
    gl121PGetBufferParameteriv fnGetBufferParameteriv;
    gl121PGetBufferPointerv fnGetBufferPointerv;
    gl121PGetBufferSubData fnGetBufferSubData;
    gl121PGetQueryObjectiv fnGetQueryObjectiv;
    gl121PGetQueryObjectuiv fnGetQueryObjectuiv;
    gl121PGetQueryiv fnGetQueryiv;
    gl121PIsBuffer fnIsBuffer;
    gl121PIsQuery fnIsQuery;
    gl121PMapBuffer fnMapBuffer;
    gl121PUnmapBuffer fnUnmapBuffer;
    gl121PAttachShader fnAttachShader;
    gl121PBindAttribLocation fnBindAttribLocation;
    gl121PBlendEquationSeperate fnBlendEquationSeperate;
    gl121PCompileShader fnCompileShader;
    gl121PCreateProgram fnCreateProgram;
    gl121PCreateShader fnCreateShader;
    gl121PDeleteProgram fnDeleteProgram;
    gl121PDeleteShader fnDeleteShader;
    gl121PDetachShader fnDetachShader;
    gl121PEnableVertexAttribArray fnEnableVertexAttribArray;
    gl121PDisableVertexAttribArray fnDisableVertexAttribArray;
    gl121PDrawBuffers fnDrawBuffers;
    gl121PGetActiveAttrib fnGetActiveAttrib;
    gl121PGetActiveUniform fnGetActiveUniform;
    gl121PGetAttachedShaders fnGetAttachedShaders;
    gl121PGetAttribLocation fnGetAttribLocation;
    gl121PGetProgramiv fnGetProgramiv;
    gl121PGetProgramInfoLog fnGetProgramInfoLog;
    gl121PGetShaderiv fnGetShaderiv;
    gl121PGetShaderInfoLog fnGetShaderInfoLog;
    gl121PGetShaderSource fnGetShaderSource;
    gl121PGetUniformfv fnGetUniformfv;
    gl121PGetUniformiv fnGetUniformiv;
    gl121PGetUniformLocation fnGetUniformLocation;
    gl121PGetVertexAttribdv fnGetVertexAttribdv;
    gl121PGetVertexAttribfv fnGetVertexAttribfv;
    gl121PGetVertexAttribiv fnGetVertexAttribiv;
    gl121PGetVertexAttribPointerv fnGetVertexAttribPointerv;
    gl121PIsProgram fnIsProgram;
    gl121PIsShader fnIsShader;
    gl121PLinkProgram fnLinkProgram;
    gl121PShaderSource fnShaderSource;
    gl121PStencilFuncSeparate fnStencilFuncSeparate;
    gl121PStencilMaskSeparate fnStencilMaskSeparate;
    gl121PStencilOpSeparate fnStencilOpSeparate;
    gl121PUniform1f fnUniform1f;
    gl121PUniform2f fnUniform2f;
    gl121PUniform3f fnUniform3f;
    gl121PUniform4f fnUniform4f;
    gl121PUniform1i fnUniform1i;
    gl121PUniform2i fnUniform2i;
    gl121PUniform3i fnUniform3i;
    gl121PUniform4i fnUniform4i;
    gl121PUniform1fv fnUniform1fv;
    gl121PUniform2fv fnUniform2fv;
    gl121PUniform3fv fnUniform3fv;
    gl121PUniform4fv fnUniform4fv;
    gl121PUniform1iv fnUniform1iv;
    gl121PUniform2iv fnUniform2iv;
    gl121PUniform3iv fnUniform3iv;
    gl121PUniform4iv fnUniform4iv;
    gl121PUseProgram fnUseProgram;
    gl121PValidateProgram fnValidateProgram;
    gl121PVertexAttribPointer fnVertexAttribPointer;
    gl121PVertexAttrib1f fnVertexAttrib1f;
    gl121PVertexAttrib1s fnVertexAttrib1s;
    gl121PVertexAttrib1d fnVertexAttrib1d;
    gl121PVertexAttrib2f fnVertexAttrib2f;
    gl121PVertexAttrib2s fnVertexAttrib2s;
    gl121PVertexAttrib2d fnVertexAttrib2d;
    gl121PVertexAttrib3f fnVertexAttrib3f;
    gl121PVertexAttrib3s fnVertexAttrib3s;
    gl121PVertexAttrib3d fnVertexAttrib3d;
    gl121PVertexAttrib4f fnVertexAttrib4f;
    gl121PVertexAttrib4s fnVertexAttrib4s;
    gl121PVertexAttrib4d fnVertexAttrib4d;
    gl121PVertexAttrib4Nuv fnVertexAttrib4Nuv;
    gl121PVertexAttrib1fv fnVertexAttrib1fv;
    gl121PVertexAttrib1sv fnVertexAttrib1sv;
    gl121PVertexAttrib1dv fnVertexAttrib1dv;
    gl121PVertexAttrib2fv fnVertexAttrib2fv;
    gl121PVertexAttrib2sv fnVertexAttrib2sv;
    gl121PVertexAttrib2dv fnVertexAttrib2dv;
    gl121PVertexAttrib3fv fnVertexAttrib3fv;
    gl121PVertexAttrib3sv fnVertexAttrib3sv;
    gl121PVertexAttrib3dv fnVertexAttrib3dv;
    gl121PVertexAttrib4fv fnVertexAttrib4fv;
    gl121PVertexAttrib4sv fnVertexAttrib4sv;
    gl121PVertexAttrib4dv fnVertexAttrib4dv;
    gl121PVertexAttrib4iv fnVertexAttrib4iv;
    gl121PVertexAttrib4bv fnVertexAttrib4bv;
    gl121PVertexAttrib4ubv fnVertexAttrib4ubv;
    gl121PVertexAttrib4usv fnVertexAttrib4usv;
    gl121PVertexAttrib4uiv fnVertexAttrib4uiv;
    gl121PVertexAttrib4Nbv fnVertexAttrib4Nbv;
    gl121PVertexAttrib4Nsv fnVertexAttrib4Nsv;
    gl121PVertexAttrib4Niv fnVertexAttrib4Niv;
    gl121PVertexAttrib4Nubv fnVertexAttrib4Nubv;
    gl121PVertexAttrib4Nusv fnVertexAttrib4Nusv;
    gl121PVertexAttrib4Nuiv fnVertexAttrib4Nuiv;
    gl121PUniformMatrix2fv fnUniformMatrix2fv;
    gl121PUniformMatrix3fv fnUniformMatrix3fv;
    gl121PUniformMatrix4fv fnUniformMatrix4fv;
    gl121PUniformMatrix2x3fv fnUniformMatrix2x3fv;
    gl121PUniformMatrix3x2fv fnUniformMatrix3x2fv;
    gl121PUniformMatrix2x4fv fnUniformMatrix2x4fv;
    gl121PUniformMatrix4x2fv fnUniformMatrix4x2fv;
    gl121PUniformMatrix3x4fv fnUniformMatrix3x4fv;
    gl121PUniformMatrix4x3fv fnUniformMatrix4x3fv;
} gl121Context;

extern gl121Context* gl121NewContext();
void gl121Accum(gl121Context* glc, GLenum op, GLfloat value);
void gl121AlphaFunc(gl121Context* glc, GLenum func, GLclampf ref);
void gl121Begin(gl121Context* glc, GLenum mode);
void gl121End(gl121Context* glc);
void gl121Bitmap(gl121Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl121BlendFunc(gl121Context* glc, GLenum sfactor, GLenum dfactor);
void gl121CallList(gl121Context* glc, GLuint list);
void gl121CallLists(gl121Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl121Clear(gl121Context* glc, GLbitfield mask);
void gl121ClearAccum(gl121Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl121ClearColor(gl121Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl121ClearDepth(gl121Context* glc, GLclampd depth);
void gl121ClearDepthf(gl121Context* glc, GLclampf depth);
void gl121ClearIndex(gl121Context* glc, GLfloat c);
void gl121ClearStencil(gl121Context* glc, GLint s);
void gl121ClipPlane(gl121Context* glc, GLenum plane, GLdouble* equation);
void gl121Color3b(gl121Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl121Color3d(gl121Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl121Color3f(gl121Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl121Color3i(gl121Context* glc, GLint red, GLint green, GLint blue);
void gl121Color3s(gl121Context* glc, GLshort red, GLshort green, GLshort blue);
void gl121Color3ub(gl121Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl121Color3ui(gl121Context* glc, GLuint red, GLuint green, GLuint blue);
void gl121Color3us(gl121Context* glc, GLushort red, GLushort green, GLushort blue);
void gl121Color4b(gl121Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl121Color4d(gl121Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl121Color4f(gl121Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl121Color4i(gl121Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl121Color4s(gl121Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl121Color4ub(gl121Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl121Color4ui(gl121Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl121Color4us(gl121Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl121Color3bv(gl121Context* glc, GLbyte* v);
void gl121Color3dv(gl121Context* glc, GLdouble* v);
void gl121Color3fv(gl121Context* glc, GLfloat* v);
void gl121Color3iv(gl121Context* glc, GLint* v);
void gl121Color3sv(gl121Context* glc, GLshort* v);
void gl121Color3ubv(gl121Context* glc, GLubyte* v);
void gl121Color3uiv(gl121Context* glc, GLuint* v);
void gl121Color3usv(gl121Context* glc, GLushort* v);
void gl121Color4bv(gl121Context* glc, GLbyte* v);
void gl121Color4dv(gl121Context* glc, GLdouble* v);
void gl121Color4fv(gl121Context* glc, GLfloat* v);
void gl121Color4iv(gl121Context* glc, GLint* v);
void gl121Color4sv(gl121Context* glc, GLshort* v);
void gl121Color4ubv(gl121Context* glc, GLubyte* v);
void gl121Color4uiv(gl121Context* glc, GLuint* v);
void gl121Color4usv(gl121Context* glc, GLushort* v);
void gl121ColorMask(gl121Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl121ColorMaterial(gl121Context* glc, GLenum face, GLenum mode);
void gl121CopyPixels(gl121Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl121CullFace(gl121Context* glc, GLenum mode);
void gl121DeleteLists(gl121Context* glc, GLuint list, GLsizei range);
void gl121DepthFunc(gl121Context* glc, GLenum func);
void gl121DepthMask(gl121Context* glc, GLboolean flag);
void gl121DepthRange(gl121Context* glc, GLclampd zNear, GLclampd zFar);
void gl121Enable(gl121Context* glc, GLenum cap);
void gl121Disable(gl121Context* glc, GLenum cap);
void gl121DrawBuffer(gl121Context* glc, GLenum mode);
void gl121DrawPixels(gl121Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl121EdgeFlag(gl121Context* glc, GLboolean flag);
void gl121EdgeFlagv(gl121Context* glc, GLboolean* flag);
void gl121EdgeFlagPointer(gl121Context* glc, GLsizei stride, GLvoid* pointer);
void gl121EvalCoord1d(gl121Context* glc, GLdouble u);
void gl121EvalCoord1f(gl121Context* glc, GLfloat u);
void gl121EvalCoord2d(gl121Context* glc, GLdouble u, GLdouble v);
void gl121EvalCoord2f(gl121Context* glc, GLfloat u, GLfloat v);
void gl121EvalCoord1dv(gl121Context* glc, GLdouble* u);
void gl121EvalCoord1fv(gl121Context* glc, GLfloat* u);
void gl121EvalCoord2dv(gl121Context* glc, GLdouble* u);
void gl121EvalCoord2fv(gl121Context* glc, GLfloat* u);
void gl121EvalMesh1(gl121Context* glc, GLenum mode, GLint i1, GLint i2);
void gl121EvalMesh2(gl121Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl121EvalPoint1(gl121Context* glc, GLint i);
void gl121EvalPoint2(gl121Context* glc, GLint i, GLint j);
void gl121FeedbackBuffer(gl121Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl121Finish(gl121Context* glc);
void gl121Flush(gl121Context* glc);
void gl121Fogf(gl121Context* glc, GLenum pname, GLfloat param);
void gl121Fogi(gl121Context* glc, GLenum pname, GLint param);
void gl121Fogfv(gl121Context* glc, GLenum pname, GLfloat* params);
void gl121Fogiv(gl121Context* glc, GLenum pname, GLint* params);
void gl121FrontFace(gl121Context* glc, GLenum mode);
void gl121Frustum(gl121Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl121GenLists(gl121Context* glc, GLsizei range);
void gl121GetBooleanv(gl121Context* glc, GLenum pname, GLboolean* params);
void gl121GetDoublev(gl121Context* glc, GLenum pname, GLdouble* params);
void gl121GetFloatv(gl121Context* glc, GLenum pname, GLfloat* params);
void gl121GetIntegerv(gl121Context* glc, GLenum pname, GLint* params);
void gl121GetClipPlane(gl121Context* glc, GLenum plane, GLdouble* equation);
GLenum gl121GetError(gl121Context* glc);
void gl121GetLightfv(gl121Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl121GetLightiv(gl121Context* glc, GLenum light, GLenum pname, GLint* params);
void gl121GetMapdv(gl121Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl121GetMapfv(gl121Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl121GetMapiv(gl121Context* glc, GLenum target, GLenum query, GLint* v);
void gl121GetMaterialfv(gl121Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl121GetMaterialiv(gl121Context* glc, GLenum face, GLenum pname, GLint* params);
void gl121GetPixelMapfv(gl121Context* glc, GLenum map, GLfloat* values);
void gl121GetPixelMapuiv(gl121Context* glc, GLenum map, GLuint* values);
void gl121GetPixelMapusv(gl121Context* glc, GLenum map, GLushort* values);
void gl121GetPolygonStipple(gl121Context* glc, GLubyte* pattern);
GLubyte* gl121GetString(gl121Context* glc, GLenum name);
void gl121GetTexEnvfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121GetTexEnviv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121GetTexGendv(gl121Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl121GetTexGenfv(gl121Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl121GetTexGeniv(gl121Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl121GetTexImage(gl121Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl121GetTexLevelParameterfv(gl121Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl121GetTexLevelParameteriv(gl121Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl121GetTexParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121GetTexParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121Hint(gl121Context* glc, GLenum target, GLenum mode);
void gl121Indexd(gl121Context* glc, GLdouble c);
void gl121Indexf(gl121Context* glc, GLfloat c);
void gl121Indexi(gl121Context* glc, GLint c);
void gl121Indexs(gl121Context* glc, GLshort c);
void gl121Indexdv(gl121Context* glc, GLdouble* c);
void gl121Indexfv(gl121Context* glc, GLfloat* c);
void gl121Indexiv(gl121Context* glc, GLint* c);
void gl121Indexsv(gl121Context* glc, GLshort* c);
void gl121IndexMask(gl121Context* glc, GLuint mask);
void gl121IndexPointer(gl121Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121InitNames(gl121Context* glc);
void gl121IsEnabled(gl121Context* glc, GLenum cap);
GLboolean gl121IsList(gl121Context* glc, GLuint list);
void gl121Lightf(gl121Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl121Lighti(gl121Context* glc, GLenum light, GLenum pname, GLint param);
void gl121Lightfv(gl121Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl121Lightiv(gl121Context* glc, GLenum light, GLenum pname, GLint* params);
void gl121LightModelf(gl121Context* glc, GLenum pname, GLfloat param);
void gl121LightModeli(gl121Context* glc, GLenum pname, GLint param);
void gl121LightModelfv(gl121Context* glc, GLenum pname, GLfloat* params);
void gl121LightModeliv(gl121Context* glc, GLenum pname, GLint* params);
void gl121LineStipple(gl121Context* glc, GLint factor, GLushort pattern);
void gl121LineWidth(gl121Context* glc, GLfloat width);
void gl121ListBase(gl121Context* glc, GLuint base);
void gl121LoadIdentity(gl121Context* glc);
void gl121LoadMatrixd(gl121Context* glc, GLdouble* m);
void gl121LoadMatrixf(gl121Context* glc, GLfloat* m);
void gl121LoadName(gl121Context* glc, GLuint name);
void gl121LogicOp(gl121Context* glc, GLenum opcode);
void gl121Map1d(gl121Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl121Map1f(gl121Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl121Map2d(gl121Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl121Map2f(gl121Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl121MapGrid1d(gl121Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl121MapGrid1f(gl121Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl121MapGrid2d(gl121Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl121MapGrid2f(gl121Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl121Materialf(gl121Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl121Materiali(gl121Context* glc, GLenum face, GLenum pname, GLint param);
void gl121Materialfv(gl121Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl121Materialiv(gl121Context* glc, GLenum face, GLenum pname, GLint* params);
void gl121MatrixMode(gl121Context* glc, GLenum mode);
void gl121MultMatrixd(gl121Context* glc, GLdouble* m);
void gl121MultMatrixf(gl121Context* glc, GLfloat* m);
void gl121NewList(gl121Context* glc, GLuint list, GLenum mode);
void gl121EndList(gl121Context* glc);
void gl121Normal3b(gl121Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl121Normal3d(gl121Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl121Normal3f(gl121Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl121Normal3i(gl121Context* glc, GLint nx, GLint ny, GLint nz);
void gl121Normal3s(gl121Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl121Normal3bv(gl121Context* glc, GLbyte* v);
void gl121Normal3dv(gl121Context* glc, GLdouble* v);
void gl121Normal3fv(gl121Context* glc, GLfloat* v);
void gl121Normal3iv(gl121Context* glc, GLint* v);
void gl121Normal3sv(gl121Context* glc, GLshort* v);
void gl121Ortho(gl121Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl121PassThrough(gl121Context* glc, GLfloat token);
void gl121PixelMapfv(gl121Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl121PixelMapuiv(gl121Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl121PixelMapusv(gl121Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl121PixelStoref(gl121Context* glc, GLenum pname, GLfloat param);
void gl121PixelStorei(gl121Context* glc, GLenum pname, GLint param);
void gl121PixelTransferf(gl121Context* glc, GLenum pname, GLfloat param);
void gl121PixelTransferi(gl121Context* glc, GLenum pname, GLint param);
void gl121PixelZoom(gl121Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl121PointSize(gl121Context* glc, GLfloat size);
void gl121PolygonMode(gl121Context* glc, GLenum face, GLenum mode);
void gl121PolygonStipple(gl121Context* glc, GLubyte* mask);
void gl121PushAttrib(gl121Context* glc, GLbitfield mask);
void gl121PopAttrib(gl121Context* glc);
void gl121PushMatrix(gl121Context* glc);
void gl121PopMatrix(gl121Context* glc);
void gl121PushName(gl121Context* glc, GLuint name);
void gl121PopName(gl121Context* glc);
void gl121RasterPos2d(gl121Context* glc, GLdouble x, GLdouble y);
void gl121RasterPos2f(gl121Context* glc, GLfloat x, GLfloat y);
void gl121RasterPos2i(gl121Context* glc, GLint x, GLint y);
void gl121RasterPos2s(gl121Context* glc, GLshort x, GLshort y);
void gl121RasterPos3d(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl121RasterPos3f(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl121RasterPos3i(gl121Context* glc, GLint x, GLint y, GLint z);
void gl121RasterPos3s(gl121Context* glc, GLshort x, GLshort y, GLshort z);
void gl121RasterPos4d(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl121RasterPos4f(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl121RasterPos4i(gl121Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl121RasterPos4s(gl121Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl121RasterPos2dv(gl121Context* glc, GLdouble* v);
void gl121RasterPos2fv(gl121Context* glc, GLfloat* v);
void gl121RasterPos2iv(gl121Context* glc, GLint* v);
void gl121RasterPos2sv(gl121Context* glc, GLshort* v);
void gl121RasterPos3dv(gl121Context* glc, GLdouble* v);
void gl121RasterPos3fv(gl121Context* glc, GLfloat* v);
void gl121RasterPos3iv(gl121Context* glc, GLint* v);
void gl121RasterPos3sv(gl121Context* glc, GLshort* v);
void gl121RasterPos4dv(gl121Context* glc, GLdouble* v);
void gl121RasterPos4fv(gl121Context* glc, GLfloat* v);
void gl121RasterPos4iv(gl121Context* glc, GLint* v);
void gl121RasterPos4sv(gl121Context* glc, GLshort* v);
void gl121ReadBuffer(gl121Context* glc, GLenum mode);
void gl121ReadPixels(gl121Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl121Rectd(gl121Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl121Rectf(gl121Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl121Recti(gl121Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl121Rects(gl121Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl121Rectdv(gl121Context* glc, GLdouble* v1, GLdouble* v2);
void gl121Rectfv(gl121Context* glc, GLfloat* v1, GLfloat* v2);
void gl121Rectiv(gl121Context* glc, GLint* v1, GLint* v2);
void gl121Rectsv(gl121Context* glc, GLshort* v1, GLshort* v2);
GLint gl121RenderMode(gl121Context* glc, GLenum mode);
void gl121Rotated(gl121Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl121Rotatef(gl121Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl121Scaled(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl121Scalef(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl121Scissor(gl121Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl121SelectBuffer(gl121Context* glc, GLsizei size, GLuint* buffer);
void gl121ShadeModel(gl121Context* glc, GLenum mode);
void gl121StencilFunc(gl121Context* glc, GLenum func, GLint ref, GLuint mask);
void gl121StencilMask(gl121Context* glc, GLuint mask);
void gl121StencilOp(gl121Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl121TexCoord1d(gl121Context* glc, GLdouble s);
void gl121TexCoord1f(gl121Context* glc, GLfloat s);
void gl121TexCoord1i(gl121Context* glc, GLint s);
void gl121TexCoord1s(gl121Context* glc, GLshort s);
void gl121TexCoord2d(gl121Context* glc, GLdouble s, GLdouble t);
void gl121TexCoord2f(gl121Context* glc, GLfloat s, GLfloat t);
void gl121TexCoord2i(gl121Context* glc, GLint s, GLint t);
void gl121TexCoord2s(gl121Context* glc, GLshort s, GLshort t);
void gl121TexCoord3d(gl121Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl121TexCoord3f(gl121Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl121TexCoord3i(gl121Context* glc, GLint s, GLint t, GLint r);
void gl121TexCoord3s(gl121Context* glc, GLshort s, GLshort t, GLshort r);
void gl121TexCoord4d(gl121Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl121TexCoord4f(gl121Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl121TexCoord4i(gl121Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl121TexCoord4s(gl121Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl121TexCoord1dv(gl121Context* glc, GLdouble* v);
void gl121TexCoord1fv(gl121Context* glc, GLfloat* v);
void gl121TexCoord1iv(gl121Context* glc, GLint* v);
void gl121TexCoord1sv(gl121Context* glc, GLshort* v);
void gl121TexCoord2dv(gl121Context* glc, GLdouble* v);
void gl121TexCoord2fv(gl121Context* glc, GLfloat* v);
void gl121TexCoord2iv(gl121Context* glc, GLint* v);
void gl121TexCoord2sv(gl121Context* glc, GLshort* v);
void gl121TexCoord3dv(gl121Context* glc, GLdouble* v);
void gl121TexCoord3fv(gl121Context* glc, GLfloat* v);
void gl121TexCoord3iv(gl121Context* glc, GLint* v);
void gl121TexCoord3sv(gl121Context* glc, GLshort* v);
void gl121TexCoord4dv(gl121Context* glc, GLdouble* v);
void gl121TexCoord4fv(gl121Context* glc, GLfloat* v);
void gl121TexCoord4iv(gl121Context* glc, GLint* v);
void gl121TexCoord4sv(gl121Context* glc, GLshort* v);
void gl121TexEnvf(gl121Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl121TexEnvi(gl121Context* glc, GLenum target, GLenum pname, GLint param);
void gl121TexEnvfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121TexEnviv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121TexGend(gl121Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl121TexGenf(gl121Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl121TexGeni(gl121Context* glc, GLenum coord, GLenum pname, GLint param);
void gl121TexGendv(gl121Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl121TexGenfv(gl121Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl121TexGeniv(gl121Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl121TexImage1D(gl121Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl121TexImage2D(gl121Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl121TexParameterf(gl121Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl121TexParameteri(gl121Context* glc, GLenum target, GLenum pname, GLint param);
void gl121TexParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121TexParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121Translated(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl121Translatef(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl121Vertex2s(gl121Context* glc, GLshort x, GLshort y);
void gl121Vertex2i(gl121Context* glc, GLint x, GLint y);
void gl121Vertex2f(gl121Context* glc, GLfloat x, GLfloat y);
void gl121Vertex2d(gl121Context* glc, GLdouble x, GLdouble y);
void gl121Vertex3s(gl121Context* glc, GLshort x, GLshort y, GLshort z);
void gl121Vertex3i(gl121Context* glc, GLint x, GLint y, GLint z);
void gl121Vertex3f(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl121Vertex3d(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl121Vertex4s(gl121Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl121Vertex4i(gl121Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl121Vertex4f(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl121Vertex4d(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl121Viewport(gl121Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl121GetConvolutionParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121GetConvolutionParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl121AreTexturesResident(gl121Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl121ArrayElement(gl121Context* glc, GLint i);
void gl121DrawArrays(gl121Context* glc, GLenum mode, GLint first, GLsizei count);
void gl121DrawElements(gl121Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl121GetPointerv(gl121Context* glc, GLenum pname, GLvoid* params);
void gl121PolygonOffset(gl121Context* glc, GLfloat factor, GLfloat units);
void gl121CopyTexImage1D(gl121Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl121CopyTexImage2D(gl121Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl121CopyTexSubImage1D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl121CopyTexSubImage2D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl121BindTexture(gl121Context* glc, GLenum target, GLuint texture);
void gl121DeleteTextures(gl121Context* glc, GLsizei n, GLuint* textures);
void gl121GenTextures(gl121Context* glc, GLsizei n, GLuint* textures);
GLboolean gl121IsTexture(gl121Context* glc, GLuint texture);
void gl121ColorPointer(gl121Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121EnableClientState(gl121Context* glc, GLenum cap);
void gl121DisableClientState(gl121Context* glc, GLenum cap);
void gl121Indexub(gl121Context* glc, GLubyte c);
void gl121Indexubv(gl121Context* glc, GLubyte* c);
void gl121InterleavedArrays(gl121Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl121NormalPointer(gl121Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121PushClientAttrib(gl121Context* glc, GLbitfield mask);
void gl121PrioritizeTextures(gl121Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl121PopClientAttrib(gl121Context* glc);
void gl121TexCoordPointer(gl121Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121TexSubImage1D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl121TexSubImage2D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl121VertexPointer(gl121Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121ColorTable(gl121Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl121ColorTableParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121ColorTableParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121ColorSubTable(gl121Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl121ConvolutionFilter1D(gl121Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl121ConvolutionFilter2D(gl121Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl121ConvolutionParameterf(gl121Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl121ConvolutionParameteri(gl121Context* glc, GLenum target, GLenum pname, GLint params);
void gl121CopyColorTable(gl121Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl121CopyColorSubTable(gl121Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl121CopyConvolutionFilter1D(gl121Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl121CopyConvolutionFilter2D(gl121Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl121GetColorTable(gl121Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* table);
void gl121GetColorTableParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121GetColorTableParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121GetConvolutionFilter(gl121Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* image);
void gl121GetHistogram(gl121Context* glc, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
void gl121GetHistogramParameterfv(gl121Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl121GetHistogramParameteriv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
void gl121GetSeparableFilter(gl121Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
void gl121Histogram(gl121Context* glc, GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void gl121Minmax(gl121Context* glc, GLenum target, GLenum internalformat, GLboolean sink);
void gl121MultiTexCoord1s(gl121Context* glc, GLenum target, GLshort s);
void gl121MultiTexCoord1i(gl121Context* glc, GLenum target, GLint s);
void gl121MultiTexCoord1f(gl121Context* glc, GLenum target, GLfloat s);
void gl121MultiTexCoord1d(gl121Context* glc, GLenum target, GLdouble s);
void gl121MultiTexCoord2s(gl121Context* glc, GLenum target, GLshort s, GLshort t);
void gl121MultiTexCoord2i(gl121Context* glc, GLenum target, GLint s, GLint t);
void gl121MultiTexCoord2f(gl121Context* glc, GLenum target, GLfloat s, GLfloat t);
void gl121MultiTexCoord2d(gl121Context* glc, GLenum target, GLdouble s, GLdouble t);
void gl121MultiTexCoord3s(gl121Context* glc, GLenum target, GLshort s, GLshort t, GLshort r);
void gl121MultiTexCoord3i(gl121Context* glc, GLenum target, GLint s, GLint t, GLint r);
void gl121MultiTexCoord3f(gl121Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl121MultiTexCoord3d(gl121Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl121MultiTexCoord4s(gl121Context* glc, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl121MultiTexCoord4i(gl121Context* glc, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl121MultiTexCoord4f(gl121Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl121MultiTexCoord4d(gl121Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl121MultiTexCoord1sv(gl121Context* glc, GLenum target, GLshort* v);
void gl121MultiTexCoord1iv(gl121Context* glc, GLenum target, GLint* v);
void gl121MultiTexCoord1fv(gl121Context* glc, GLenum target, GLfloat* v);
void gl121MultiTexCoord1dv(gl121Context* glc, GLenum target, GLdouble* v);
void gl121MultiTexCoord2sv(gl121Context* glc, GLenum target, GLshort* v);
void gl121MultiTexCoord2iv(gl121Context* glc, GLenum target, GLint* v);
void gl121MultiTexCoord2fv(gl121Context* glc, GLenum target, GLfloat* v);
void gl121MultiTexCoord2dv(gl121Context* glc, GLenum target, GLdouble* v);
void gl121MultiTexCoord3sv(gl121Context* glc, GLenum target, GLshort* v);
void gl121MultiTexCoord3iv(gl121Context* glc, GLenum target, GLint* v);
void gl121MultiTexCoord3fv(gl121Context* glc, GLenum target, GLfloat* v);
void gl121MultiTexCoord3dv(gl121Context* glc, GLenum target, GLdouble* v);
void gl121MultiTexCoord4sv(gl121Context* glc, GLenum target, GLshort* v);
void gl121MultiTexCoord4iv(gl121Context* glc, GLenum target, GLint* v);
void gl121MultiTexCoord4fv(gl121Context* glc, GLenum target, GLfloat* v);
void gl121MultiTexCoord4dv(gl121Context* glc, GLenum target, GLdouble* v);
void gl121ResetHistogram(gl121Context* glc, GLenum target);
void gl121ResetMinmax(gl121Context* glc, GLenum target);
void gl121SeparableFilter2D(gl121Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
void gl121BlendColor(gl121Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl121BlendEquation(gl121Context* glc, GLenum mode);
void gl121CopyTexSubImage3D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl121DrawRangeElements(gl121Context* glc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
void gl121TexImage3D(gl121Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl121TexSubImage3D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl121ActiveTexture(gl121Context* glc, GLenum texture);
void gl121ClientActiveTexture(gl121Context* glc, GLenum texture);
void gl121CompressedTexImage1D(gl121Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl121CompressedTexImage2D(gl121Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl121CompressedTexImage3D(gl121Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl121CompressedTexSubImage1D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl121CompressedTexSubImage2D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl121CompressedTexSubImage3D(gl121Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl121GetCompressedTexImage(gl121Context* glc, GLenum target, GLint lod, GLvoid* img);
void gl121LoadTransposeMatrixd(gl121Context* glc, GLdouble* m);
void gl121LoadTransposeMatrixf(gl121Context* glc, GLdouble* m);
void gl121MultTransposeMatrixd(gl121Context* glc, GLdouble* m);
void gl121MultTransposeMatrixf(gl121Context* glc, GLfloat* m);
void gl121SampleCoverage(gl121Context* glc, GLclampf value, GLboolean invert);
void gl121BlendFuncSeparate(gl121Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl121FogCoordPointer(gl121Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121FogCoordd(gl121Context* glc, GLdouble coord);
void gl121FogCoordf(gl121Context* glc, GLfloat coord);
void gl121FogCoorddv(gl121Context* glc, GLdouble* coord);
void gl121FogCoordfv(gl121Context* glc, GLfloat* coord);
void gl121MultiDrawArrays(gl121Context* glc, GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
void gl121MultiDrawElements(gl121Context* glc, GLenum mode, GLsizei* count, GLenum type, GLvoid* indices, GLsizei primcount);
void gl121PointParameterf(gl121Context* glc, GLenum pname, GLfloat param);
void gl121PointParameteri(gl121Context* glc, GLenum pname, GLint param);
void gl121SecondaryColor3b(gl121Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl121SecondaryColor3s(gl121Context* glc, GLshort red, GLshort green, GLshort blue);
void gl121SecondaryColor3i(gl121Context* glc, GLint red, GLint green, GLint blue);
void gl121SecondaryColor3f(gl121Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl121SecondaryColor3d(gl121Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl121SecondaryColor3ub(gl121Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl121SecondaryColor3us(gl121Context* glc, GLushort red, GLushort green, GLushort blue);
void gl121SecondaryColor3ui(gl121Context* glc, GLuint red, GLuint green, GLuint blue);
void gl121SecondaryColor3bv(gl121Context* glc, GLbyte* v);
void gl121SecondaryColor3sv(gl121Context* glc, GLshort* v);
void gl121SecondaryColor3iv(gl121Context* glc, GLint* v);
void gl121SecondaryColor3fv(gl121Context* glc, GLfloat* v);
void gl121SecondaryColor3dv(gl121Context* glc, GLdouble* v);
void gl121SecondaryColor3ubv(gl121Context* glc, GLubyte* v);
void gl121SecondaryColor3usv(gl121Context* glc, GLushort* v);
void gl121SecondaryColor3uiv(gl121Context* glc, GLuint* v);
void gl121SecondaryColorPointer(gl121Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl121WindowPos2s(gl121Context* glc, GLshort x, GLshort y);
void gl121WindowPos2i(gl121Context* glc, GLint x, GLint y);
void gl121WindowPos2f(gl121Context* glc, GLfloat x, GLfloat y);
void gl121WindowPos2d(gl121Context* glc, GLdouble x, GLdouble y);
void gl121WindowPos3s(gl121Context* glc, GLshort x, GLshort y, GLshort z);
void gl121WindowPos3i(gl121Context* glc, GLint x, GLint y, GLint z);
void gl121WindowPos3f(gl121Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl121WindowPos3d(gl121Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl121WindowPos2sv(gl121Context* glc, GLshort* v);
void gl121WindowPos2iv(gl121Context* glc, GLint* v);
void gl121WindowPos2fv(gl121Context* glc, GLfloat* v);
void gl121WindowPos2dv(gl121Context* glc, GLdouble* v);
void gl121WindowPos3sv(gl121Context* glc, GLshort* v);
void gl121WindowPos3iv(gl121Context* glc, GLint* v);
void gl121WindowPos3fv(gl121Context* glc, GLfloat* v);
void gl121WindowPos3dv(gl121Context* glc, GLdouble* v);
void gl121BeginQuery(gl121Context* glc, GLenum target, GLuint id);
void gl121BindBuffer(gl121Context* glc, GLenum target, GLuint buffer);
void gl121BufferData(gl121Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl121BufferSubData(gl121Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl121DeleteBuffers(gl121Context* glc, GLsizei n, GLuint* buffers);
void gl121DeleteQueries(gl121Context* glc, GLsizei n, GLuint* ids);
void gl121GenBuffers(gl121Context* glc, GLsizei n, GLuint* buffers);
void gl121GenQueries(gl121Context* glc, GLsizei n, GLuint* ids);
void gl121GetBufferParameteriv(gl121Context* glc, GLenum target, GLenum value, GLint* data);
void gl121GetBufferPointerv(gl121Context* glc, GLenum target, GLenum pname, GLvoid* params);
void gl121GetBufferSubData(gl121Context* glc, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl121GetQueryObjectiv(gl121Context* glc, GLuint id, GLenum pname, GLint* params);
void gl121GetQueryObjectuiv(gl121Context* glc, GLuint id, GLenum pname, GLuint* params);
void gl121GetQueryiv(gl121Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl121IsBuffer(gl121Context* glc, GLuint buffer);
GLboolean gl121IsQuery(gl121Context* glc, GLuint id);
GLvoid* gl121MapBuffer(gl121Context* glc, GLenum target, GLenum access);
GLboolean gl121UnmapBuffer(gl121Context* glc, GLenum target);
void gl121AttachShader(gl121Context* glc, GLuint program, GLuint shader);
void gl121BindAttribLocation(gl121Context* glc, GLuint program, GLuint index, GLchar* name);
void gl121BlendEquationSeperate(gl121Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl121CompileShader(gl121Context* glc, GLuint shader);
GLuint gl121CreateProgram(gl121Context* glc);
GLuint gl121CreateShader(gl121Context* glc, GLenum shaderType);
void gl121DeleteProgram(gl121Context* glc, GLuint program);
void gl121DeleteShader(gl121Context* glc, GLuint shader);
void gl121DetachShader(gl121Context* glc, GLuint program, GLuint shader);
void gl121EnableVertexAttribArray(gl121Context* glc, GLuint index);
void gl121DisableVertexAttribArray(gl121Context* glc, GLuint index);
void gl121DrawBuffers(gl121Context* glc, GLsizei n, GLenum* bufs);
void gl121GetActiveAttrib(gl121Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl121GetActiveUniform(gl121Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl121GetAttachedShaders(gl121Context* glc, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
GLint gl121GetAttribLocation(gl121Context* glc, GLuint program, GLchar* name);
void gl121GetProgramiv(gl121Context* glc, GLuint program, GLenum pname, GLint* params);
void gl121GetProgramInfoLog(gl121Context* glc, GLuint program, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl121GetShaderiv(gl121Context* glc, GLuint program, GLenum pname, GLint* params);
void gl121GetShaderInfoLog(gl121Context* glc, GLuint shader, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl121GetShaderSource(gl121Context* glc, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl121GetUniformfv(gl121Context* glc, GLuint program, GLint location, GLfloat* params);
void gl121GetUniformiv(gl121Context* glc, GLuint program, GLint location, GLint* params);
GLint gl121GetUniformLocation(gl121Context* glc, GLuint program, GLchar* name);
void gl121GetVertexAttribdv(gl121Context* glc, GLuint index, GLenum pname, GLdouble* params);
void gl121GetVertexAttribfv(gl121Context* glc, GLuint index, GLenum pname, GLfloat* params);
void gl121GetVertexAttribiv(gl121Context* glc, GLuint index, GLenum pname, GLint* params);
void gl121GetVertexAttribPointerv(gl121Context* glc, GLuint index, GLenum pname, GLvoid* pointer);
GLboolean gl121IsProgram(gl121Context* glc, GLuint program);
GLboolean gl121IsShader(gl121Context* glc, GLuint shader);
void gl121LinkProgram(gl121Context* glc, GLuint program);
void gl121ShaderSource(gl121Context* glc, GLuint shader, GLsizei count, GLchar** string, GLint* length);
void gl121StencilFuncSeparate(gl121Context* glc, GLenum face, GLenum func, GLint ref, GLuint mask);
void gl121StencilMaskSeparate(gl121Context* glc, GLenum face, GLuint mask);
void gl121StencilOpSeparate(gl121Context* glc, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl121Uniform1f(gl121Context* glc, GLint location, GLfloat v0);
void gl121Uniform2f(gl121Context* glc, GLint location, GLfloat v0, GLfloat v1);
void gl121Uniform3f(gl121Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl121Uniform4f(gl121Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl121Uniform1i(gl121Context* glc, GLint location, GLint v0);
void gl121Uniform2i(gl121Context* glc, GLint location, GLint v0, GLint v1);
void gl121Uniform3i(gl121Context* glc, GLint location, GLint v0, GLint v1, GLint v2);
void gl121Uniform4i(gl121Context* glc, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl121Uniform1fv(gl121Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl121Uniform2fv(gl121Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl121Uniform3fv(gl121Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl121Uniform4fv(gl121Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl121Uniform1iv(gl121Context* glc, GLint location, GLsizei count, GLint* value);
void gl121Uniform2iv(gl121Context* glc, GLint location, GLsizei count, GLint* value);
void gl121Uniform3iv(gl121Context* glc, GLint location, GLsizei count, GLint* value);
void gl121Uniform4iv(gl121Context* glc, GLint location, GLsizei count, GLint* value);
void gl121UseProgram(gl121Context* glc, GLuint program);
void gl121ValidateProgram(gl121Context* glc, GLuint program);
void gl121VertexAttribPointer(gl121Context* glc, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
void gl121VertexAttrib1f(gl121Context* glc, GLuint index, GLfloat v0);
void gl121VertexAttrib1s(gl121Context* glc, GLuint index, GLshort v0);
void gl121VertexAttrib1d(gl121Context* glc, GLuint index, GLdouble v0);
void gl121VertexAttrib2f(gl121Context* glc, GLuint index, GLfloat v0, GLfloat v1);
void gl121VertexAttrib2s(gl121Context* glc, GLuint index, GLshort v0, GLshort v1);
void gl121VertexAttrib2d(gl121Context* glc, GLuint index, GLdouble v0, GLdouble v1);
void gl121VertexAttrib3f(gl121Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2);
void gl121VertexAttrib3s(gl121Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2);
void gl121VertexAttrib3d(gl121Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
void gl121VertexAttrib4f(gl121Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl121VertexAttrib4s(gl121Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2, GLshort v3);
void gl121VertexAttrib4d(gl121Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void gl121VertexAttrib4Nuv(gl121Context* glc, GLuint index, GLubyte v0, GLubyte v1, GLubyte v2, GLubyte v3);
void gl121VertexAttrib1fv(gl121Context* glc, GLuint index, GLfloat* v);
void gl121VertexAttrib1sv(gl121Context* glc, GLuint index, GLshort* v);
void gl121VertexAttrib1dv(gl121Context* glc, GLuint index, GLdouble* v);
void gl121VertexAttrib2fv(gl121Context* glc, GLuint index, GLfloat* v);
void gl121VertexAttrib2sv(gl121Context* glc, GLuint index, GLshort* v);
void gl121VertexAttrib2dv(gl121Context* glc, GLuint index, GLdouble* v);
void gl121VertexAttrib3fv(gl121Context* glc, GLuint index, GLfloat* v);
void gl121VertexAttrib3sv(gl121Context* glc, GLuint index, GLshort* v);
void gl121VertexAttrib3dv(gl121Context* glc, GLuint index, GLdouble* v);
void gl121VertexAttrib4fv(gl121Context* glc, GLuint index, GLfloat* v);
void gl121VertexAttrib4sv(gl121Context* glc, GLuint index, GLshort* v);
void gl121VertexAttrib4dv(gl121Context* glc, GLuint index, GLdouble* v);
void gl121VertexAttrib4iv(gl121Context* glc, GLuint index, GLint* v);
void gl121VertexAttrib4bv(gl121Context* glc, GLuint index, GLbyte* v);
void gl121VertexAttrib4ubv(gl121Context* glc, GLuint index, GLubyte* v);
void gl121VertexAttrib4usv(gl121Context* glc, GLuint index, GLushort* v);
void gl121VertexAttrib4uiv(gl121Context* glc, GLuint index, GLuint* v);
void gl121VertexAttrib4Nbv(gl121Context* glc, GLuint index, GLbyte* v);
void gl121VertexAttrib4Nsv(gl121Context* glc, GLuint index, GLshort* v);
void gl121VertexAttrib4Niv(gl121Context* glc, GLuint index, GLint* v);
void gl121VertexAttrib4Nubv(gl121Context* glc, GLuint index, GLubyte* v);
void gl121VertexAttrib4Nusv(gl121Context* glc, GLuint index, GLushort* v);
void gl121VertexAttrib4Nuiv(gl121Context* glc, GLuint index, GLuint* v);
void gl121UniformMatrix2fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix3fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix4fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix2x3fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix3x2fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix2x4fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix4x2fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix3x4fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl121UniformMatrix4x3fv(gl121Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
