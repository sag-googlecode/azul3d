// Copyright 2012 Lightpoke. All rights reserved.
// This source code is subject to the terms and
// conditions defined in the "License.txt" file.

#include <stdbool.h>
#include <stdlib.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;

typedef void(*gl11PAccum)(GLenum, GLfloat);
typedef void(*gl11PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl11PBegin)(GLenum);
typedef void(*gl11PEnd)();
typedef void(*gl11PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl11PBlendFunc)(GLenum, GLenum);
typedef void(*gl11PCallList)(GLuint);
typedef void(*gl11PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl11PClear)(GLbitfield);
typedef void(*gl11PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl11PClearDepth)(GLclampd);
typedef void(*gl11PClearIndex)(GLfloat);
typedef void(*gl11PClearStencil)(GLint);
typedef void(*gl11PClipPlane)(GLenum, GLdouble*);
typedef void(*gl11PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl11PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PColor3i)(GLint, GLint, GLint);
typedef void(*gl11PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl11PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl11PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl11PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl11PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl11PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl11PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl11PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl11PColor3bv)(GLbyte*);
typedef void(*gl11PColor3dv)(GLdouble*);
typedef void(*gl11PColor3fv)(GLfloat*);
typedef void(*gl11PColor3iv)(GLint*);
typedef void(*gl11PColor3sv)(GLshort*);
typedef void(*gl11PColor3ubv)(GLubyte*);
typedef void(*gl11PColor3uiv)(GLuint*);
typedef void(*gl11PColor3usv)(GLushort*);
typedef void(*gl11PColor4bv)(GLbyte*);
typedef void(*gl11PColor4dv)(GLdouble*);
typedef void(*gl11PColor4fv)(GLfloat*);
typedef void(*gl11PColor4iv)(GLint*);
typedef void(*gl11PColor4sv)(GLshort*);
typedef void(*gl11PColor4ubv)(GLubyte*);
typedef void(*gl11PColor4uiv)(GLuint*);
typedef void(*gl11PColor4usv)(GLushort*);
typedef void(*gl11PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl11PColorMaterial)(GLenum, GLenum);
typedef void(*gl11PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl11PCullFace)(GLenum);
typedef void(*gl11PDeleteLists)(GLuint, GLsizei);
typedef void(*gl11PDepthFunc)(GLenum);
typedef void(*gl11PDepthMask)(GLboolean);
typedef void(*gl11PDepthRange)(GLclampd, GLclampd);
typedef void(*gl11PEnable)(GLenum);
typedef void(*gl11PDisable)(GLenum);
typedef void(*gl11PDrawBuffer)(GLenum);
typedef void(*gl11PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PEdgeFlag)(GLboolean);
typedef void(*gl11PEdgeFlagv)(GLboolean*);
typedef void(*gl11PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl11PEvalCoord1d)(GLdouble);
typedef void(*gl11PEvalCoord1f)(GLfloat);
typedef void(*gl11PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl11PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl11PEvalCoord1dv)(GLdouble*);
typedef void(*gl11PEvalCoord1fv)(GLfloat*);
typedef void(*gl11PEvalCoord2dv)(GLdouble*);
typedef void(*gl11PEvalCoord2fv)(GLfloat*);
typedef void(*gl11PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl11PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl11PEvalPoint1)(GLint);
typedef void(*gl11PEvalPoint2)(GLint, GLint);
typedef void(*gl11PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl11PFinish)();
typedef void(*gl11PFlush)();
typedef void(*gl11PFogf)(GLenum, GLfloat);
typedef void(*gl11PFogi)(GLenum, GLint);
typedef void(*gl11PFogfv)(GLenum, GLfloat*);
typedef void(*gl11PFogiv)(GLenum, GLint*);
typedef void(*gl11PFrontFace)(GLenum);
typedef void(*gl11PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl11PGenLists)(GLsizei);
typedef void(*gl11PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl11PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl11PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl11PGetIntegerv)(GLenum, GLint*);
typedef void(*gl11PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl11PGetError)();
typedef void(*gl11PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl11PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl11PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl11PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl11PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl11PGetString)(GLenum);
typedef void(*gl11PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl11PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl11PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl11PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl11PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PHint)(GLenum, GLenum);
typedef void(*gl11PIndexd)(GLdouble);
typedef void(*gl11PIndexf)(GLfloat);
typedef void(*gl11PIndexi)(GLint);
typedef void(*gl11PIndexs)(GLshort);
typedef void(*gl11PIndexdv)(GLdouble*);
typedef void(*gl11PIndexfv)(GLfloat*);
typedef void(*gl11PIndexiv)(GLint*);
typedef void(*gl11PIndexsv)(GLshort*);
typedef void(*gl11PIndexMask)(GLuint);
typedef void(*gl11PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl11PInitNames)();
typedef void(*gl11PIsEnabled)(GLenum);
typedef GLboolean(*gl11PIsList)(GLuint);
typedef void(*gl11PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PLighti)(GLenum, GLenum, GLint);
typedef void(*gl11PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl11PLightModelf)(GLenum, GLfloat);
typedef void(*gl11PLightModeli)(GLenum, GLint);
typedef void(*gl11PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl11PLightModeliv)(GLenum, GLint*);
typedef void(*gl11PLineStipple)(GLint, GLushort);
typedef void(*gl11PLineWidth)(GLfloat);
typedef void(*gl11PListBase)(GLuint);
typedef void(*gl11PLoadIdentity)();
typedef void(*gl11PLoadMatrixd)(GLdouble*);
typedef void(*gl11PLoadMatrixf)(GLfloat*);
typedef void(*gl11PLoadName)(GLuint);
typedef void(*gl11PLogicOp)(GLenum);
typedef void(*gl11PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl11PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl11PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl11PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl11PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl11PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl11PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl11PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl11PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl11PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl11PMatrixMode)(GLenum);
typedef void(*gl11PMultMatrixd)(GLdouble*);
typedef void(*gl11PMultMatrixf)(GLfloat*);
typedef void(*gl11PNewList)(GLuint, GLenum);
typedef void(*gl11PEndList)();
typedef void(*gl11PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl11PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PNormal3i)(GLint, GLint, GLint);
typedef void(*gl11PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PNormal3bv)(GLbyte*);
typedef void(*gl11PNormal3dv)(GLdouble*);
typedef void(*gl11PNormal3fv)(GLfloat*);
typedef void(*gl11PNormal3iv)(GLint*);
typedef void(*gl11PNormal3sv)(GLshort*);
typedef void(*gl11POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PPassThrough)(GLfloat);
typedef void(*gl11PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl11PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl11PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl11PPixelStoref)(GLenum, GLfloat);
typedef void(*gl11PPixelStorei)(GLenum, GLint);
typedef void(*gl11PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl11PPixelTransferi)(GLenum, GLint);
typedef void(*gl11PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl11PPointSize)(GLfloat);
typedef void(*gl11PPolygonMode)(GLenum, GLenum);
typedef void(*gl11PPolygonStipple)(GLubyte*);
typedef void(*gl11PPushAttrib)(GLbitfield);
typedef void(*gl11PPopAttrib)();
typedef void(*gl11PPushMatrix)();
typedef void(*gl11PPopMatrix)();
typedef void(*gl11PPushName)(GLuint);
typedef void(*gl11PPopName)();
typedef void(*gl11PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl11PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl11PRasterPos2i)(GLint, GLint);
typedef void(*gl11PRasterPos2s)(GLshort, GLshort);
typedef void(*gl11PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl11PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl11PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PRasterPos2dv)(GLdouble*);
typedef void(*gl11PRasterPos2fv)(GLfloat*);
typedef void(*gl11PRasterPos2iv)(GLint*);
typedef void(*gl11PRasterPos2sv)(GLshort*);
typedef void(*gl11PRasterPos3dv)(GLdouble*);
typedef void(*gl11PRasterPos3fv)(GLfloat*);
typedef void(*gl11PRasterPos3iv)(GLint*);
typedef void(*gl11PRasterPos3sv)(GLshort*);
typedef void(*gl11PRasterPos4dv)(GLdouble*);
typedef void(*gl11PRasterPos4fv)(GLfloat*);
typedef void(*gl11PRasterPos4iv)(GLint*);
typedef void(*gl11PRasterPos4sv)(GLshort*);
typedef void(*gl11PReadBuffer)(GLenum);
typedef void(*gl11PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl11PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl11PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl11PRectiv)(GLint*, GLint*);
typedef void(*gl11PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl11PRenderMode)(GLenum);
typedef void(*gl11PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl11PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl11PShadeModel)(GLenum);
typedef void(*gl11PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl11PStencilMask)(GLuint);
typedef void(*gl11PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl11PTexCoord1d)(GLdouble);
typedef void(*gl11PTexCoord1f)(GLfloat);
typedef void(*gl11PTexCoord1i)(GLint);
typedef void(*gl11PTexCoord1s)(GLshort);
typedef void(*gl11PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl11PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl11PTexCoord2i)(GLint, GLint);
typedef void(*gl11PTexCoord2s)(GLshort, GLshort);
typedef void(*gl11PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl11PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl11PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PTexCoord1dv)(GLdouble*);
typedef void(*gl11PTexCoord1fv)(GLfloat*);
typedef void(*gl11PTexCoord1iv)(GLint*);
typedef void(*gl11PTexCoord1sv)(GLshort*);
typedef void(*gl11PTexCoord2dv)(GLdouble*);
typedef void(*gl11PTexCoord2fv)(GLfloat*);
typedef void(*gl11PTexCoord2iv)(GLint*);
typedef void(*gl11PTexCoord2sv)(GLshort*);
typedef void(*gl11PTexCoord3dv)(GLdouble*);
typedef void(*gl11PTexCoord3fv)(GLfloat*);
typedef void(*gl11PTexCoord3iv)(GLint*);
typedef void(*gl11PTexCoord3sv)(GLshort*);
typedef void(*gl11PTexCoord4dv)(GLdouble*);
typedef void(*gl11PTexCoord4fv)(GLfloat*);
typedef void(*gl11PTexCoord4iv)(GLint*);
typedef void(*gl11PTexCoord4sv)(GLshort*);
typedef void(*gl11PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl11PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl11PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl11PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl11PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl11PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl11PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl11PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl11PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl11PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PVertex2s)(GLshort, GLshort);
typedef void(*gl11PVertex2i)(GLint, GLint);
typedef void(*gl11PVertex2f)(GLfloat, GLfloat);
typedef void(*gl11PVertex2d)(GLdouble, GLdouble);
typedef void(*gl11PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PVertex3i)(GLint, GLint, GLint);
typedef void(*gl11PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl11PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl11PGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl11PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl11PArrayElement)(GLint);
typedef void(*gl11PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl11PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl11PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl11PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl11PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl11PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl11PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl11PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl11PBindTexture)(GLenum, GLuint);
typedef void(*gl11PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl11PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl11PIsTexture)(GLuint);
typedef void(*gl11PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PEnableClientState)(GLenum);
typedef void(*gl11PDisableClientState)(GLenum);
typedef void(*gl11PIndexub)(GLubyte);
typedef void(*gl11PIndexubv)(GLubyte*);
typedef void(*gl11PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl11PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl11PPushClientAttrib)(GLbitfield);
typedef void(*gl11PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl11PPopClientAttrib)();
typedef void(*gl11PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl11PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl11PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl11PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl11PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl11PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl11PGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl11PGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl11PGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
typedef void(*gl11PGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl11PGetHistogramParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
typedef void(*gl11PHistogram)(GLenum, GLsizei, GLenum, GLboolean);
typedef void(*gl11PMinmax)(GLenum, GLenum, GLboolean);
typedef void(*gl11PMultiTexCoord1s)(GLenum, GLshort);
typedef void(*gl11PMultiTexCoord1i)(GLenum, GLint);
typedef void(*gl11PMultiTexCoord1f)(GLenum, GLfloat);
typedef void(*gl11PMultiTexCoord1d)(GLenum, GLdouble);
typedef void(*gl11PMultiTexCoord2s)(GLenum, GLshort, GLshort);
typedef void(*gl11PMultiTexCoord2i)(GLenum, GLint, GLint);
typedef void(*gl11PMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
typedef void(*gl11PMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
typedef void(*gl11PMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
typedef void(*gl11PMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
typedef void(*gl11PMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl11PMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PMultiTexCoord1sv)(GLenum, GLshort*);
typedef void(*gl11PMultiTexCoord1iv)(GLenum, GLint*);
typedef void(*gl11PMultiTexCoord1fv)(GLenum, GLfloat*);
typedef void(*gl11PMultiTexCoord1dv)(GLenum, GLdouble*);
typedef void(*gl11PMultiTexCoord2sv)(GLenum, GLshort*);
typedef void(*gl11PMultiTexCoord2iv)(GLenum, GLint*);
typedef void(*gl11PMultiTexCoord2fv)(GLenum, GLfloat*);
typedef void(*gl11PMultiTexCoord2dv)(GLenum, GLdouble*);
typedef void(*gl11PMultiTexCoord3sv)(GLenum, GLshort*);
typedef void(*gl11PMultiTexCoord3iv)(GLenum, GLint*);
typedef void(*gl11PMultiTexCoord3fv)(GLenum, GLfloat*);
typedef void(*gl11PMultiTexCoord3dv)(GLenum, GLdouble*);
typedef void(*gl11PMultiTexCoord4sv)(GLenum, GLshort*);
typedef void(*gl11PMultiTexCoord4iv)(GLenum, GLint*);
typedef void(*gl11PMultiTexCoord4fv)(GLenum, GLfloat*);
typedef void(*gl11PMultiTexCoord4dv)(GLenum, GLdouble*);
typedef void(*gl11PResetHistogram)(GLenum);
typedef void(*gl11PResetMinmax)(GLenum);
typedef void(*gl11PSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*);
typedef void(*gl11PBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl11PBlendEquation)(GLenum);
typedef void(*gl11PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl11PDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
typedef void(*gl11PTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl11PTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl11PActiveTexture)(GLenum);
typedef void(*gl11PClientActiveTexture)(GLenum);
typedef void(*gl11PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl11PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl11PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl11PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PGetCompressedTexImage)(GLenum, GLint, GLvoid*);
typedef void(*gl11PLoadTransposeMatrixd)(GLdouble*);
typedef void(*gl11PLoadTransposeMatrixf)(GLdouble*);
typedef void(*gl11PMultTransposeMatrixd)(GLdouble*);
typedef void(*gl11PMultTransposeMatrixf)(GLfloat*);
typedef void(*gl11PSampleCoverage)(GLclampf, GLboolean);
typedef void(*gl11PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl11PFogCoordPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl11PFogCoordd)(GLdouble);
typedef void(*gl11PFogCoordf)(GLfloat);
typedef void(*gl11PFogCoorddv)(GLdouble*);
typedef void(*gl11PFogCoordfv)(GLfloat*);
typedef void(*gl11PMultiDrawArrays)(GLenum, GLint*, GLsizei*, GLsizei);
typedef void(*gl11PMultiDrawElements)(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei);
typedef void(*gl11PPointParameterf)(GLenum, GLfloat);
typedef void(*gl11PPointParameteri)(GLenum, GLint);
typedef void(*gl11PSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl11PSecondaryColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PSecondaryColor3i)(GLint, GLint, GLint);
typedef void(*gl11PSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl11PSecondaryColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl11PSecondaryColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl11PSecondaryColor3bv)(GLbyte*);
typedef void(*gl11PSecondaryColor3sv)(GLshort*);
typedef void(*gl11PSecondaryColor3iv)(GLint*);
typedef void(*gl11PSecondaryColor3fv)(GLfloat*);
typedef void(*gl11PSecondaryColor3dv)(GLdouble*);
typedef void(*gl11PSecondaryColor3ubv)(GLubyte*);
typedef void(*gl11PSecondaryColor3usv)(GLushort*);
typedef void(*gl11PSecondaryColor3uiv)(GLuint*);
typedef void(*gl11PSecondaryColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl11PWindowPos2s)(GLshort, GLshort);
typedef void(*gl11PWindowPos2i)(GLint, GLint);
typedef void(*gl11PWindowPos2f)(GLfloat, GLfloat);
typedef void(*gl11PWindowPos2d)(GLdouble, GLdouble);
typedef void(*gl11PWindowPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl11PWindowPos3i)(GLint, GLint, GLint);
typedef void(*gl11PWindowPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl11PWindowPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl11PWindowPos2sv)(GLshort*);
typedef void(*gl11PWindowPos2iv)(GLint*);
typedef void(*gl11PWindowPos2fv)(GLfloat*);
typedef void(*gl11PWindowPos2dv)(GLdouble*);
typedef void(*gl11PWindowPos3sv)(GLshort*);
typedef void(*gl11PWindowPos3iv)(GLint*);
typedef void(*gl11PWindowPos3fv)(GLfloat*);
typedef void(*gl11PWindowPos3dv)(GLdouble*);
typedef void(*gl11PBeginQuery)(GLenum, GLuint);
typedef void(*gl11PBindBuffer)(GLenum, GLuint);
typedef void(*gl11PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl11PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl11PDeleteBuffers)(GLsizei, GLuint*);
typedef void(*gl11PDeleteQueries)(GLsizei, GLuint*);
typedef void(*gl11PGenBuffers)(GLsizei, GLuint*);
typedef void(*gl11PGenQueries)(GLsizei, GLuint*);
typedef void(*gl11PGetBufferParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl11PGetBufferPointerv)(GLenum, GLenum, GLvoid*);
typedef void(*gl11PGetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
typedef void(*gl11PGetQueryObjectiv)(GLuint, GLenum, GLint*);
typedef void(*gl11PGetQueryObjectuiv)(GLuint, GLenum, GLuint*);
typedef void(*gl11PGetQueryiv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl11PIsBuffer)(GLuint);
typedef GLboolean(*gl11PIsQuery)(GLuint);
typedef GLvoid*(*gl11PMapBuffer)(GLenum, GLenum);
typedef GLboolean(*gl11PUnmapBuffer)(GLenum);
typedef void(*gl11PAttachShader)(GLuint, GLuint);
typedef void(*gl11PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl11PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl11PCompileShader)(GLuint);
typedef GLuint(*gl11PCreateProgram)();
typedef GLuint(*gl11PCreateShader)(GLenum);
typedef void(*gl11PDeleteProgram)(GLuint);
typedef void(*gl11PDeleteShader)(GLuint);
typedef void(*gl11PDetachShader)(GLuint, GLuint);
typedef void(*gl11PEnableVertexAttribArray)(GLuint);
typedef void(*gl11PDisableVertexAttribArray)(GLuint);
typedef void(*gl11PDrawBuffers)(GLsizei, GLenum*);
typedef void(*gl11PGetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl11PGetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl11PGetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
typedef GLint(*gl11PGetAttribLocation)(GLuint, GLchar*);
typedef void(*gl11PGetProgramiv)(GLuint, GLenum, GLint*);
typedef void(*gl11PGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl11PGetShaderiv)(GLuint, GLenum, GLint*);
typedef void(*gl11PGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl11PGetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl11PGetUniformfv)(GLuint, GLint, GLfloat*);
typedef void(*gl11PGetUniformiv)(GLuint, GLint, GLint*);
typedef GLint(*gl11PGetUniformLocation)(GLuint, GLchar*);
typedef void(*gl11PGetVertexAttribdv)(GLuint, GLenum, GLdouble*);
typedef void(*gl11PGetVertexAttribfv)(GLuint, GLenum, GLfloat*);
typedef void(*gl11PGetVertexAttribiv)(GLuint, GLenum, GLint*);
typedef void(*gl11PGetVertexAttribPointerv)(GLuint, GLenum, GLvoid*);
typedef GLboolean(*gl11PIsProgram)(GLuint);
typedef GLboolean(*gl11PIsShader)(GLuint);
typedef void(*gl11PLinkProgram)(GLuint);
typedef void(*gl11PShaderSource)(GLuint, GLsizei, GLchar**, GLint*);
typedef void(*gl11PStencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
typedef void(*gl11PStencilMaskSeparate)(GLenum, GLuint);
typedef void(*gl11PStencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl11PUniform1f)(GLint, GLfloat);
typedef void(*gl11PUniform2f)(GLint, GLfloat, GLfloat);
typedef void(*gl11PUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PUniform1i)(GLint, GLint);
typedef void(*gl11PUniform2i)(GLint, GLint, GLint);
typedef void(*gl11PUniform3i)(GLint, GLint, GLint, GLint);
typedef void(*gl11PUniform4i)(GLint, GLint, GLint, GLint, GLint);
typedef void(*gl11PUniform1ui)(GLint, GLuint);
typedef void(*gl11PUniform2ui)(GLint, GLuint, GLuint);
typedef void(*gl11PUniform3ui)(GLint, GLuint, GLuint, GLuint);
typedef void(*gl11PUniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
typedef void(*gl11PUniform1fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl11PUniform2fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl11PUniform3fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl11PUniform4fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl11PUniform1iv)(GLint, GLsizei, GLint*);
typedef void(*gl11PUniform2iv)(GLint, GLsizei, GLint*);
typedef void(*gl11PUniform3iv)(GLint, GLsizei, GLint*);
typedef void(*gl11PUniform4iv)(GLint, GLsizei, GLint*);
typedef void(*gl11PUniform1uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl11PUniform2uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl11PUniform3uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl11PUniform4uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl11PUseProgram)(GLuint);
typedef void(*gl11PValidateProgram)(GLuint);
typedef void(*gl11PVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*);
typedef void(*gl11PVertexAttrib1f)(GLuint, GLfloat);
typedef void(*gl11PVertexAttrib1s)(GLuint, GLshort);
typedef void(*gl11PVertexAttrib1d)(GLuint, GLdouble);
typedef void(*gl11PVertexAttrib2f)(GLuint, GLfloat, GLfloat);
typedef void(*gl11PVertexAttrib2s)(GLuint, GLshort, GLshort);
typedef void(*gl11PVertexAttrib2d)(GLuint, GLdouble, GLdouble);
typedef void(*gl11PVertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PVertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
typedef void(*gl11PVertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PVertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl11PVertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl11PVertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl11PVertexAttrib4Nuv)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl11PVertexAttrib1fv)(GLuint, GLfloat*);
typedef void(*gl11PVertexAttrib1sv)(GLuint, GLshort*);
typedef void(*gl11PVertexAttrib1dv)(GLuint, GLdouble*);
typedef void(*gl11PVertexAttrib2fv)(GLuint, GLfloat*);
typedef void(*gl11PVertexAttrib2sv)(GLuint, GLshort*);
typedef void(*gl11PVertexAttrib2dv)(GLuint, GLdouble*);
typedef void(*gl11PVertexAttrib3fv)(GLuint, GLfloat*);
typedef void(*gl11PVertexAttrib3sv)(GLuint, GLshort*);
typedef void(*gl11PVertexAttrib3dv)(GLuint, GLdouble*);
typedef void(*gl11PVertexAttrib4fv)(GLuint, GLfloat*);
typedef void(*gl11PVertexAttrib4sv)(GLuint, GLshort*);
typedef void(*gl11PVertexAttrib4dv)(GLuint, GLdouble*);
typedef void(*gl11PVertexAttrib4iv)(GLuint, GLint*);
typedef void(*gl11PVertexAttrib4bv)(GLuint, GLbyte*);
typedef void(*gl11PVertexAttrib4ubv)(GLuint, GLubyte*);
typedef void(*gl11PVertexAttrib4usv)(GLuint, GLushort*);
typedef void(*gl11PVertexAttrib4uiv)(GLuint, GLuint*);
typedef void(*gl11PVertexAttrib4Nbv)(GLuint, GLbyte*);
typedef void(*gl11PVertexAttrib4Nsv)(GLuint, GLshort*);
typedef void(*gl11PVertexAttrib4Niv)(GLuint, GLint*);
typedef void(*gl11PVertexAttrib4Nubv)(GLuint, GLubyte*);
typedef void(*gl11PVertexAttrib4Nusv)(GLuint, GLushort*);
typedef void(*gl11PVertexAttrib4Nuiv)(GLuint, GLuint*);
typedef void(*gl11PUniformMatrix2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix2x3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix3x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix2x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix4x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix3x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl11PUniformMatrix4x3fv)(GLint, GLsizei, GLboolean, GLfloat*);

typedef struct {
    gl11PAccum fnAccum;
    gl11PAlphaFunc fnAlphaFunc;
    gl11PBegin fnBegin;
    gl11PEnd fnEnd;
    gl11PBitmap fnBitmap;
    gl11PBlendFunc fnBlendFunc;
    gl11PCallList fnCallList;
    gl11PCallLists fnCallLists;
    gl11PClear fnClear;
    gl11PClearAccum fnClearAccum;
    gl11PClearColor fnClearColor;
    gl11PClearDepth fnClearDepth;
    gl11PClearIndex fnClearIndex;
    gl11PClearStencil fnClearStencil;
    gl11PClipPlane fnClipPlane;
    gl11PColor3b fnColor3b;
    gl11PColor3d fnColor3d;
    gl11PColor3f fnColor3f;
    gl11PColor3i fnColor3i;
    gl11PColor3s fnColor3s;
    gl11PColor3ub fnColor3ub;
    gl11PColor3ui fnColor3ui;
    gl11PColor3us fnColor3us;
    gl11PColor4b fnColor4b;
    gl11PColor4d fnColor4d;
    gl11PColor4f fnColor4f;
    gl11PColor4i fnColor4i;
    gl11PColor4s fnColor4s;
    gl11PColor4ub fnColor4ub;
    gl11PColor4ui fnColor4ui;
    gl11PColor4us fnColor4us;
    gl11PColor3bv fnColor3bv;
    gl11PColor3dv fnColor3dv;
    gl11PColor3fv fnColor3fv;
    gl11PColor3iv fnColor3iv;
    gl11PColor3sv fnColor3sv;
    gl11PColor3ubv fnColor3ubv;
    gl11PColor3uiv fnColor3uiv;
    gl11PColor3usv fnColor3usv;
    gl11PColor4bv fnColor4bv;
    gl11PColor4dv fnColor4dv;
    gl11PColor4fv fnColor4fv;
    gl11PColor4iv fnColor4iv;
    gl11PColor4sv fnColor4sv;
    gl11PColor4ubv fnColor4ubv;
    gl11PColor4uiv fnColor4uiv;
    gl11PColor4usv fnColor4usv;
    gl11PColorMask fnColorMask;
    gl11PColorMaterial fnColorMaterial;
    gl11PCopyPixels fnCopyPixels;
    gl11PCullFace fnCullFace;
    gl11PDeleteLists fnDeleteLists;
    gl11PDepthFunc fnDepthFunc;
    gl11PDepthMask fnDepthMask;
    gl11PDepthRange fnDepthRange;
    gl11PEnable fnEnable;
    gl11PDisable fnDisable;
    gl11PDrawBuffer fnDrawBuffer;
    gl11PDrawPixels fnDrawPixels;
    gl11PEdgeFlag fnEdgeFlag;
    gl11PEdgeFlagv fnEdgeFlagv;
    gl11PEdgeFlagPointer fnEdgeFlagPointer;
    gl11PEvalCoord1d fnEvalCoord1d;
    gl11PEvalCoord1f fnEvalCoord1f;
    gl11PEvalCoord2d fnEvalCoord2d;
    gl11PEvalCoord2f fnEvalCoord2f;
    gl11PEvalCoord1dv fnEvalCoord1dv;
    gl11PEvalCoord1fv fnEvalCoord1fv;
    gl11PEvalCoord2dv fnEvalCoord2dv;
    gl11PEvalCoord2fv fnEvalCoord2fv;
    gl11PEvalMesh1 fnEvalMesh1;
    gl11PEvalMesh2 fnEvalMesh2;
    gl11PEvalPoint1 fnEvalPoint1;
    gl11PEvalPoint2 fnEvalPoint2;
    gl11PFeedbackBuffer fnFeedbackBuffer;
    gl11PFinish fnFinish;
    gl11PFlush fnFlush;
    gl11PFogf fnFogf;
    gl11PFogi fnFogi;
    gl11PFogfv fnFogfv;
    gl11PFogiv fnFogiv;
    gl11PFrontFace fnFrontFace;
    gl11PFrustum fnFrustum;
    gl11PGenLists fnGenLists;
    gl11PGetBooleanv fnGetBooleanv;
    gl11PGetDoublev fnGetDoublev;
    gl11PGetFloatv fnGetFloatv;
    gl11PGetIntegerv fnGetIntegerv;
    gl11PGetClipPlane fnGetClipPlane;
    gl11PGetError fnGetError;
    gl11PGetLightfv fnGetLightfv;
    gl11PGetLightiv fnGetLightiv;
    gl11PGetMapdv fnGetMapdv;
    gl11PGetMapfv fnGetMapfv;
    gl11PGetMapiv fnGetMapiv;
    gl11PGetMaterialfv fnGetMaterialfv;
    gl11PGetMaterialiv fnGetMaterialiv;
    gl11PGetPixelMapfv fnGetPixelMapfv;
    gl11PGetPixelMapuiv fnGetPixelMapuiv;
    gl11PGetPixelMapusv fnGetPixelMapusv;
    gl11PGetPolygonStipple fnGetPolygonStipple;
    gl11PGetString fnGetString;
    gl11PGetTexEnvfv fnGetTexEnvfv;
    gl11PGetTexEnviv fnGetTexEnviv;
    gl11PGetTexGendv fnGetTexGendv;
    gl11PGetTexGenfv fnGetTexGenfv;
    gl11PGetTexGeniv fnGetTexGeniv;
    gl11PGetTexImage fnGetTexImage;
    gl11PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl11PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl11PGetTexParameterfv fnGetTexParameterfv;
    gl11PGetTexParameteriv fnGetTexParameteriv;
    gl11PHint fnHint;
    gl11PIndexd fnIndexd;
    gl11PIndexf fnIndexf;
    gl11PIndexi fnIndexi;
    gl11PIndexs fnIndexs;
    gl11PIndexdv fnIndexdv;
    gl11PIndexfv fnIndexfv;
    gl11PIndexiv fnIndexiv;
    gl11PIndexsv fnIndexsv;
    gl11PIndexMask fnIndexMask;
    gl11PIndexPointer fnIndexPointer;
    gl11PInitNames fnInitNames;
    gl11PIsEnabled fnIsEnabled;
    gl11PIsList fnIsList;
    gl11PLightf fnLightf;
    gl11PLighti fnLighti;
    gl11PLightfv fnLightfv;
    gl11PLightiv fnLightiv;
    gl11PLightModelf fnLightModelf;
    gl11PLightModeli fnLightModeli;
    gl11PLightModelfv fnLightModelfv;
    gl11PLightModeliv fnLightModeliv;
    gl11PLineStipple fnLineStipple;
    gl11PLineWidth fnLineWidth;
    gl11PListBase fnListBase;
    gl11PLoadIdentity fnLoadIdentity;
    gl11PLoadMatrixd fnLoadMatrixd;
    gl11PLoadMatrixf fnLoadMatrixf;
    gl11PLoadName fnLoadName;
    gl11PLogicOp fnLogicOp;
    gl11PMap1d fnMap1d;
    gl11PMap1f fnMap1f;
    gl11PMap2d fnMap2d;
    gl11PMap2f fnMap2f;
    gl11PMapGrid1d fnMapGrid1d;
    gl11PMapGrid1f fnMapGrid1f;
    gl11PMapGrid2d fnMapGrid2d;
    gl11PMapGrid2f fnMapGrid2f;
    gl11PMaterialf fnMaterialf;
    gl11PMateriali fnMateriali;
    gl11PMaterialfv fnMaterialfv;
    gl11PMaterialiv fnMaterialiv;
    gl11PMatrixMode fnMatrixMode;
    gl11PMultMatrixd fnMultMatrixd;
    gl11PMultMatrixf fnMultMatrixf;
    gl11PNewList fnNewList;
    gl11PEndList fnEndList;
    gl11PNormal3b fnNormal3b;
    gl11PNormal3d fnNormal3d;
    gl11PNormal3f fnNormal3f;
    gl11PNormal3i fnNormal3i;
    gl11PNormal3s fnNormal3s;
    gl11PNormal3bv fnNormal3bv;
    gl11PNormal3dv fnNormal3dv;
    gl11PNormal3fv fnNormal3fv;
    gl11PNormal3iv fnNormal3iv;
    gl11PNormal3sv fnNormal3sv;
    gl11POrtho fnOrtho;
    gl11PPassThrough fnPassThrough;
    gl11PPixelMapfv fnPixelMapfv;
    gl11PPixelMapuiv fnPixelMapuiv;
    gl11PPixelMapusv fnPixelMapusv;
    gl11PPixelStoref fnPixelStoref;
    gl11PPixelStorei fnPixelStorei;
    gl11PPixelTransferf fnPixelTransferf;
    gl11PPixelTransferi fnPixelTransferi;
    gl11PPixelZoom fnPixelZoom;
    gl11PPointSize fnPointSize;
    gl11PPolygonMode fnPolygonMode;
    gl11PPolygonStipple fnPolygonStipple;
    gl11PPushAttrib fnPushAttrib;
    gl11PPopAttrib fnPopAttrib;
    gl11PPushMatrix fnPushMatrix;
    gl11PPopMatrix fnPopMatrix;
    gl11PPushName fnPushName;
    gl11PPopName fnPopName;
    gl11PRasterPos2d fnRasterPos2d;
    gl11PRasterPos2f fnRasterPos2f;
    gl11PRasterPos2i fnRasterPos2i;
    gl11PRasterPos2s fnRasterPos2s;
    gl11PRasterPos3d fnRasterPos3d;
    gl11PRasterPos3f fnRasterPos3f;
    gl11PRasterPos3i fnRasterPos3i;
    gl11PRasterPos3s fnRasterPos3s;
    gl11PRasterPos4d fnRasterPos4d;
    gl11PRasterPos4f fnRasterPos4f;
    gl11PRasterPos4i fnRasterPos4i;
    gl11PRasterPos4s fnRasterPos4s;
    gl11PRasterPos2dv fnRasterPos2dv;
    gl11PRasterPos2fv fnRasterPos2fv;
    gl11PRasterPos2iv fnRasterPos2iv;
    gl11PRasterPos2sv fnRasterPos2sv;
    gl11PRasterPos3dv fnRasterPos3dv;
    gl11PRasterPos3fv fnRasterPos3fv;
    gl11PRasterPos3iv fnRasterPos3iv;
    gl11PRasterPos3sv fnRasterPos3sv;
    gl11PRasterPos4dv fnRasterPos4dv;
    gl11PRasterPos4fv fnRasterPos4fv;
    gl11PRasterPos4iv fnRasterPos4iv;
    gl11PRasterPos4sv fnRasterPos4sv;
    gl11PReadBuffer fnReadBuffer;
    gl11PReadPixels fnReadPixels;
    gl11PRectd fnRectd;
    gl11PRectf fnRectf;
    gl11PRecti fnRecti;
    gl11PRects fnRects;
    gl11PRectdv fnRectdv;
    gl11PRectfv fnRectfv;
    gl11PRectiv fnRectiv;
    gl11PRectsv fnRectsv;
    gl11PRenderMode fnRenderMode;
    gl11PRotated fnRotated;
    gl11PRotatef fnRotatef;
    gl11PScaled fnScaled;
    gl11PScalef fnScalef;
    gl11PScissor fnScissor;
    gl11PSelectBuffer fnSelectBuffer;
    gl11PShadeModel fnShadeModel;
    gl11PStencilFunc fnStencilFunc;
    gl11PStencilMask fnStencilMask;
    gl11PStencilOp fnStencilOp;
    gl11PTexCoord1d fnTexCoord1d;
    gl11PTexCoord1f fnTexCoord1f;
    gl11PTexCoord1i fnTexCoord1i;
    gl11PTexCoord1s fnTexCoord1s;
    gl11PTexCoord2d fnTexCoord2d;
    gl11PTexCoord2f fnTexCoord2f;
    gl11PTexCoord2i fnTexCoord2i;
    gl11PTexCoord2s fnTexCoord2s;
    gl11PTexCoord3d fnTexCoord3d;
    gl11PTexCoord3f fnTexCoord3f;
    gl11PTexCoord3i fnTexCoord3i;
    gl11PTexCoord3s fnTexCoord3s;
    gl11PTexCoord4d fnTexCoord4d;
    gl11PTexCoord4f fnTexCoord4f;
    gl11PTexCoord4i fnTexCoord4i;
    gl11PTexCoord4s fnTexCoord4s;
    gl11PTexCoord1dv fnTexCoord1dv;
    gl11PTexCoord1fv fnTexCoord1fv;
    gl11PTexCoord1iv fnTexCoord1iv;
    gl11PTexCoord1sv fnTexCoord1sv;
    gl11PTexCoord2dv fnTexCoord2dv;
    gl11PTexCoord2fv fnTexCoord2fv;
    gl11PTexCoord2iv fnTexCoord2iv;
    gl11PTexCoord2sv fnTexCoord2sv;
    gl11PTexCoord3dv fnTexCoord3dv;
    gl11PTexCoord3fv fnTexCoord3fv;
    gl11PTexCoord3iv fnTexCoord3iv;
    gl11PTexCoord3sv fnTexCoord3sv;
    gl11PTexCoord4dv fnTexCoord4dv;
    gl11PTexCoord4fv fnTexCoord4fv;
    gl11PTexCoord4iv fnTexCoord4iv;
    gl11PTexCoord4sv fnTexCoord4sv;
    gl11PTexEnvf fnTexEnvf;
    gl11PTexEnvi fnTexEnvi;
    gl11PTexEnvfv fnTexEnvfv;
    gl11PTexEnviv fnTexEnviv;
    gl11PTexGend fnTexGend;
    gl11PTexGenf fnTexGenf;
    gl11PTexGeni fnTexGeni;
    gl11PTexGendv fnTexGendv;
    gl11PTexGenfv fnTexGenfv;
    gl11PTexGeniv fnTexGeniv;
    gl11PTexImage1D fnTexImage1D;
    gl11PTexImage2D fnTexImage2D;
    gl11PTexParameterf fnTexParameterf;
    gl11PTexParameteri fnTexParameteri;
    gl11PTexParameterfv fnTexParameterfv;
    gl11PTexParameteriv fnTexParameteriv;
    gl11PTranslated fnTranslated;
    gl11PTranslatef fnTranslatef;
    gl11PVertex2s fnVertex2s;
    gl11PVertex2i fnVertex2i;
    gl11PVertex2f fnVertex2f;
    gl11PVertex2d fnVertex2d;
    gl11PVertex3s fnVertex3s;
    gl11PVertex3i fnVertex3i;
    gl11PVertex3f fnVertex3f;
    gl11PVertex3d fnVertex3d;
    gl11PVertex4s fnVertex4s;
    gl11PVertex4i fnVertex4i;
    gl11PVertex4f fnVertex4f;
    gl11PVertex4d fnVertex4d;
    gl11PViewport fnViewport;
    gl11PGetConvolutionParameterfv fnGetConvolutionParameterfv;
    gl11PGetConvolutionParameteriv fnGetConvolutionParameteriv;
    gl11PAreTexturesResident fnAreTexturesResident;
    gl11PArrayElement fnArrayElement;
    gl11PDrawArrays fnDrawArrays;
    gl11PDrawElements fnDrawElements;
    gl11PGetPointerv fnGetPointerv;
    gl11PPolygonOffset fnPolygonOffset;
    gl11PCopyTexImage1D fnCopyTexImage1D;
    gl11PCopyTexImage2D fnCopyTexImage2D;
    gl11PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl11PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl11PBindTexture fnBindTexture;
    gl11PDeleteTextures fnDeleteTextures;
    gl11PGenTextures fnGenTextures;
    gl11PIsTexture fnIsTexture;
    gl11PColorPointer fnColorPointer;
    gl11PEnableClientState fnEnableClientState;
    gl11PDisableClientState fnDisableClientState;
    gl11PIndexub fnIndexub;
    gl11PIndexubv fnIndexubv;
    gl11PInterleavedArrays fnInterleavedArrays;
    gl11PNormalPointer fnNormalPointer;
    gl11PPushClientAttrib fnPushClientAttrib;
    gl11PPrioritizeTextures fnPrioritizeTextures;
    gl11PPopClientAttrib fnPopClientAttrib;
    gl11PTexCoordPointer fnTexCoordPointer;
    gl11PTexSubImage1D fnTexSubImage1D;
    gl11PTexSubImage2D fnTexSubImage2D;
    gl11PVertexPointer fnVertexPointer;
    gl11PColorTable fnColorTable;
    gl11PColorTableParameterfv fnColorTableParameterfv;
    gl11PColorTableParameteriv fnColorTableParameteriv;
    gl11PColorSubTable fnColorSubTable;
    gl11PConvolutionFilter1D fnConvolutionFilter1D;
    gl11PConvolutionFilter2D fnConvolutionFilter2D;
    gl11PConvolutionParameterf fnConvolutionParameterf;
    gl11PConvolutionParameteri fnConvolutionParameteri;
    gl11PCopyColorTable fnCopyColorTable;
    gl11PCopyColorSubTable fnCopyColorSubTable;
    gl11PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl11PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl11PGetColorTable fnGetColorTable;
    gl11PGetColorTableParameterfv fnGetColorTableParameterfv;
    gl11PGetColorTableParameteriv fnGetColorTableParameteriv;
    gl11PGetConvolutionFilter fnGetConvolutionFilter;
    gl11PGetHistogram fnGetHistogram;
    gl11PGetHistogramParameterfv fnGetHistogramParameterfv;
    gl11PGetHistogramParameteriv fnGetHistogramParameteriv;
    gl11PGetSeparableFilter fnGetSeparableFilter;
    gl11PHistogram fnHistogram;
    gl11PMinmax fnMinmax;
    gl11PMultiTexCoord1s fnMultiTexCoord1s;
    gl11PMultiTexCoord1i fnMultiTexCoord1i;
    gl11PMultiTexCoord1f fnMultiTexCoord1f;
    gl11PMultiTexCoord1d fnMultiTexCoord1d;
    gl11PMultiTexCoord2s fnMultiTexCoord2s;
    gl11PMultiTexCoord2i fnMultiTexCoord2i;
    gl11PMultiTexCoord2f fnMultiTexCoord2f;
    gl11PMultiTexCoord2d fnMultiTexCoord2d;
    gl11PMultiTexCoord3s fnMultiTexCoord3s;
    gl11PMultiTexCoord3i fnMultiTexCoord3i;
    gl11PMultiTexCoord3f fnMultiTexCoord3f;
    gl11PMultiTexCoord3d fnMultiTexCoord3d;
    gl11PMultiTexCoord4s fnMultiTexCoord4s;
    gl11PMultiTexCoord4i fnMultiTexCoord4i;
    gl11PMultiTexCoord4f fnMultiTexCoord4f;
    gl11PMultiTexCoord4d fnMultiTexCoord4d;
    gl11PMultiTexCoord1sv fnMultiTexCoord1sv;
    gl11PMultiTexCoord1iv fnMultiTexCoord1iv;
    gl11PMultiTexCoord1fv fnMultiTexCoord1fv;
    gl11PMultiTexCoord1dv fnMultiTexCoord1dv;
    gl11PMultiTexCoord2sv fnMultiTexCoord2sv;
    gl11PMultiTexCoord2iv fnMultiTexCoord2iv;
    gl11PMultiTexCoord2fv fnMultiTexCoord2fv;
    gl11PMultiTexCoord2dv fnMultiTexCoord2dv;
    gl11PMultiTexCoord3sv fnMultiTexCoord3sv;
    gl11PMultiTexCoord3iv fnMultiTexCoord3iv;
    gl11PMultiTexCoord3fv fnMultiTexCoord3fv;
    gl11PMultiTexCoord3dv fnMultiTexCoord3dv;
    gl11PMultiTexCoord4sv fnMultiTexCoord4sv;
    gl11PMultiTexCoord4iv fnMultiTexCoord4iv;
    gl11PMultiTexCoord4fv fnMultiTexCoord4fv;
    gl11PMultiTexCoord4dv fnMultiTexCoord4dv;
    gl11PResetHistogram fnResetHistogram;
    gl11PResetMinmax fnResetMinmax;
    gl11PSeparableFilter2D fnSeparableFilter2D;
    gl11PBlendColor fnBlendColor;
    gl11PBlendEquation fnBlendEquation;
    gl11PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl11PDrawRangeElements fnDrawRangeElements;
    gl11PTexImage3D fnTexImage3D;
    gl11PTexSubImage3D fnTexSubImage3D;
    gl11PActiveTexture fnActiveTexture;
    gl11PClientActiveTexture fnClientActiveTexture;
    gl11PCompressedTexImage1D fnCompressedTexImage1D;
    gl11PCompressedTexImage2D fnCompressedTexImage2D;
    gl11PCompressedTexImage3D fnCompressedTexImage3D;
    gl11PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl11PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl11PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl11PGetCompressedTexImage fnGetCompressedTexImage;
    gl11PLoadTransposeMatrixd fnLoadTransposeMatrixd;
    gl11PLoadTransposeMatrixf fnLoadTransposeMatrixf;
    gl11PMultTransposeMatrixd fnMultTransposeMatrixd;
    gl11PMultTransposeMatrixf fnMultTransposeMatrixf;
    gl11PSampleCoverage fnSampleCoverage;
    gl11PBlendFuncSeparate fnBlendFuncSeparate;
    gl11PFogCoordPointer fnFogCoordPointer;
    gl11PFogCoordd fnFogCoordd;
    gl11PFogCoordf fnFogCoordf;
    gl11PFogCoorddv fnFogCoorddv;
    gl11PFogCoordfv fnFogCoordfv;
    gl11PMultiDrawArrays fnMultiDrawArrays;
    gl11PMultiDrawElements fnMultiDrawElements;
    gl11PPointParameterf fnPointParameterf;
    gl11PPointParameteri fnPointParameteri;
    gl11PSecondaryColor3b fnSecondaryColor3b;
    gl11PSecondaryColor3s fnSecondaryColor3s;
    gl11PSecondaryColor3i fnSecondaryColor3i;
    gl11PSecondaryColor3f fnSecondaryColor3f;
    gl11PSecondaryColor3d fnSecondaryColor3d;
    gl11PSecondaryColor3ub fnSecondaryColor3ub;
    gl11PSecondaryColor3us fnSecondaryColor3us;
    gl11PSecondaryColor3ui fnSecondaryColor3ui;
    gl11PSecondaryColor3bv fnSecondaryColor3bv;
    gl11PSecondaryColor3sv fnSecondaryColor3sv;
    gl11PSecondaryColor3iv fnSecondaryColor3iv;
    gl11PSecondaryColor3fv fnSecondaryColor3fv;
    gl11PSecondaryColor3dv fnSecondaryColor3dv;
    gl11PSecondaryColor3ubv fnSecondaryColor3ubv;
    gl11PSecondaryColor3usv fnSecondaryColor3usv;
    gl11PSecondaryColor3uiv fnSecondaryColor3uiv;
    gl11PSecondaryColorPointer fnSecondaryColorPointer;
    gl11PWindowPos2s fnWindowPos2s;
    gl11PWindowPos2i fnWindowPos2i;
    gl11PWindowPos2f fnWindowPos2f;
    gl11PWindowPos2d fnWindowPos2d;
    gl11PWindowPos3s fnWindowPos3s;
    gl11PWindowPos3i fnWindowPos3i;
    gl11PWindowPos3f fnWindowPos3f;
    gl11PWindowPos3d fnWindowPos3d;
    gl11PWindowPos2sv fnWindowPos2sv;
    gl11PWindowPos2iv fnWindowPos2iv;
    gl11PWindowPos2fv fnWindowPos2fv;
    gl11PWindowPos2dv fnWindowPos2dv;
    gl11PWindowPos3sv fnWindowPos3sv;
    gl11PWindowPos3iv fnWindowPos3iv;
    gl11PWindowPos3fv fnWindowPos3fv;
    gl11PWindowPos3dv fnWindowPos3dv;
    gl11PBeginQuery fnBeginQuery;
    gl11PBindBuffer fnBindBuffer;
    gl11PBufferData fnBufferData;
    gl11PBufferSubData fnBufferSubData;
    gl11PDeleteBuffers fnDeleteBuffers;
    gl11PDeleteQueries fnDeleteQueries;
    gl11PGenBuffers fnGenBuffers;
    gl11PGenQueries fnGenQueries;
    gl11PGetBufferParameteriv fnGetBufferParameteriv;
    gl11PGetBufferPointerv fnGetBufferPointerv;
    gl11PGetBufferSubData fnGetBufferSubData;
    gl11PGetQueryObjectiv fnGetQueryObjectiv;
    gl11PGetQueryObjectuiv fnGetQueryObjectuiv;
    gl11PGetQueryiv fnGetQueryiv;
    gl11PIsBuffer fnIsBuffer;
    gl11PIsQuery fnIsQuery;
    gl11PMapBuffer fnMapBuffer;
    gl11PUnmapBuffer fnUnmapBuffer;
    gl11PAttachShader fnAttachShader;
    gl11PBindAttribLocation fnBindAttribLocation;
    gl11PBlendEquationSeperate fnBlendEquationSeperate;
    gl11PCompileShader fnCompileShader;
    gl11PCreateProgram fnCreateProgram;
    gl11PCreateShader fnCreateShader;
    gl11PDeleteProgram fnDeleteProgram;
    gl11PDeleteShader fnDeleteShader;
    gl11PDetachShader fnDetachShader;
    gl11PEnableVertexAttribArray fnEnableVertexAttribArray;
    gl11PDisableVertexAttribArray fnDisableVertexAttribArray;
    gl11PDrawBuffers fnDrawBuffers;
    gl11PGetActiveAttrib fnGetActiveAttrib;
    gl11PGetActiveUniform fnGetActiveUniform;
    gl11PGetAttachedShaders fnGetAttachedShaders;
    gl11PGetAttribLocation fnGetAttribLocation;
    gl11PGetProgramiv fnGetProgramiv;
    gl11PGetProgramInfoLog fnGetProgramInfoLog;
    gl11PGetShaderiv fnGetShaderiv;
    gl11PGetShaderInfoLog fnGetShaderInfoLog;
    gl11PGetShaderSource fnGetShaderSource;
    gl11PGetUniformfv fnGetUniformfv;
    gl11PGetUniformiv fnGetUniformiv;
    gl11PGetUniformLocation fnGetUniformLocation;
    gl11PGetVertexAttribdv fnGetVertexAttribdv;
    gl11PGetVertexAttribfv fnGetVertexAttribfv;
    gl11PGetVertexAttribiv fnGetVertexAttribiv;
    gl11PGetVertexAttribPointerv fnGetVertexAttribPointerv;
    gl11PIsProgram fnIsProgram;
    gl11PIsShader fnIsShader;
    gl11PLinkProgram fnLinkProgram;
    gl11PShaderSource fnShaderSource;
    gl11PStencilFuncSeparate fnStencilFuncSeparate;
    gl11PStencilMaskSeparate fnStencilMaskSeparate;
    gl11PStencilOpSeparate fnStencilOpSeparate;
    gl11PUniform1f fnUniform1f;
    gl11PUniform2f fnUniform2f;
    gl11PUniform3f fnUniform3f;
    gl11PUniform4f fnUniform4f;
    gl11PUniform1i fnUniform1i;
    gl11PUniform2i fnUniform2i;
    gl11PUniform3i fnUniform3i;
    gl11PUniform4i fnUniform4i;
    gl11PUniform1ui fnUniform1ui;
    gl11PUniform2ui fnUniform2ui;
    gl11PUniform3ui fnUniform3ui;
    gl11PUniform4ui fnUniform4ui;
    gl11PUniform1fv fnUniform1fv;
    gl11PUniform2fv fnUniform2fv;
    gl11PUniform3fv fnUniform3fv;
    gl11PUniform4fv fnUniform4fv;
    gl11PUniform1iv fnUniform1iv;
    gl11PUniform2iv fnUniform2iv;
    gl11PUniform3iv fnUniform3iv;
    gl11PUniform4iv fnUniform4iv;
    gl11PUniform1uiv fnUniform1uiv;
    gl11PUniform2uiv fnUniform2uiv;
    gl11PUniform3uiv fnUniform3uiv;
    gl11PUniform4uiv fnUniform4uiv;
    gl11PUseProgram fnUseProgram;
    gl11PValidateProgram fnValidateProgram;
    gl11PVertexAttribPointer fnVertexAttribPointer;
    gl11PVertexAttrib1f fnVertexAttrib1f;
    gl11PVertexAttrib1s fnVertexAttrib1s;
    gl11PVertexAttrib1d fnVertexAttrib1d;
    gl11PVertexAttrib2f fnVertexAttrib2f;
    gl11PVertexAttrib2s fnVertexAttrib2s;
    gl11PVertexAttrib2d fnVertexAttrib2d;
    gl11PVertexAttrib3f fnVertexAttrib3f;
    gl11PVertexAttrib3s fnVertexAttrib3s;
    gl11PVertexAttrib3d fnVertexAttrib3d;
    gl11PVertexAttrib4f fnVertexAttrib4f;
    gl11PVertexAttrib4s fnVertexAttrib4s;
    gl11PVertexAttrib4d fnVertexAttrib4d;
    gl11PVertexAttrib4Nuv fnVertexAttrib4Nuv;
    gl11PVertexAttrib1fv fnVertexAttrib1fv;
    gl11PVertexAttrib1sv fnVertexAttrib1sv;
    gl11PVertexAttrib1dv fnVertexAttrib1dv;
    gl11PVertexAttrib2fv fnVertexAttrib2fv;
    gl11PVertexAttrib2sv fnVertexAttrib2sv;
    gl11PVertexAttrib2dv fnVertexAttrib2dv;
    gl11PVertexAttrib3fv fnVertexAttrib3fv;
    gl11PVertexAttrib3sv fnVertexAttrib3sv;
    gl11PVertexAttrib3dv fnVertexAttrib3dv;
    gl11PVertexAttrib4fv fnVertexAttrib4fv;
    gl11PVertexAttrib4sv fnVertexAttrib4sv;
    gl11PVertexAttrib4dv fnVertexAttrib4dv;
    gl11PVertexAttrib4iv fnVertexAttrib4iv;
    gl11PVertexAttrib4bv fnVertexAttrib4bv;
    gl11PVertexAttrib4ubv fnVertexAttrib4ubv;
    gl11PVertexAttrib4usv fnVertexAttrib4usv;
    gl11PVertexAttrib4uiv fnVertexAttrib4uiv;
    gl11PVertexAttrib4Nbv fnVertexAttrib4Nbv;
    gl11PVertexAttrib4Nsv fnVertexAttrib4Nsv;
    gl11PVertexAttrib4Niv fnVertexAttrib4Niv;
    gl11PVertexAttrib4Nubv fnVertexAttrib4Nubv;
    gl11PVertexAttrib4Nusv fnVertexAttrib4Nusv;
    gl11PVertexAttrib4Nuiv fnVertexAttrib4Nuiv;
    gl11PUniformMatrix2fv fnUniformMatrix2fv;
    gl11PUniformMatrix3fv fnUniformMatrix3fv;
    gl11PUniformMatrix4fv fnUniformMatrix4fv;
    gl11PUniformMatrix2x3fv fnUniformMatrix2x3fv;
    gl11PUniformMatrix3x2fv fnUniformMatrix3x2fv;
    gl11PUniformMatrix2x4fv fnUniformMatrix2x4fv;
    gl11PUniformMatrix4x2fv fnUniformMatrix4x2fv;
    gl11PUniformMatrix3x4fv fnUniformMatrix3x4fv;
    gl11PUniformMatrix4x3fv fnUniformMatrix4x3fv;
} gl11Context;

extern gl11Context* gl11NewContext();
void gl11Accum(gl11Context* glc, GLenum op, GLfloat value);
void gl11AlphaFunc(gl11Context* glc, GLenum func, GLclampf ref);
void gl11Begin(gl11Context* glc, GLenum mode);
void gl11End(gl11Context* glc);
void gl11Bitmap(gl11Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl11BlendFunc(gl11Context* glc, GLenum sfactor, GLenum dfactor);
void gl11CallList(gl11Context* glc, GLuint list);
void gl11CallLists(gl11Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl11Clear(gl11Context* glc, GLbitfield mask);
void gl11ClearAccum(gl11Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl11ClearColor(gl11Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl11ClearDepth(gl11Context* glc, GLclampd depth);
void gl11ClearIndex(gl11Context* glc, GLfloat c);
void gl11ClearStencil(gl11Context* glc, GLint s);
void gl11ClipPlane(gl11Context* glc, GLenum plane, GLdouble* equation);
void gl11Color3b(gl11Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl11Color3d(gl11Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl11Color3f(gl11Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl11Color3i(gl11Context* glc, GLint red, GLint green, GLint blue);
void gl11Color3s(gl11Context* glc, GLshort red, GLshort green, GLshort blue);
void gl11Color3ub(gl11Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl11Color3ui(gl11Context* glc, GLuint red, GLuint green, GLuint blue);
void gl11Color3us(gl11Context* glc, GLushort red, GLushort green, GLushort blue);
void gl11Color4b(gl11Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl11Color4d(gl11Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl11Color4f(gl11Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl11Color4i(gl11Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl11Color4s(gl11Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl11Color4ub(gl11Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl11Color4ui(gl11Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl11Color4us(gl11Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl11Color3bv(gl11Context* glc, GLbyte* v);
void gl11Color3dv(gl11Context* glc, GLdouble* v);
void gl11Color3fv(gl11Context* glc, GLfloat* v);
void gl11Color3iv(gl11Context* glc, GLint* v);
void gl11Color3sv(gl11Context* glc, GLshort* v);
void gl11Color3ubv(gl11Context* glc, GLubyte* v);
void gl11Color3uiv(gl11Context* glc, GLuint* v);
void gl11Color3usv(gl11Context* glc, GLushort* v);
void gl11Color4bv(gl11Context* glc, GLbyte* v);
void gl11Color4dv(gl11Context* glc, GLdouble* v);
void gl11Color4fv(gl11Context* glc, GLfloat* v);
void gl11Color4iv(gl11Context* glc, GLint* v);
void gl11Color4sv(gl11Context* glc, GLshort* v);
void gl11Color4ubv(gl11Context* glc, GLubyte* v);
void gl11Color4uiv(gl11Context* glc, GLuint* v);
void gl11Color4usv(gl11Context* glc, GLushort* v);
void gl11ColorMask(gl11Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl11ColorMaterial(gl11Context* glc, GLenum face, GLenum mode);
void gl11CopyPixels(gl11Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl11CullFace(gl11Context* glc, GLenum mode);
void gl11DeleteLists(gl11Context* glc, GLuint list, GLsizei range);
void gl11DepthFunc(gl11Context* glc, GLenum func);
void gl11DepthMask(gl11Context* glc, GLboolean flag);
void gl11DepthRange(gl11Context* glc, GLclampd zNear, GLclampd zFar);
void gl11Enable(gl11Context* glc, GLenum cap);
void gl11Disable(gl11Context* glc, GLenum cap);
void gl11DrawBuffer(gl11Context* glc, GLenum mode);
void gl11DrawPixels(gl11Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl11EdgeFlag(gl11Context* glc, GLboolean flag);
void gl11EdgeFlagv(gl11Context* glc, GLboolean* flag);
void gl11EdgeFlagPointer(gl11Context* glc, GLsizei stride, GLvoid* pointer);
void gl11EvalCoord1d(gl11Context* glc, GLdouble u);
void gl11EvalCoord1f(gl11Context* glc, GLfloat u);
void gl11EvalCoord2d(gl11Context* glc, GLdouble u, GLdouble v);
void gl11EvalCoord2f(gl11Context* glc, GLfloat u, GLfloat v);
void gl11EvalCoord1dv(gl11Context* glc, GLdouble* u);
void gl11EvalCoord1fv(gl11Context* glc, GLfloat* u);
void gl11EvalCoord2dv(gl11Context* glc, GLdouble* u);
void gl11EvalCoord2fv(gl11Context* glc, GLfloat* u);
void gl11EvalMesh1(gl11Context* glc, GLenum mode, GLint i1, GLint i2);
void gl11EvalMesh2(gl11Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl11EvalPoint1(gl11Context* glc, GLint i);
void gl11EvalPoint2(gl11Context* glc, GLint i, GLint j);
void gl11FeedbackBuffer(gl11Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl11Finish(gl11Context* glc);
void gl11Flush(gl11Context* glc);
void gl11Fogf(gl11Context* glc, GLenum pname, GLfloat param);
void gl11Fogi(gl11Context* glc, GLenum pname, GLint param);
void gl11Fogfv(gl11Context* glc, GLenum pname, GLfloat* params);
void gl11Fogiv(gl11Context* glc, GLenum pname, GLint* params);
void gl11FrontFace(gl11Context* glc, GLenum mode);
void gl11Frustum(gl11Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl11GenLists(gl11Context* glc, GLsizei range);
void gl11GetBooleanv(gl11Context* glc, GLenum pname, GLboolean* params);
void gl11GetDoublev(gl11Context* glc, GLenum pname, GLdouble* params);
void gl11GetFloatv(gl11Context* glc, GLenum pname, GLfloat* params);
void gl11GetIntegerv(gl11Context* glc, GLenum pname, GLint* params);
void gl11GetClipPlane(gl11Context* glc, GLenum plane, GLdouble* equation);
GLenum gl11GetError(gl11Context* glc);
void gl11GetLightfv(gl11Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl11GetLightiv(gl11Context* glc, GLenum light, GLenum pname, GLint* params);
void gl11GetMapdv(gl11Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl11GetMapfv(gl11Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl11GetMapiv(gl11Context* glc, GLenum target, GLenum query, GLint* v);
void gl11GetMaterialfv(gl11Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl11GetMaterialiv(gl11Context* glc, GLenum face, GLenum pname, GLint* params);
void gl11GetPixelMapfv(gl11Context* glc, GLenum map, GLfloat* values);
void gl11GetPixelMapuiv(gl11Context* glc, GLenum map, GLuint* values);
void gl11GetPixelMapusv(gl11Context* glc, GLenum map, GLushort* values);
void gl11GetPolygonStipple(gl11Context* glc, GLubyte* pattern);
GLubyte* gl11GetString(gl11Context* glc, GLenum name);
void gl11GetTexEnvfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11GetTexEnviv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11GetTexGendv(gl11Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl11GetTexGenfv(gl11Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl11GetTexGeniv(gl11Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl11GetTexImage(gl11Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl11GetTexLevelParameterfv(gl11Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl11GetTexLevelParameteriv(gl11Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl11GetTexParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11GetTexParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11Hint(gl11Context* glc, GLenum target, GLenum mode);
void gl11Indexd(gl11Context* glc, GLdouble c);
void gl11Indexf(gl11Context* glc, GLfloat c);
void gl11Indexi(gl11Context* glc, GLint c);
void gl11Indexs(gl11Context* glc, GLshort c);
void gl11Indexdv(gl11Context* glc, GLdouble* c);
void gl11Indexfv(gl11Context* glc, GLfloat* c);
void gl11Indexiv(gl11Context* glc, GLint* c);
void gl11Indexsv(gl11Context* glc, GLshort* c);
void gl11IndexMask(gl11Context* glc, GLuint mask);
void gl11IndexPointer(gl11Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11InitNames(gl11Context* glc);
void gl11IsEnabled(gl11Context* glc, GLenum cap);
GLboolean gl11IsList(gl11Context* glc, GLuint list);
void gl11Lightf(gl11Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl11Lighti(gl11Context* glc, GLenum light, GLenum pname, GLint param);
void gl11Lightfv(gl11Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl11Lightiv(gl11Context* glc, GLenum light, GLenum pname, GLint* params);
void gl11LightModelf(gl11Context* glc, GLenum pname, GLfloat param);
void gl11LightModeli(gl11Context* glc, GLenum pname, GLint param);
void gl11LightModelfv(gl11Context* glc, GLenum pname, GLfloat* params);
void gl11LightModeliv(gl11Context* glc, GLenum pname, GLint* params);
void gl11LineStipple(gl11Context* glc, GLint factor, GLushort pattern);
void gl11LineWidth(gl11Context* glc, GLfloat width);
void gl11ListBase(gl11Context* glc, GLuint base);
void gl11LoadIdentity(gl11Context* glc);
void gl11LoadMatrixd(gl11Context* glc, GLdouble* m);
void gl11LoadMatrixf(gl11Context* glc, GLfloat* m);
void gl11LoadName(gl11Context* glc, GLuint name);
void gl11LogicOp(gl11Context* glc, GLenum opcode);
void gl11Map1d(gl11Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl11Map1f(gl11Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl11Map2d(gl11Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl11Map2f(gl11Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl11MapGrid1d(gl11Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl11MapGrid1f(gl11Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl11MapGrid2d(gl11Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl11MapGrid2f(gl11Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl11Materialf(gl11Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl11Materiali(gl11Context* glc, GLenum face, GLenum pname, GLint param);
void gl11Materialfv(gl11Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl11Materialiv(gl11Context* glc, GLenum face, GLenum pname, GLint* params);
void gl11MatrixMode(gl11Context* glc, GLenum mode);
void gl11MultMatrixd(gl11Context* glc, GLdouble* m);
void gl11MultMatrixf(gl11Context* glc, GLfloat* m);
void gl11NewList(gl11Context* glc, GLuint list, GLenum mode);
void gl11EndList(gl11Context* glc);
void gl11Normal3b(gl11Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl11Normal3d(gl11Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl11Normal3f(gl11Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl11Normal3i(gl11Context* glc, GLint nx, GLint ny, GLint nz);
void gl11Normal3s(gl11Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl11Normal3bv(gl11Context* glc, GLbyte* v);
void gl11Normal3dv(gl11Context* glc, GLdouble* v);
void gl11Normal3fv(gl11Context* glc, GLfloat* v);
void gl11Normal3iv(gl11Context* glc, GLint* v);
void gl11Normal3sv(gl11Context* glc, GLshort* v);
void gl11Ortho(gl11Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl11PassThrough(gl11Context* glc, GLfloat token);
void gl11PixelMapfv(gl11Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl11PixelMapuiv(gl11Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl11PixelMapusv(gl11Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl11PixelStoref(gl11Context* glc, GLenum pname, GLfloat param);
void gl11PixelStorei(gl11Context* glc, GLenum pname, GLint param);
void gl11PixelTransferf(gl11Context* glc, GLenum pname, GLfloat param);
void gl11PixelTransferi(gl11Context* glc, GLenum pname, GLint param);
void gl11PixelZoom(gl11Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl11PointSize(gl11Context* glc, GLfloat size);
void gl11PolygonMode(gl11Context* glc, GLenum face, GLenum mode);
void gl11PolygonStipple(gl11Context* glc, GLubyte* mask);
void gl11PushAttrib(gl11Context* glc, GLbitfield mask);
void gl11PopAttrib(gl11Context* glc);
void gl11PushMatrix(gl11Context* glc);
void gl11PopMatrix(gl11Context* glc);
void gl11PushName(gl11Context* glc, GLuint name);
void gl11PopName(gl11Context* glc);
void gl11RasterPos2d(gl11Context* glc, GLdouble x, GLdouble y);
void gl11RasterPos2f(gl11Context* glc, GLfloat x, GLfloat y);
void gl11RasterPos2i(gl11Context* glc, GLint x, GLint y);
void gl11RasterPos2s(gl11Context* glc, GLshort x, GLshort y);
void gl11RasterPos3d(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl11RasterPos3f(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl11RasterPos3i(gl11Context* glc, GLint x, GLint y, GLint z);
void gl11RasterPos3s(gl11Context* glc, GLshort x, GLshort y, GLshort z);
void gl11RasterPos4d(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl11RasterPos4f(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl11RasterPos4i(gl11Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl11RasterPos4s(gl11Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl11RasterPos2dv(gl11Context* glc, GLdouble* v);
void gl11RasterPos2fv(gl11Context* glc, GLfloat* v);
void gl11RasterPos2iv(gl11Context* glc, GLint* v);
void gl11RasterPos2sv(gl11Context* glc, GLshort* v);
void gl11RasterPos3dv(gl11Context* glc, GLdouble* v);
void gl11RasterPos3fv(gl11Context* glc, GLfloat* v);
void gl11RasterPos3iv(gl11Context* glc, GLint* v);
void gl11RasterPos3sv(gl11Context* glc, GLshort* v);
void gl11RasterPos4dv(gl11Context* glc, GLdouble* v);
void gl11RasterPos4fv(gl11Context* glc, GLfloat* v);
void gl11RasterPos4iv(gl11Context* glc, GLint* v);
void gl11RasterPos4sv(gl11Context* glc, GLshort* v);
void gl11ReadBuffer(gl11Context* glc, GLenum mode);
void gl11ReadPixels(gl11Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl11Rectd(gl11Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl11Rectf(gl11Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl11Recti(gl11Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl11Rects(gl11Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl11Rectdv(gl11Context* glc, GLdouble* v1, GLdouble* v2);
void gl11Rectfv(gl11Context* glc, GLfloat* v1, GLfloat* v2);
void gl11Rectiv(gl11Context* glc, GLint* v1, GLint* v2);
void gl11Rectsv(gl11Context* glc, GLshort* v1, GLshort* v2);
GLint gl11RenderMode(gl11Context* glc, GLenum mode);
void gl11Rotated(gl11Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl11Rotatef(gl11Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl11Scaled(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl11Scalef(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl11Scissor(gl11Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl11SelectBuffer(gl11Context* glc, GLsizei size, GLuint* buffer);
void gl11ShadeModel(gl11Context* glc, GLenum mode);
void gl11StencilFunc(gl11Context* glc, GLenum func, GLint ref, GLuint mask);
void gl11StencilMask(gl11Context* glc, GLuint mask);
void gl11StencilOp(gl11Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl11TexCoord1d(gl11Context* glc, GLdouble s);
void gl11TexCoord1f(gl11Context* glc, GLfloat s);
void gl11TexCoord1i(gl11Context* glc, GLint s);
void gl11TexCoord1s(gl11Context* glc, GLshort s);
void gl11TexCoord2d(gl11Context* glc, GLdouble s, GLdouble t);
void gl11TexCoord2f(gl11Context* glc, GLfloat s, GLfloat t);
void gl11TexCoord2i(gl11Context* glc, GLint s, GLint t);
void gl11TexCoord2s(gl11Context* glc, GLshort s, GLshort t);
void gl11TexCoord3d(gl11Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl11TexCoord3f(gl11Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl11TexCoord3i(gl11Context* glc, GLint s, GLint t, GLint r);
void gl11TexCoord3s(gl11Context* glc, GLshort s, GLshort t, GLshort r);
void gl11TexCoord4d(gl11Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl11TexCoord4f(gl11Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl11TexCoord4i(gl11Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl11TexCoord4s(gl11Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl11TexCoord1dv(gl11Context* glc, GLdouble* v);
void gl11TexCoord1fv(gl11Context* glc, GLfloat* v);
void gl11TexCoord1iv(gl11Context* glc, GLint* v);
void gl11TexCoord1sv(gl11Context* glc, GLshort* v);
void gl11TexCoord2dv(gl11Context* glc, GLdouble* v);
void gl11TexCoord2fv(gl11Context* glc, GLfloat* v);
void gl11TexCoord2iv(gl11Context* glc, GLint* v);
void gl11TexCoord2sv(gl11Context* glc, GLshort* v);
void gl11TexCoord3dv(gl11Context* glc, GLdouble* v);
void gl11TexCoord3fv(gl11Context* glc, GLfloat* v);
void gl11TexCoord3iv(gl11Context* glc, GLint* v);
void gl11TexCoord3sv(gl11Context* glc, GLshort* v);
void gl11TexCoord4dv(gl11Context* glc, GLdouble* v);
void gl11TexCoord4fv(gl11Context* glc, GLfloat* v);
void gl11TexCoord4iv(gl11Context* glc, GLint* v);
void gl11TexCoord4sv(gl11Context* glc, GLshort* v);
void gl11TexEnvf(gl11Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl11TexEnvi(gl11Context* glc, GLenum target, GLenum pname, GLint param);
void gl11TexEnvfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11TexEnviv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11TexGend(gl11Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl11TexGenf(gl11Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl11TexGeni(gl11Context* glc, GLenum coord, GLenum pname, GLint param);
void gl11TexGendv(gl11Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl11TexGenfv(gl11Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl11TexGeniv(gl11Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl11TexImage1D(gl11Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl11TexImage2D(gl11Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl11TexParameterf(gl11Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl11TexParameteri(gl11Context* glc, GLenum target, GLenum pname, GLint param);
void gl11TexParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11TexParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11Translated(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl11Translatef(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl11Vertex2s(gl11Context* glc, GLshort x, GLshort y);
void gl11Vertex2i(gl11Context* glc, GLint x, GLint y);
void gl11Vertex2f(gl11Context* glc, GLfloat x, GLfloat y);
void gl11Vertex2d(gl11Context* glc, GLdouble x, GLdouble y);
void gl11Vertex3s(gl11Context* glc, GLshort x, GLshort y, GLshort z);
void gl11Vertex3i(gl11Context* glc, GLint x, GLint y, GLint z);
void gl11Vertex3f(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl11Vertex3d(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl11Vertex4s(gl11Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl11Vertex4i(gl11Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl11Vertex4f(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl11Vertex4d(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl11Viewport(gl11Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl11GetConvolutionParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11GetConvolutionParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl11AreTexturesResident(gl11Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl11ArrayElement(gl11Context* glc, GLint i);
void gl11DrawArrays(gl11Context* glc, GLenum mode, GLint first, GLsizei count);
void gl11DrawElements(gl11Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl11GetPointerv(gl11Context* glc, GLenum pname, GLvoid* params);
void gl11PolygonOffset(gl11Context* glc, GLfloat factor, GLfloat units);
void gl11CopyTexImage1D(gl11Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl11CopyTexImage2D(gl11Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl11CopyTexSubImage1D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl11CopyTexSubImage2D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl11BindTexture(gl11Context* glc, GLenum target, GLuint texture);
void gl11DeleteTextures(gl11Context* glc, GLsizei n, GLuint* textures);
void gl11GenTextures(gl11Context* glc, GLsizei n, GLuint* textures);
GLboolean gl11IsTexture(gl11Context* glc, GLuint texture);
void gl11ColorPointer(gl11Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11EnableClientState(gl11Context* glc, GLenum cap);
void gl11DisableClientState(gl11Context* glc, GLenum cap);
void gl11Indexub(gl11Context* glc, GLubyte c);
void gl11Indexubv(gl11Context* glc, GLubyte* c);
void gl11InterleavedArrays(gl11Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl11NormalPointer(gl11Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11PushClientAttrib(gl11Context* glc, GLbitfield mask);
void gl11PrioritizeTextures(gl11Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl11PopClientAttrib(gl11Context* glc);
void gl11TexCoordPointer(gl11Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11TexSubImage1D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl11TexSubImage2D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl11VertexPointer(gl11Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11ColorTable(gl11Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl11ColorTableParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11ColorTableParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11ColorSubTable(gl11Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl11ConvolutionFilter1D(gl11Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl11ConvolutionFilter2D(gl11Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl11ConvolutionParameterf(gl11Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl11ConvolutionParameteri(gl11Context* glc, GLenum target, GLenum pname, GLint params);
void gl11CopyColorTable(gl11Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl11CopyColorSubTable(gl11Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl11CopyConvolutionFilter1D(gl11Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl11CopyConvolutionFilter2D(gl11Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl11GetColorTable(gl11Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* table);
void gl11GetColorTableParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11GetColorTableParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11GetConvolutionFilter(gl11Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* image);
void gl11GetHistogram(gl11Context* glc, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
void gl11GetHistogramParameterfv(gl11Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl11GetHistogramParameteriv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
void gl11GetSeparableFilter(gl11Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
void gl11Histogram(gl11Context* glc, GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void gl11Minmax(gl11Context* glc, GLenum target, GLenum internalformat, GLboolean sink);
void gl11MultiTexCoord1s(gl11Context* glc, GLenum target, GLshort s);
void gl11MultiTexCoord1i(gl11Context* glc, GLenum target, GLint s);
void gl11MultiTexCoord1f(gl11Context* glc, GLenum target, GLfloat s);
void gl11MultiTexCoord1d(gl11Context* glc, GLenum target, GLdouble s);
void gl11MultiTexCoord2s(gl11Context* glc, GLenum target, GLshort s, GLshort t);
void gl11MultiTexCoord2i(gl11Context* glc, GLenum target, GLint s, GLint t);
void gl11MultiTexCoord2f(gl11Context* glc, GLenum target, GLfloat s, GLfloat t);
void gl11MultiTexCoord2d(gl11Context* glc, GLenum target, GLdouble s, GLdouble t);
void gl11MultiTexCoord3s(gl11Context* glc, GLenum target, GLshort s, GLshort t, GLshort r);
void gl11MultiTexCoord3i(gl11Context* glc, GLenum target, GLint s, GLint t, GLint r);
void gl11MultiTexCoord3f(gl11Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl11MultiTexCoord3d(gl11Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl11MultiTexCoord4s(gl11Context* glc, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl11MultiTexCoord4i(gl11Context* glc, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl11MultiTexCoord4f(gl11Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl11MultiTexCoord4d(gl11Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl11MultiTexCoord1sv(gl11Context* glc, GLenum target, GLshort* v);
void gl11MultiTexCoord1iv(gl11Context* glc, GLenum target, GLint* v);
void gl11MultiTexCoord1fv(gl11Context* glc, GLenum target, GLfloat* v);
void gl11MultiTexCoord1dv(gl11Context* glc, GLenum target, GLdouble* v);
void gl11MultiTexCoord2sv(gl11Context* glc, GLenum target, GLshort* v);
void gl11MultiTexCoord2iv(gl11Context* glc, GLenum target, GLint* v);
void gl11MultiTexCoord2fv(gl11Context* glc, GLenum target, GLfloat* v);
void gl11MultiTexCoord2dv(gl11Context* glc, GLenum target, GLdouble* v);
void gl11MultiTexCoord3sv(gl11Context* glc, GLenum target, GLshort* v);
void gl11MultiTexCoord3iv(gl11Context* glc, GLenum target, GLint* v);
void gl11MultiTexCoord3fv(gl11Context* glc, GLenum target, GLfloat* v);
void gl11MultiTexCoord3dv(gl11Context* glc, GLenum target, GLdouble* v);
void gl11MultiTexCoord4sv(gl11Context* glc, GLenum target, GLshort* v);
void gl11MultiTexCoord4iv(gl11Context* glc, GLenum target, GLint* v);
void gl11MultiTexCoord4fv(gl11Context* glc, GLenum target, GLfloat* v);
void gl11MultiTexCoord4dv(gl11Context* glc, GLenum target, GLdouble* v);
void gl11ResetHistogram(gl11Context* glc, GLenum target);
void gl11ResetMinmax(gl11Context* glc, GLenum target);
void gl11SeparableFilter2D(gl11Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
void gl11BlendColor(gl11Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl11BlendEquation(gl11Context* glc, GLenum mode);
void gl11CopyTexSubImage3D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl11DrawRangeElements(gl11Context* glc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
void gl11TexImage3D(gl11Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl11TexSubImage3D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl11ActiveTexture(gl11Context* glc, GLenum texture);
void gl11ClientActiveTexture(gl11Context* glc, GLenum texture);
void gl11CompressedTexImage1D(gl11Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl11CompressedTexImage2D(gl11Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl11CompressedTexImage3D(gl11Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl11CompressedTexSubImage1D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl11CompressedTexSubImage2D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl11CompressedTexSubImage3D(gl11Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl11GetCompressedTexImage(gl11Context* glc, GLenum target, GLint lod, GLvoid* img);
void gl11LoadTransposeMatrixd(gl11Context* glc, GLdouble* m);
void gl11LoadTransposeMatrixf(gl11Context* glc, GLdouble* m);
void gl11MultTransposeMatrixd(gl11Context* glc, GLdouble* m);
void gl11MultTransposeMatrixf(gl11Context* glc, GLfloat* m);
void gl11SampleCoverage(gl11Context* glc, GLclampf value, GLboolean invert);
void gl11BlendFuncSeparate(gl11Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl11FogCoordPointer(gl11Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11FogCoordd(gl11Context* glc, GLdouble coord);
void gl11FogCoordf(gl11Context* glc, GLfloat coord);
void gl11FogCoorddv(gl11Context* glc, GLdouble* coord);
void gl11FogCoordfv(gl11Context* glc, GLfloat* coord);
void gl11MultiDrawArrays(gl11Context* glc, GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
void gl11MultiDrawElements(gl11Context* glc, GLenum mode, GLsizei* count, GLenum type, GLvoid* indices, GLsizei primcount);
void gl11PointParameterf(gl11Context* glc, GLenum pname, GLfloat param);
void gl11PointParameteri(gl11Context* glc, GLenum pname, GLint param);
void gl11SecondaryColor3b(gl11Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl11SecondaryColor3s(gl11Context* glc, GLshort red, GLshort green, GLshort blue);
void gl11SecondaryColor3i(gl11Context* glc, GLint red, GLint green, GLint blue);
void gl11SecondaryColor3f(gl11Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl11SecondaryColor3d(gl11Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl11SecondaryColor3ub(gl11Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl11SecondaryColor3us(gl11Context* glc, GLushort red, GLushort green, GLushort blue);
void gl11SecondaryColor3ui(gl11Context* glc, GLuint red, GLuint green, GLuint blue);
void gl11SecondaryColor3bv(gl11Context* glc, GLbyte* v);
void gl11SecondaryColor3sv(gl11Context* glc, GLshort* v);
void gl11SecondaryColor3iv(gl11Context* glc, GLint* v);
void gl11SecondaryColor3fv(gl11Context* glc, GLfloat* v);
void gl11SecondaryColor3dv(gl11Context* glc, GLdouble* v);
void gl11SecondaryColor3ubv(gl11Context* glc, GLubyte* v);
void gl11SecondaryColor3usv(gl11Context* glc, GLushort* v);
void gl11SecondaryColor3uiv(gl11Context* glc, GLuint* v);
void gl11SecondaryColorPointer(gl11Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl11WindowPos2s(gl11Context* glc, GLshort x, GLshort y);
void gl11WindowPos2i(gl11Context* glc, GLint x, GLint y);
void gl11WindowPos2f(gl11Context* glc, GLfloat x, GLfloat y);
void gl11WindowPos2d(gl11Context* glc, GLdouble x, GLdouble y);
void gl11WindowPos3s(gl11Context* glc, GLshort x, GLshort y, GLshort z);
void gl11WindowPos3i(gl11Context* glc, GLint x, GLint y, GLint z);
void gl11WindowPos3f(gl11Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl11WindowPos3d(gl11Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl11WindowPos2sv(gl11Context* glc, GLshort* v);
void gl11WindowPos2iv(gl11Context* glc, GLint* v);
void gl11WindowPos2fv(gl11Context* glc, GLfloat* v);
void gl11WindowPos2dv(gl11Context* glc, GLdouble* v);
void gl11WindowPos3sv(gl11Context* glc, GLshort* v);
void gl11WindowPos3iv(gl11Context* glc, GLint* v);
void gl11WindowPos3fv(gl11Context* glc, GLfloat* v);
void gl11WindowPos3dv(gl11Context* glc, GLdouble* v);
void gl11BeginQuery(gl11Context* glc, GLenum target, GLuint id);
void gl11BindBuffer(gl11Context* glc, GLenum target, GLuint buffer);
void gl11BufferData(gl11Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl11BufferSubData(gl11Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl11DeleteBuffers(gl11Context* glc, GLsizei n, GLuint* buffers);
void gl11DeleteQueries(gl11Context* glc, GLsizei n, GLuint* ids);
void gl11GenBuffers(gl11Context* glc, GLsizei n, GLuint* buffers);
void gl11GenQueries(gl11Context* glc, GLsizei n, GLuint* ids);
void gl11GetBufferParameteriv(gl11Context* glc, GLenum target, GLenum value, GLint* data);
void gl11GetBufferPointerv(gl11Context* glc, GLenum target, GLenum pname, GLvoid* params);
void gl11GetBufferSubData(gl11Context* glc, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl11GetQueryObjectiv(gl11Context* glc, GLuint id, GLenum pname, GLint* params);
void gl11GetQueryObjectuiv(gl11Context* glc, GLuint id, GLenum pname, GLuint* params);
void gl11GetQueryiv(gl11Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl11IsBuffer(gl11Context* glc, GLuint buffer);
GLboolean gl11IsQuery(gl11Context* glc, GLuint id);
GLvoid* gl11MapBuffer(gl11Context* glc, GLenum target, GLenum access);
GLboolean gl11UnmapBuffer(gl11Context* glc, GLenum target);
void gl11AttachShader(gl11Context* glc, GLuint program, GLuint shader);
void gl11BindAttribLocation(gl11Context* glc, GLuint program, GLuint index, GLchar* name);
void gl11BlendEquationSeperate(gl11Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl11CompileShader(gl11Context* glc, GLuint shader);
GLuint gl11CreateProgram(gl11Context* glc);
GLuint gl11CreateShader(gl11Context* glc, GLenum shaderType);
void gl11DeleteProgram(gl11Context* glc, GLuint program);
void gl11DeleteShader(gl11Context* glc, GLuint shader);
void gl11DetachShader(gl11Context* glc, GLuint program, GLuint shader);
void gl11EnableVertexAttribArray(gl11Context* glc, GLuint index);
void gl11DisableVertexAttribArray(gl11Context* glc, GLuint index);
void gl11DrawBuffers(gl11Context* glc, GLsizei n, GLenum* bufs);
void gl11GetActiveAttrib(gl11Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl11GetActiveUniform(gl11Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl11GetAttachedShaders(gl11Context* glc, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
GLint gl11GetAttribLocation(gl11Context* glc, GLuint program, GLchar* name);
void gl11GetProgramiv(gl11Context* glc, GLuint program, GLenum pname, GLint* params);
void gl11GetProgramInfoLog(gl11Context* glc, GLuint program, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl11GetShaderiv(gl11Context* glc, GLuint program, GLenum pname, GLint* params);
void gl11GetShaderInfoLog(gl11Context* glc, GLuint shader, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl11GetShaderSource(gl11Context* glc, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl11GetUniformfv(gl11Context* glc, GLuint program, GLint location, GLfloat* params);
void gl11GetUniformiv(gl11Context* glc, GLuint program, GLint location, GLint* params);
GLint gl11GetUniformLocation(gl11Context* glc, GLuint program, GLchar* name);
void gl11GetVertexAttribdv(gl11Context* glc, GLuint index, GLenum pname, GLdouble* params);
void gl11GetVertexAttribfv(gl11Context* glc, GLuint index, GLenum pname, GLfloat* params);
void gl11GetVertexAttribiv(gl11Context* glc, GLuint index, GLenum pname, GLint* params);
void gl11GetVertexAttribPointerv(gl11Context* glc, GLuint index, GLenum pname, GLvoid* pointer);
GLboolean gl11IsProgram(gl11Context* glc, GLuint program);
GLboolean gl11IsShader(gl11Context* glc, GLuint shader);
void gl11LinkProgram(gl11Context* glc, GLuint program);
void gl11ShaderSource(gl11Context* glc, GLuint shader, GLsizei count, GLchar** string, GLint* length);
void gl11StencilFuncSeparate(gl11Context* glc, GLenum face, GLenum func, GLint ref, GLuint mask);
void gl11StencilMaskSeparate(gl11Context* glc, GLenum face, GLuint mask);
void gl11StencilOpSeparate(gl11Context* glc, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl11Uniform1f(gl11Context* glc, GLint location, GLfloat v0);
void gl11Uniform2f(gl11Context* glc, GLint location, GLfloat v0, GLfloat v1);
void gl11Uniform3f(gl11Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl11Uniform4f(gl11Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl11Uniform1i(gl11Context* glc, GLint location, GLint v0);
void gl11Uniform2i(gl11Context* glc, GLint location, GLint v0, GLint v1);
void gl11Uniform3i(gl11Context* glc, GLint location, GLint v0, GLint v1, GLint v2);
void gl11Uniform4i(gl11Context* glc, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl11Uniform1ui(gl11Context* glc, GLint location, GLuint v0);
void gl11Uniform2ui(gl11Context* glc, GLint location, GLuint v0, GLuint v1);
void gl11Uniform3ui(gl11Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2);
void gl11Uniform4ui(gl11Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void gl11Uniform1fv(gl11Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl11Uniform2fv(gl11Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl11Uniform3fv(gl11Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl11Uniform4fv(gl11Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl11Uniform1iv(gl11Context* glc, GLint location, GLsizei count, GLint* value);
void gl11Uniform2iv(gl11Context* glc, GLint location, GLsizei count, GLint* value);
void gl11Uniform3iv(gl11Context* glc, GLint location, GLsizei count, GLint* value);
void gl11Uniform4iv(gl11Context* glc, GLint location, GLsizei count, GLint* value);
void gl11Uniform1uiv(gl11Context* glc, GLint location, GLsizei count, GLuint* value);
void gl11Uniform2uiv(gl11Context* glc, GLint location, GLsizei count, GLuint* value);
void gl11Uniform3uiv(gl11Context* glc, GLint location, GLsizei count, GLuint* value);
void gl11Uniform4uiv(gl11Context* glc, GLint location, GLsizei count, GLuint* value);
void gl11UseProgram(gl11Context* glc, GLuint program);
void gl11ValidateProgram(gl11Context* glc, GLuint program);
void gl11VertexAttribPointer(gl11Context* glc, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
void gl11VertexAttrib1f(gl11Context* glc, GLuint index, GLfloat v0);
void gl11VertexAttrib1s(gl11Context* glc, GLuint index, GLshort v0);
void gl11VertexAttrib1d(gl11Context* glc, GLuint index, GLdouble v0);
void gl11VertexAttrib2f(gl11Context* glc, GLuint index, GLfloat v0, GLfloat v1);
void gl11VertexAttrib2s(gl11Context* glc, GLuint index, GLshort v0, GLshort v1);
void gl11VertexAttrib2d(gl11Context* glc, GLuint index, GLdouble v0, GLdouble v1);
void gl11VertexAttrib3f(gl11Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2);
void gl11VertexAttrib3s(gl11Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2);
void gl11VertexAttrib3d(gl11Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
void gl11VertexAttrib4f(gl11Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl11VertexAttrib4s(gl11Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2, GLshort v3);
void gl11VertexAttrib4d(gl11Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void gl11VertexAttrib4Nuv(gl11Context* glc, GLuint index, GLubyte v0, GLubyte v1, GLubyte v2, GLubyte v3);
void gl11VertexAttrib1fv(gl11Context* glc, GLuint index, GLfloat* v);
void gl11VertexAttrib1sv(gl11Context* glc, GLuint index, GLshort* v);
void gl11VertexAttrib1dv(gl11Context* glc, GLuint index, GLdouble* v);
void gl11VertexAttrib2fv(gl11Context* glc, GLuint index, GLfloat* v);
void gl11VertexAttrib2sv(gl11Context* glc, GLuint index, GLshort* v);
void gl11VertexAttrib2dv(gl11Context* glc, GLuint index, GLdouble* v);
void gl11VertexAttrib3fv(gl11Context* glc, GLuint index, GLfloat* v);
void gl11VertexAttrib3sv(gl11Context* glc, GLuint index, GLshort* v);
void gl11VertexAttrib3dv(gl11Context* glc, GLuint index, GLdouble* v);
void gl11VertexAttrib4fv(gl11Context* glc, GLuint index, GLfloat* v);
void gl11VertexAttrib4sv(gl11Context* glc, GLuint index, GLshort* v);
void gl11VertexAttrib4dv(gl11Context* glc, GLuint index, GLdouble* v);
void gl11VertexAttrib4iv(gl11Context* glc, GLuint index, GLint* v);
void gl11VertexAttrib4bv(gl11Context* glc, GLuint index, GLbyte* v);
void gl11VertexAttrib4ubv(gl11Context* glc, GLuint index, GLubyte* v);
void gl11VertexAttrib4usv(gl11Context* glc, GLuint index, GLushort* v);
void gl11VertexAttrib4uiv(gl11Context* glc, GLuint index, GLuint* v);
void gl11VertexAttrib4Nbv(gl11Context* glc, GLuint index, GLbyte* v);
void gl11VertexAttrib4Nsv(gl11Context* glc, GLuint index, GLshort* v);
void gl11VertexAttrib4Niv(gl11Context* glc, GLuint index, GLint* v);
void gl11VertexAttrib4Nubv(gl11Context* glc, GLuint index, GLubyte* v);
void gl11VertexAttrib4Nusv(gl11Context* glc, GLuint index, GLushort* v);
void gl11VertexAttrib4Nuiv(gl11Context* glc, GLuint index, GLuint* v);
void gl11UniformMatrix2fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix3fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix4fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix2x3fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix3x2fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix2x4fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix4x2fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix3x4fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl11UniformMatrix4x3fv(gl11Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
