// Copyright 2012 Lightpoke. All rights reserved.
// This source code is subject to the terms and
// conditions defined in the "License.txt" file.

#include <stdbool.h>
#include <stdlib.h>
#include <stddef.h>
#include <stdint.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;

typedef void(*gl10PAccum)(GLenum, GLfloat);
typedef void(*gl10PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl10PBegin)(GLenum);
typedef void(*gl10PEnd)();
typedef void(*gl10PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl10PBlendFunc)(GLenum, GLenum);
typedef void(*gl10PCallList)(GLuint);
typedef void(*gl10PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl10PClear)(GLbitfield);
typedef void(*gl10PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl10PClearDepth)(GLclampd);
typedef void(*gl10PClearIndex)(GLfloat);
typedef void(*gl10PClearStencil)(GLint);
typedef void(*gl10PClipPlane)(GLenum, GLdouble*);
typedef void(*gl10PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl10PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PColor3i)(GLint, GLint, GLint);
typedef void(*gl10PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl10PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl10PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl10PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl10PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl10PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl10PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl10PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl10PColor3bv)(GLbyte*);
typedef void(*gl10PColor3dv)(GLdouble*);
typedef void(*gl10PColor3fv)(GLfloat*);
typedef void(*gl10PColor3iv)(GLint*);
typedef void(*gl10PColor3sv)(GLshort*);
typedef void(*gl10PColor3ubv)(GLubyte*);
typedef void(*gl10PColor3uiv)(GLuint*);
typedef void(*gl10PColor3usv)(GLushort*);
typedef void(*gl10PColor4bv)(GLbyte*);
typedef void(*gl10PColor4dv)(GLdouble*);
typedef void(*gl10PColor4fv)(GLfloat*);
typedef void(*gl10PColor4iv)(GLint*);
typedef void(*gl10PColor4sv)(GLshort*);
typedef void(*gl10PColor4ubv)(GLubyte*);
typedef void(*gl10PColor4uiv)(GLuint*);
typedef void(*gl10PColor4usv)(GLushort*);
typedef void(*gl10PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl10PColorMaterial)(GLenum, GLenum);
typedef void(*gl10PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl10PCullFace)(GLenum);
typedef void(*gl10PDeleteLists)(GLuint, GLsizei);
typedef void(*gl10PDepthFunc)(GLenum);
typedef void(*gl10PDepthMask)(GLboolean);
typedef void(*gl10PDepthRange)(GLclampd, GLclampd);
typedef void(*gl10PEnable)(GLenum);
typedef void(*gl10PDisable)(GLenum);
typedef void(*gl10PDrawBuffer)(GLenum);
typedef void(*gl10PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PEdgeFlag)(GLboolean);
typedef void(*gl10PEdgeFlagv)(GLboolean*);
typedef void(*gl10PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl10PEvalCoord1d)(GLdouble);
typedef void(*gl10PEvalCoord1f)(GLfloat);
typedef void(*gl10PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl10PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl10PEvalCoord1dv)(GLdouble*);
typedef void(*gl10PEvalCoord1fv)(GLfloat*);
typedef void(*gl10PEvalCoord2dv)(GLdouble*);
typedef void(*gl10PEvalCoord2fv)(GLfloat*);
typedef void(*gl10PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl10PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl10PEvalPoint1)(GLint);
typedef void(*gl10PEvalPoint2)(GLint, GLint);
typedef void(*gl10PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl10PFinish)();
typedef void(*gl10PFlush)();
typedef void(*gl10PFogf)(GLenum, GLfloat);
typedef void(*gl10PFogi)(GLenum, GLint);
typedef void(*gl10PFogfv)(GLenum, GLfloat*);
typedef void(*gl10PFogiv)(GLenum, GLint*);
typedef void(*gl10PFrontFace)(GLenum);
typedef void(*gl10PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl10PGenLists)(GLsizei);
typedef void(*gl10PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl10PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl10PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl10PGetIntegerv)(GLenum, GLint*);
typedef void(*gl10PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl10PGetError)();
typedef void(*gl10PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl10PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl10PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl10PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl10PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl10PGetString)(GLenum);
typedef void(*gl10PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl10PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl10PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl10PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl10PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PHint)(GLenum, GLenum);
typedef void(*gl10PIndexd)(GLdouble);
typedef void(*gl10PIndexf)(GLfloat);
typedef void(*gl10PIndexi)(GLint);
typedef void(*gl10PIndexs)(GLshort);
typedef void(*gl10PIndexdv)(GLdouble*);
typedef void(*gl10PIndexfv)(GLfloat*);
typedef void(*gl10PIndexiv)(GLint*);
typedef void(*gl10PIndexsv)(GLshort*);
typedef void(*gl10PIndexMask)(GLuint);
typedef void(*gl10PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl10PInitNames)();
typedef void(*gl10PIsEnabled)(GLenum);
typedef GLboolean(*gl10PIsList)(GLuint);
typedef void(*gl10PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PLighti)(GLenum, GLenum, GLint);
typedef void(*gl10PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl10PLightModelf)(GLenum, GLfloat);
typedef void(*gl10PLightModeli)(GLenum, GLint);
typedef void(*gl10PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl10PLightModeliv)(GLenum, GLint*);
typedef void(*gl10PLineStipple)(GLint, GLushort);
typedef void(*gl10PLineWidth)(GLfloat);
typedef void(*gl10PListBase)(GLuint);
typedef void(*gl10PLoadIdentity)();
typedef void(*gl10PLoadMatrixd)(GLdouble*);
typedef void(*gl10PLoadMatrixf)(GLfloat*);
typedef void(*gl10PLoadName)(GLuint);
typedef void(*gl10PLogicOp)(GLenum);
typedef void(*gl10PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl10PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl10PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl10PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl10PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl10PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl10PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl10PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl10PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl10PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl10PMatrixMode)(GLenum);
typedef void(*gl10PMultMatrixd)(GLdouble*);
typedef void(*gl10PMultMatrixf)(GLfloat*);
typedef void(*gl10PNewList)(GLuint, GLenum);
typedef void(*gl10PEndList)();
typedef void(*gl10PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl10PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PNormal3i)(GLint, GLint, GLint);
typedef void(*gl10PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PNormal3bv)(GLbyte*);
typedef void(*gl10PNormal3dv)(GLdouble*);
typedef void(*gl10PNormal3fv)(GLfloat*);
typedef void(*gl10PNormal3iv)(GLint*);
typedef void(*gl10PNormal3sv)(GLshort*);
typedef void(*gl10POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PPassThrough)(GLfloat);
typedef void(*gl10PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl10PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl10PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl10PPixelStoref)(GLenum, GLfloat);
typedef void(*gl10PPixelStorei)(GLenum, GLint);
typedef void(*gl10PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl10PPixelTransferi)(GLenum, GLint);
typedef void(*gl10PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl10PPointSize)(GLfloat);
typedef void(*gl10PPolygonMode)(GLenum, GLenum);
typedef void(*gl10PPolygonStipple)(GLubyte*);
typedef void(*gl10PPushAttrib)(GLbitfield);
typedef void(*gl10PPopAttrib)();
typedef void(*gl10PPushMatrix)();
typedef void(*gl10PPopMatrix)();
typedef void(*gl10PPushName)(GLuint);
typedef void(*gl10PPopName)();
typedef void(*gl10PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl10PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl10PRasterPos2i)(GLint, GLint);
typedef void(*gl10PRasterPos2s)(GLshort, GLshort);
typedef void(*gl10PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl10PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl10PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PRasterPos2dv)(GLdouble*);
typedef void(*gl10PRasterPos2fv)(GLfloat*);
typedef void(*gl10PRasterPos2iv)(GLint*);
typedef void(*gl10PRasterPos2sv)(GLshort*);
typedef void(*gl10PRasterPos3dv)(GLdouble*);
typedef void(*gl10PRasterPos3fv)(GLfloat*);
typedef void(*gl10PRasterPos3iv)(GLint*);
typedef void(*gl10PRasterPos3sv)(GLshort*);
typedef void(*gl10PRasterPos4dv)(GLdouble*);
typedef void(*gl10PRasterPos4fv)(GLfloat*);
typedef void(*gl10PRasterPos4iv)(GLint*);
typedef void(*gl10PRasterPos4sv)(GLshort*);
typedef void(*gl10PReadBuffer)(GLenum);
typedef void(*gl10PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl10PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl10PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl10PRectiv)(GLint*, GLint*);
typedef void(*gl10PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl10PRenderMode)(GLenum);
typedef void(*gl10PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl10PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl10PShadeModel)(GLenum);
typedef void(*gl10PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl10PStencilMask)(GLuint);
typedef void(*gl10PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl10PTexCoord1d)(GLdouble);
typedef void(*gl10PTexCoord1f)(GLfloat);
typedef void(*gl10PTexCoord1i)(GLint);
typedef void(*gl10PTexCoord1s)(GLshort);
typedef void(*gl10PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl10PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl10PTexCoord2i)(GLint, GLint);
typedef void(*gl10PTexCoord2s)(GLshort, GLshort);
typedef void(*gl10PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl10PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl10PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PTexCoord1dv)(GLdouble*);
typedef void(*gl10PTexCoord1fv)(GLfloat*);
typedef void(*gl10PTexCoord1iv)(GLint*);
typedef void(*gl10PTexCoord1sv)(GLshort*);
typedef void(*gl10PTexCoord2dv)(GLdouble*);
typedef void(*gl10PTexCoord2fv)(GLfloat*);
typedef void(*gl10PTexCoord2iv)(GLint*);
typedef void(*gl10PTexCoord2sv)(GLshort*);
typedef void(*gl10PTexCoord3dv)(GLdouble*);
typedef void(*gl10PTexCoord3fv)(GLfloat*);
typedef void(*gl10PTexCoord3iv)(GLint*);
typedef void(*gl10PTexCoord3sv)(GLshort*);
typedef void(*gl10PTexCoord4dv)(GLdouble*);
typedef void(*gl10PTexCoord4fv)(GLfloat*);
typedef void(*gl10PTexCoord4iv)(GLint*);
typedef void(*gl10PTexCoord4sv)(GLshort*);
typedef void(*gl10PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl10PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl10PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl10PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl10PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl10PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl10PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl10PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl10PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl10PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PVertex2s)(GLshort, GLshort);
typedef void(*gl10PVertex2i)(GLint, GLint);
typedef void(*gl10PVertex2f)(GLfloat, GLfloat);
typedef void(*gl10PVertex2d)(GLdouble, GLdouble);
typedef void(*gl10PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PVertex3i)(GLint, GLint, GLint);
typedef void(*gl10PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl10PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl10PGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl10PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl10PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl10PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl10PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl10PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl10PGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl10PGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl10PGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
typedef void(*gl10PGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl10PGetHistogramParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
typedef void(*gl10PHistogram)(GLenum, GLsizei, GLenum, GLboolean);
typedef void(*gl10PMinmax)(GLenum, GLenum, GLboolean);
typedef void(*gl10PMultiTexCoord1s)(GLenum, GLshort);
typedef void(*gl10PMultiTexCoord1i)(GLenum, GLint);
typedef void(*gl10PMultiTexCoord1f)(GLenum, GLfloat);
typedef void(*gl10PMultiTexCoord1d)(GLenum, GLdouble);
typedef void(*gl10PMultiTexCoord2s)(GLenum, GLshort, GLshort);
typedef void(*gl10PMultiTexCoord2i)(GLenum, GLint, GLint);
typedef void(*gl10PMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
typedef void(*gl10PMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
typedef void(*gl10PMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
typedef void(*gl10PMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
typedef void(*gl10PMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl10PMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PMultiTexCoord1sv)(GLenum, GLshort*);
typedef void(*gl10PMultiTexCoord1iv)(GLenum, GLint*);
typedef void(*gl10PMultiTexCoord1fv)(GLenum, GLfloat*);
typedef void(*gl10PMultiTexCoord1dv)(GLenum, GLdouble*);
typedef void(*gl10PMultiTexCoord2sv)(GLenum, GLshort*);
typedef void(*gl10PMultiTexCoord2iv)(GLenum, GLint*);
typedef void(*gl10PMultiTexCoord2fv)(GLenum, GLfloat*);
typedef void(*gl10PMultiTexCoord2dv)(GLenum, GLdouble*);
typedef void(*gl10PMultiTexCoord3sv)(GLenum, GLshort*);
typedef void(*gl10PMultiTexCoord3iv)(GLenum, GLint*);
typedef void(*gl10PMultiTexCoord3fv)(GLenum, GLfloat*);
typedef void(*gl10PMultiTexCoord3dv)(GLenum, GLdouble*);
typedef void(*gl10PMultiTexCoord4sv)(GLenum, GLshort*);
typedef void(*gl10PMultiTexCoord4iv)(GLenum, GLint*);
typedef void(*gl10PMultiTexCoord4fv)(GLenum, GLfloat*);
typedef void(*gl10PMultiTexCoord4dv)(GLenum, GLdouble*);
typedef void(*gl10PResetHistogram)(GLenum);
typedef void(*gl10PResetMinmax)(GLenum);
typedef void(*gl10PSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*);
typedef GLboolean(*gl10PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl10PArrayElement)(GLint);
typedef void(*gl10PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl10PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl10PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl10PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl10PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl10PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl10PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl10PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl10PBindTexture)(GLenum, GLuint);
typedef void(*gl10PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl10PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl10PIsTexture)(GLuint);
typedef void(*gl10PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PEnableClientState)(GLenum);
typedef void(*gl10PDisableClientState)(GLenum);
typedef void(*gl10PIndexub)(GLubyte);
typedef void(*gl10PIndexubv)(GLubyte*);
typedef void(*gl10PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl10PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl10PPushClientAttrib)(GLbitfield);
typedef void(*gl10PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl10PPopClientAttrib)();
typedef void(*gl10PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl10PBlendEquation)(GLenum);
typedef void(*gl10PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl10PDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
typedef void(*gl10PTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl10PTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl10PActiveTexture)(GLenum);
typedef void(*gl10PClientActiveTexture)(GLenum);
typedef void(*gl10PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl10PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl10PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl10PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PGetCompressedTexImage)(GLenum, GLint, GLvoid*);
typedef void(*gl10PLoadTransposeMatrixd)(GLdouble*);
typedef void(*gl10PLoadTransposeMatrixf)(GLdouble*);
typedef void(*gl10PMultTransposeMatrixd)(GLdouble*);
typedef void(*gl10PMultTransposeMatrixf)(GLfloat*);
typedef void(*gl10PSampleCoverage)(GLclampf, GLboolean);
typedef void(*gl10PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl10PFogCoordPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl10PFogCoordd)(GLdouble);
typedef void(*gl10PFogCoordf)(GLfloat);
typedef void(*gl10PFogCoorddv)(GLdouble*);
typedef void(*gl10PFogCoordfv)(GLfloat*);
typedef void(*gl10PMultiDrawArrays)(GLenum, GLint*, GLsizei*, GLsizei);
typedef void(*gl10PMultiDrawElements)(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei);
typedef void(*gl10PPointParameterf)(GLenum, GLfloat);
typedef void(*gl10PPointParameteri)(GLenum, GLint);
typedef void(*gl10PSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl10PSecondaryColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PSecondaryColor3i)(GLint, GLint, GLint);
typedef void(*gl10PSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl10PSecondaryColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl10PSecondaryColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl10PSecondaryColor3bv)(GLbyte*);
typedef void(*gl10PSecondaryColor3sv)(GLshort*);
typedef void(*gl10PSecondaryColor3iv)(GLint*);
typedef void(*gl10PSecondaryColor3fv)(GLfloat*);
typedef void(*gl10PSecondaryColor3dv)(GLdouble*);
typedef void(*gl10PSecondaryColor3ubv)(GLubyte*);
typedef void(*gl10PSecondaryColor3usv)(GLushort*);
typedef void(*gl10PSecondaryColor3uiv)(GLuint*);
typedef void(*gl10PSecondaryColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl10PWindowPos2s)(GLshort, GLshort);
typedef void(*gl10PWindowPos2i)(GLint, GLint);
typedef void(*gl10PWindowPos2f)(GLfloat, GLfloat);
typedef void(*gl10PWindowPos2d)(GLdouble, GLdouble);
typedef void(*gl10PWindowPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl10PWindowPos3i)(GLint, GLint, GLint);
typedef void(*gl10PWindowPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl10PWindowPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl10PWindowPos2sv)(GLshort*);
typedef void(*gl10PWindowPos2iv)(GLint*);
typedef void(*gl10PWindowPos2fv)(GLfloat*);
typedef void(*gl10PWindowPos2dv)(GLdouble*);
typedef void(*gl10PWindowPos3sv)(GLshort*);
typedef void(*gl10PWindowPos3iv)(GLint*);
typedef void(*gl10PWindowPos3fv)(GLfloat*);
typedef void(*gl10PWindowPos3dv)(GLdouble*);
typedef void(*gl10PBeginQuery)(GLenum, GLuint);
typedef void(*gl10PBindBuffer)(GLenum, GLuint);
typedef void(*gl10PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl10PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl10PDeleteBuffers)(GLsizei, GLuint*);
typedef void(*gl10PDeleteQueries)(GLsizei, GLuint*);
typedef void(*gl10PGenBuffers)(GLsizei, GLuint*);
typedef void(*gl10PGenQueries)(GLsizei, GLuint*);
typedef void(*gl10PGetBufferParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl10PGetBufferPointerv)(GLenum, GLenum, GLvoid*);
typedef void(*gl10PGetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
typedef void(*gl10PGetQueryObjectiv)(GLuint, GLenum, GLint*);
typedef void(*gl10PGetQueryObjectuiv)(GLuint, GLenum, GLuint*);
typedef void(*gl10PGetQueryiv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl10PIsBuffer)(GLuint);
typedef GLboolean(*gl10PIsQuery)(GLuint);
typedef GLvoid*(*gl10PMapBuffer)(GLenum, GLenum);
typedef GLboolean(*gl10PUnmapBuffer)(GLenum);
typedef void(*gl10PAttachShader)(GLuint, GLuint);
typedef void(*gl10PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl10PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl10PCompileShader)(GLuint);
typedef GLuint(*gl10PCreateProgram)();
typedef GLuint(*gl10PCreateShader)(GLenum);
typedef void(*gl10PDeleteProgram)(GLuint);
typedef void(*gl10PDeleteShader)(GLuint);
typedef void(*gl10PDetachShader)(GLuint, GLuint);
typedef void(*gl10PEnableVertexAttribArray)(GLuint);
typedef void(*gl10PDisableVertexAttribArray)(GLuint);
typedef void(*gl10PDrawBuffers)(GLsizei, GLenum*);
typedef void(*gl10PGetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl10PGetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl10PGetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
typedef GLint(*gl10PGetAttribLocation)(GLuint, GLchar*);
typedef void(*gl10PGetProgramiv)(GLuint, GLenum, GLint*);
typedef void(*gl10PGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl10PGetShaderiv)(GLuint, GLenum, GLint*);
typedef void(*gl10PGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl10PGetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl10PGetUniformfv)(GLuint, GLint, GLfloat*);
typedef void(*gl10PGetUniformiv)(GLuint, GLint, GLint*);
typedef GLint(*gl10PGetUniformLocation)(GLuint, GLchar*);
typedef void(*gl10PGetVertexAttribdv)(GLuint, GLenum, GLdouble*);
typedef void(*gl10PGetVertexAttribfv)(GLuint, GLenum, GLfloat*);
typedef void(*gl10PGetVertexAttribiv)(GLuint, GLenum, GLint*);
typedef void(*gl10PGetVertexAttribPointerv)(GLuint, GLenum, GLvoid*);
typedef GLboolean(*gl10PIsProgram)(GLuint);
typedef GLboolean(*gl10PIsShader)(GLuint);
typedef void(*gl10PLinkProgram)(GLuint);
typedef void(*gl10PShaderSource)(GLuint, GLsizei, GLchar**, GLint*);
typedef void(*gl10PStencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
typedef void(*gl10PStencilMaskSeparate)(GLenum, GLuint);
typedef void(*gl10PStencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl10PUniform1f)(GLint, GLfloat);
typedef void(*gl10PUniform2f)(GLint, GLfloat, GLfloat);
typedef void(*gl10PUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PUniform1i)(GLint, GLint);
typedef void(*gl10PUniform2i)(GLint, GLint, GLint);
typedef void(*gl10PUniform3i)(GLint, GLint, GLint, GLint);
typedef void(*gl10PUniform4i)(GLint, GLint, GLint, GLint, GLint);
typedef void(*gl10PUniform1ui)(GLint, GLuint);
typedef void(*gl10PUniform2ui)(GLint, GLuint, GLuint);
typedef void(*gl10PUniform3ui)(GLint, GLuint, GLuint, GLuint);
typedef void(*gl10PUniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
typedef void(*gl10PUniform1fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl10PUniform2fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl10PUniform3fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl10PUniform4fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl10PUniform1iv)(GLint, GLsizei, GLint*);
typedef void(*gl10PUniform2iv)(GLint, GLsizei, GLint*);
typedef void(*gl10PUniform3iv)(GLint, GLsizei, GLint*);
typedef void(*gl10PUniform4iv)(GLint, GLsizei, GLint*);
typedef void(*gl10PUniform1uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl10PUniform2uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl10PUniform3uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl10PUniform4uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl10PUseProgram)(GLuint);
typedef void(*gl10PValidateProgram)(GLuint);
typedef void(*gl10PVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*);
typedef void(*gl10PVertexAttrib1f)(GLuint, GLfloat);
typedef void(*gl10PVertexAttrib1s)(GLuint, GLshort);
typedef void(*gl10PVertexAttrib1d)(GLuint, GLdouble);
typedef void(*gl10PVertexAttrib2f)(GLuint, GLfloat, GLfloat);
typedef void(*gl10PVertexAttrib2s)(GLuint, GLshort, GLshort);
typedef void(*gl10PVertexAttrib2d)(GLuint, GLdouble, GLdouble);
typedef void(*gl10PVertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PVertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
typedef void(*gl10PVertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PVertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl10PVertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl10PVertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl10PVertexAttrib4Nuv)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl10PVertexAttrib1fv)(GLuint, GLfloat*);
typedef void(*gl10PVertexAttrib1sv)(GLuint, GLshort*);
typedef void(*gl10PVertexAttrib1dv)(GLuint, GLdouble*);
typedef void(*gl10PVertexAttrib2fv)(GLuint, GLfloat*);
typedef void(*gl10PVertexAttrib2sv)(GLuint, GLshort*);
typedef void(*gl10PVertexAttrib2dv)(GLuint, GLdouble*);
typedef void(*gl10PVertexAttrib3fv)(GLuint, GLfloat*);
typedef void(*gl10PVertexAttrib3sv)(GLuint, GLshort*);
typedef void(*gl10PVertexAttrib3dv)(GLuint, GLdouble*);
typedef void(*gl10PVertexAttrib4fv)(GLuint, GLfloat*);
typedef void(*gl10PVertexAttrib4sv)(GLuint, GLshort*);
typedef void(*gl10PVertexAttrib4dv)(GLuint, GLdouble*);
typedef void(*gl10PVertexAttrib4iv)(GLuint, GLint*);
typedef void(*gl10PVertexAttrib4bv)(GLuint, GLbyte*);
typedef void(*gl10PVertexAttrib4ubv)(GLuint, GLubyte*);
typedef void(*gl10PVertexAttrib4usv)(GLuint, GLushort*);
typedef void(*gl10PVertexAttrib4uiv)(GLuint, GLuint*);
typedef void(*gl10PVertexAttrib4Nbv)(GLuint, GLbyte*);
typedef void(*gl10PVertexAttrib4Nsv)(GLuint, GLshort*);
typedef void(*gl10PVertexAttrib4Niv)(GLuint, GLint*);
typedef void(*gl10PVertexAttrib4Nubv)(GLuint, GLubyte*);
typedef void(*gl10PVertexAttrib4Nusv)(GLuint, GLushort*);
typedef void(*gl10PVertexAttrib4Nuiv)(GLuint, GLuint*);
typedef void(*gl10PUniformMatrix2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix2x3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix3x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix2x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix4x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix3x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl10PUniformMatrix4x3fv)(GLint, GLsizei, GLboolean, GLfloat*);

typedef struct {
    gl10PAccum fnAccum;
    gl10PAlphaFunc fnAlphaFunc;
    gl10PBegin fnBegin;
    gl10PEnd fnEnd;
    gl10PBitmap fnBitmap;
    gl10PBlendFunc fnBlendFunc;
    gl10PCallList fnCallList;
    gl10PCallLists fnCallLists;
    gl10PClear fnClear;
    gl10PClearAccum fnClearAccum;
    gl10PClearColor fnClearColor;
    gl10PClearDepth fnClearDepth;
    gl10PClearIndex fnClearIndex;
    gl10PClearStencil fnClearStencil;
    gl10PClipPlane fnClipPlane;
    gl10PColor3b fnColor3b;
    gl10PColor3d fnColor3d;
    gl10PColor3f fnColor3f;
    gl10PColor3i fnColor3i;
    gl10PColor3s fnColor3s;
    gl10PColor3ub fnColor3ub;
    gl10PColor3ui fnColor3ui;
    gl10PColor3us fnColor3us;
    gl10PColor4b fnColor4b;
    gl10PColor4d fnColor4d;
    gl10PColor4f fnColor4f;
    gl10PColor4i fnColor4i;
    gl10PColor4s fnColor4s;
    gl10PColor4ub fnColor4ub;
    gl10PColor4ui fnColor4ui;
    gl10PColor4us fnColor4us;
    gl10PColor3bv fnColor3bv;
    gl10PColor3dv fnColor3dv;
    gl10PColor3fv fnColor3fv;
    gl10PColor3iv fnColor3iv;
    gl10PColor3sv fnColor3sv;
    gl10PColor3ubv fnColor3ubv;
    gl10PColor3uiv fnColor3uiv;
    gl10PColor3usv fnColor3usv;
    gl10PColor4bv fnColor4bv;
    gl10PColor4dv fnColor4dv;
    gl10PColor4fv fnColor4fv;
    gl10PColor4iv fnColor4iv;
    gl10PColor4sv fnColor4sv;
    gl10PColor4ubv fnColor4ubv;
    gl10PColor4uiv fnColor4uiv;
    gl10PColor4usv fnColor4usv;
    gl10PColorMask fnColorMask;
    gl10PColorMaterial fnColorMaterial;
    gl10PCopyPixels fnCopyPixels;
    gl10PCullFace fnCullFace;
    gl10PDeleteLists fnDeleteLists;
    gl10PDepthFunc fnDepthFunc;
    gl10PDepthMask fnDepthMask;
    gl10PDepthRange fnDepthRange;
    gl10PEnable fnEnable;
    gl10PDisable fnDisable;
    gl10PDrawBuffer fnDrawBuffer;
    gl10PDrawPixels fnDrawPixels;
    gl10PEdgeFlag fnEdgeFlag;
    gl10PEdgeFlagv fnEdgeFlagv;
    gl10PEdgeFlagPointer fnEdgeFlagPointer;
    gl10PEvalCoord1d fnEvalCoord1d;
    gl10PEvalCoord1f fnEvalCoord1f;
    gl10PEvalCoord2d fnEvalCoord2d;
    gl10PEvalCoord2f fnEvalCoord2f;
    gl10PEvalCoord1dv fnEvalCoord1dv;
    gl10PEvalCoord1fv fnEvalCoord1fv;
    gl10PEvalCoord2dv fnEvalCoord2dv;
    gl10PEvalCoord2fv fnEvalCoord2fv;
    gl10PEvalMesh1 fnEvalMesh1;
    gl10PEvalMesh2 fnEvalMesh2;
    gl10PEvalPoint1 fnEvalPoint1;
    gl10PEvalPoint2 fnEvalPoint2;
    gl10PFeedbackBuffer fnFeedbackBuffer;
    gl10PFinish fnFinish;
    gl10PFlush fnFlush;
    gl10PFogf fnFogf;
    gl10PFogi fnFogi;
    gl10PFogfv fnFogfv;
    gl10PFogiv fnFogiv;
    gl10PFrontFace fnFrontFace;
    gl10PFrustum fnFrustum;
    gl10PGenLists fnGenLists;
    gl10PGetBooleanv fnGetBooleanv;
    gl10PGetDoublev fnGetDoublev;
    gl10PGetFloatv fnGetFloatv;
    gl10PGetIntegerv fnGetIntegerv;
    gl10PGetClipPlane fnGetClipPlane;
    gl10PGetError fnGetError;
    gl10PGetLightfv fnGetLightfv;
    gl10PGetLightiv fnGetLightiv;
    gl10PGetMapdv fnGetMapdv;
    gl10PGetMapfv fnGetMapfv;
    gl10PGetMapiv fnGetMapiv;
    gl10PGetMaterialfv fnGetMaterialfv;
    gl10PGetMaterialiv fnGetMaterialiv;
    gl10PGetPixelMapfv fnGetPixelMapfv;
    gl10PGetPixelMapuiv fnGetPixelMapuiv;
    gl10PGetPixelMapusv fnGetPixelMapusv;
    gl10PGetPolygonStipple fnGetPolygonStipple;
    gl10PGetString fnGetString;
    gl10PGetTexEnvfv fnGetTexEnvfv;
    gl10PGetTexEnviv fnGetTexEnviv;
    gl10PGetTexGendv fnGetTexGendv;
    gl10PGetTexGenfv fnGetTexGenfv;
    gl10PGetTexGeniv fnGetTexGeniv;
    gl10PGetTexImage fnGetTexImage;
    gl10PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl10PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl10PGetTexParameterfv fnGetTexParameterfv;
    gl10PGetTexParameteriv fnGetTexParameteriv;
    gl10PHint fnHint;
    gl10PIndexd fnIndexd;
    gl10PIndexf fnIndexf;
    gl10PIndexi fnIndexi;
    gl10PIndexs fnIndexs;
    gl10PIndexdv fnIndexdv;
    gl10PIndexfv fnIndexfv;
    gl10PIndexiv fnIndexiv;
    gl10PIndexsv fnIndexsv;
    gl10PIndexMask fnIndexMask;
    gl10PIndexPointer fnIndexPointer;
    gl10PInitNames fnInitNames;
    gl10PIsEnabled fnIsEnabled;
    gl10PIsList fnIsList;
    gl10PLightf fnLightf;
    gl10PLighti fnLighti;
    gl10PLightfv fnLightfv;
    gl10PLightiv fnLightiv;
    gl10PLightModelf fnLightModelf;
    gl10PLightModeli fnLightModeli;
    gl10PLightModelfv fnLightModelfv;
    gl10PLightModeliv fnLightModeliv;
    gl10PLineStipple fnLineStipple;
    gl10PLineWidth fnLineWidth;
    gl10PListBase fnListBase;
    gl10PLoadIdentity fnLoadIdentity;
    gl10PLoadMatrixd fnLoadMatrixd;
    gl10PLoadMatrixf fnLoadMatrixf;
    gl10PLoadName fnLoadName;
    gl10PLogicOp fnLogicOp;
    gl10PMap1d fnMap1d;
    gl10PMap1f fnMap1f;
    gl10PMap2d fnMap2d;
    gl10PMap2f fnMap2f;
    gl10PMapGrid1d fnMapGrid1d;
    gl10PMapGrid1f fnMapGrid1f;
    gl10PMapGrid2d fnMapGrid2d;
    gl10PMapGrid2f fnMapGrid2f;
    gl10PMaterialf fnMaterialf;
    gl10PMateriali fnMateriali;
    gl10PMaterialfv fnMaterialfv;
    gl10PMaterialiv fnMaterialiv;
    gl10PMatrixMode fnMatrixMode;
    gl10PMultMatrixd fnMultMatrixd;
    gl10PMultMatrixf fnMultMatrixf;
    gl10PNewList fnNewList;
    gl10PEndList fnEndList;
    gl10PNormal3b fnNormal3b;
    gl10PNormal3d fnNormal3d;
    gl10PNormal3f fnNormal3f;
    gl10PNormal3i fnNormal3i;
    gl10PNormal3s fnNormal3s;
    gl10PNormal3bv fnNormal3bv;
    gl10PNormal3dv fnNormal3dv;
    gl10PNormal3fv fnNormal3fv;
    gl10PNormal3iv fnNormal3iv;
    gl10PNormal3sv fnNormal3sv;
    gl10POrtho fnOrtho;
    gl10PPassThrough fnPassThrough;
    gl10PPixelMapfv fnPixelMapfv;
    gl10PPixelMapuiv fnPixelMapuiv;
    gl10PPixelMapusv fnPixelMapusv;
    gl10PPixelStoref fnPixelStoref;
    gl10PPixelStorei fnPixelStorei;
    gl10PPixelTransferf fnPixelTransferf;
    gl10PPixelTransferi fnPixelTransferi;
    gl10PPixelZoom fnPixelZoom;
    gl10PPointSize fnPointSize;
    gl10PPolygonMode fnPolygonMode;
    gl10PPolygonStipple fnPolygonStipple;
    gl10PPushAttrib fnPushAttrib;
    gl10PPopAttrib fnPopAttrib;
    gl10PPushMatrix fnPushMatrix;
    gl10PPopMatrix fnPopMatrix;
    gl10PPushName fnPushName;
    gl10PPopName fnPopName;
    gl10PRasterPos2d fnRasterPos2d;
    gl10PRasterPos2f fnRasterPos2f;
    gl10PRasterPos2i fnRasterPos2i;
    gl10PRasterPos2s fnRasterPos2s;
    gl10PRasterPos3d fnRasterPos3d;
    gl10PRasterPos3f fnRasterPos3f;
    gl10PRasterPos3i fnRasterPos3i;
    gl10PRasterPos3s fnRasterPos3s;
    gl10PRasterPos4d fnRasterPos4d;
    gl10PRasterPos4f fnRasterPos4f;
    gl10PRasterPos4i fnRasterPos4i;
    gl10PRasterPos4s fnRasterPos4s;
    gl10PRasterPos2dv fnRasterPos2dv;
    gl10PRasterPos2fv fnRasterPos2fv;
    gl10PRasterPos2iv fnRasterPos2iv;
    gl10PRasterPos2sv fnRasterPos2sv;
    gl10PRasterPos3dv fnRasterPos3dv;
    gl10PRasterPos3fv fnRasterPos3fv;
    gl10PRasterPos3iv fnRasterPos3iv;
    gl10PRasterPos3sv fnRasterPos3sv;
    gl10PRasterPos4dv fnRasterPos4dv;
    gl10PRasterPos4fv fnRasterPos4fv;
    gl10PRasterPos4iv fnRasterPos4iv;
    gl10PRasterPos4sv fnRasterPos4sv;
    gl10PReadBuffer fnReadBuffer;
    gl10PReadPixels fnReadPixels;
    gl10PRectd fnRectd;
    gl10PRectf fnRectf;
    gl10PRecti fnRecti;
    gl10PRects fnRects;
    gl10PRectdv fnRectdv;
    gl10PRectfv fnRectfv;
    gl10PRectiv fnRectiv;
    gl10PRectsv fnRectsv;
    gl10PRenderMode fnRenderMode;
    gl10PRotated fnRotated;
    gl10PRotatef fnRotatef;
    gl10PScaled fnScaled;
    gl10PScalef fnScalef;
    gl10PScissor fnScissor;
    gl10PSelectBuffer fnSelectBuffer;
    gl10PShadeModel fnShadeModel;
    gl10PStencilFunc fnStencilFunc;
    gl10PStencilMask fnStencilMask;
    gl10PStencilOp fnStencilOp;
    gl10PTexCoord1d fnTexCoord1d;
    gl10PTexCoord1f fnTexCoord1f;
    gl10PTexCoord1i fnTexCoord1i;
    gl10PTexCoord1s fnTexCoord1s;
    gl10PTexCoord2d fnTexCoord2d;
    gl10PTexCoord2f fnTexCoord2f;
    gl10PTexCoord2i fnTexCoord2i;
    gl10PTexCoord2s fnTexCoord2s;
    gl10PTexCoord3d fnTexCoord3d;
    gl10PTexCoord3f fnTexCoord3f;
    gl10PTexCoord3i fnTexCoord3i;
    gl10PTexCoord3s fnTexCoord3s;
    gl10PTexCoord4d fnTexCoord4d;
    gl10PTexCoord4f fnTexCoord4f;
    gl10PTexCoord4i fnTexCoord4i;
    gl10PTexCoord4s fnTexCoord4s;
    gl10PTexCoord1dv fnTexCoord1dv;
    gl10PTexCoord1fv fnTexCoord1fv;
    gl10PTexCoord1iv fnTexCoord1iv;
    gl10PTexCoord1sv fnTexCoord1sv;
    gl10PTexCoord2dv fnTexCoord2dv;
    gl10PTexCoord2fv fnTexCoord2fv;
    gl10PTexCoord2iv fnTexCoord2iv;
    gl10PTexCoord2sv fnTexCoord2sv;
    gl10PTexCoord3dv fnTexCoord3dv;
    gl10PTexCoord3fv fnTexCoord3fv;
    gl10PTexCoord3iv fnTexCoord3iv;
    gl10PTexCoord3sv fnTexCoord3sv;
    gl10PTexCoord4dv fnTexCoord4dv;
    gl10PTexCoord4fv fnTexCoord4fv;
    gl10PTexCoord4iv fnTexCoord4iv;
    gl10PTexCoord4sv fnTexCoord4sv;
    gl10PTexEnvf fnTexEnvf;
    gl10PTexEnvi fnTexEnvi;
    gl10PTexEnvfv fnTexEnvfv;
    gl10PTexEnviv fnTexEnviv;
    gl10PTexGend fnTexGend;
    gl10PTexGenf fnTexGenf;
    gl10PTexGeni fnTexGeni;
    gl10PTexGendv fnTexGendv;
    gl10PTexGenfv fnTexGenfv;
    gl10PTexGeniv fnTexGeniv;
    gl10PTexImage1D fnTexImage1D;
    gl10PTexImage2D fnTexImage2D;
    gl10PTexParameterf fnTexParameterf;
    gl10PTexParameteri fnTexParameteri;
    gl10PTexParameterfv fnTexParameterfv;
    gl10PTexParameteriv fnTexParameteriv;
    gl10PTranslated fnTranslated;
    gl10PTranslatef fnTranslatef;
    gl10PVertex2s fnVertex2s;
    gl10PVertex2i fnVertex2i;
    gl10PVertex2f fnVertex2f;
    gl10PVertex2d fnVertex2d;
    gl10PVertex3s fnVertex3s;
    gl10PVertex3i fnVertex3i;
    gl10PVertex3f fnVertex3f;
    gl10PVertex3d fnVertex3d;
    gl10PVertex4s fnVertex4s;
    gl10PVertex4i fnVertex4i;
    gl10PVertex4f fnVertex4f;
    gl10PVertex4d fnVertex4d;
    gl10PViewport fnViewport;
    gl10PGetConvolutionParameterfv fnGetConvolutionParameterfv;
    gl10PGetConvolutionParameteriv fnGetConvolutionParameteriv;
    gl10PColorTable fnColorTable;
    gl10PColorTableParameterfv fnColorTableParameterfv;
    gl10PColorTableParameteriv fnColorTableParameteriv;
    gl10PColorSubTable fnColorSubTable;
    gl10PConvolutionFilter1D fnConvolutionFilter1D;
    gl10PConvolutionFilter2D fnConvolutionFilter2D;
    gl10PConvolutionParameterf fnConvolutionParameterf;
    gl10PConvolutionParameteri fnConvolutionParameteri;
    gl10PCopyColorTable fnCopyColorTable;
    gl10PCopyColorSubTable fnCopyColorSubTable;
    gl10PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl10PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl10PGetColorTable fnGetColorTable;
    gl10PGetColorTableParameterfv fnGetColorTableParameterfv;
    gl10PGetColorTableParameteriv fnGetColorTableParameteriv;
    gl10PGetConvolutionFilter fnGetConvolutionFilter;
    gl10PGetHistogram fnGetHistogram;
    gl10PGetHistogramParameterfv fnGetHistogramParameterfv;
    gl10PGetHistogramParameteriv fnGetHistogramParameteriv;
    gl10PGetSeparableFilter fnGetSeparableFilter;
    gl10PHistogram fnHistogram;
    gl10PMinmax fnMinmax;
    gl10PMultiTexCoord1s fnMultiTexCoord1s;
    gl10PMultiTexCoord1i fnMultiTexCoord1i;
    gl10PMultiTexCoord1f fnMultiTexCoord1f;
    gl10PMultiTexCoord1d fnMultiTexCoord1d;
    gl10PMultiTexCoord2s fnMultiTexCoord2s;
    gl10PMultiTexCoord2i fnMultiTexCoord2i;
    gl10PMultiTexCoord2f fnMultiTexCoord2f;
    gl10PMultiTexCoord2d fnMultiTexCoord2d;
    gl10PMultiTexCoord3s fnMultiTexCoord3s;
    gl10PMultiTexCoord3i fnMultiTexCoord3i;
    gl10PMultiTexCoord3f fnMultiTexCoord3f;
    gl10PMultiTexCoord3d fnMultiTexCoord3d;
    gl10PMultiTexCoord4s fnMultiTexCoord4s;
    gl10PMultiTexCoord4i fnMultiTexCoord4i;
    gl10PMultiTexCoord4f fnMultiTexCoord4f;
    gl10PMultiTexCoord4d fnMultiTexCoord4d;
    gl10PMultiTexCoord1sv fnMultiTexCoord1sv;
    gl10PMultiTexCoord1iv fnMultiTexCoord1iv;
    gl10PMultiTexCoord1fv fnMultiTexCoord1fv;
    gl10PMultiTexCoord1dv fnMultiTexCoord1dv;
    gl10PMultiTexCoord2sv fnMultiTexCoord2sv;
    gl10PMultiTexCoord2iv fnMultiTexCoord2iv;
    gl10PMultiTexCoord2fv fnMultiTexCoord2fv;
    gl10PMultiTexCoord2dv fnMultiTexCoord2dv;
    gl10PMultiTexCoord3sv fnMultiTexCoord3sv;
    gl10PMultiTexCoord3iv fnMultiTexCoord3iv;
    gl10PMultiTexCoord3fv fnMultiTexCoord3fv;
    gl10PMultiTexCoord3dv fnMultiTexCoord3dv;
    gl10PMultiTexCoord4sv fnMultiTexCoord4sv;
    gl10PMultiTexCoord4iv fnMultiTexCoord4iv;
    gl10PMultiTexCoord4fv fnMultiTexCoord4fv;
    gl10PMultiTexCoord4dv fnMultiTexCoord4dv;
    gl10PResetHistogram fnResetHistogram;
    gl10PResetMinmax fnResetMinmax;
    gl10PSeparableFilter2D fnSeparableFilter2D;
    gl10PAreTexturesResident fnAreTexturesResident;
    gl10PArrayElement fnArrayElement;
    gl10PDrawArrays fnDrawArrays;
    gl10PDrawElements fnDrawElements;
    gl10PGetPointerv fnGetPointerv;
    gl10PPolygonOffset fnPolygonOffset;
    gl10PCopyTexImage1D fnCopyTexImage1D;
    gl10PCopyTexImage2D fnCopyTexImage2D;
    gl10PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl10PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl10PBindTexture fnBindTexture;
    gl10PDeleteTextures fnDeleteTextures;
    gl10PGenTextures fnGenTextures;
    gl10PIsTexture fnIsTexture;
    gl10PColorPointer fnColorPointer;
    gl10PEnableClientState fnEnableClientState;
    gl10PDisableClientState fnDisableClientState;
    gl10PIndexub fnIndexub;
    gl10PIndexubv fnIndexubv;
    gl10PInterleavedArrays fnInterleavedArrays;
    gl10PNormalPointer fnNormalPointer;
    gl10PPushClientAttrib fnPushClientAttrib;
    gl10PPrioritizeTextures fnPrioritizeTextures;
    gl10PPopClientAttrib fnPopClientAttrib;
    gl10PTexCoordPointer fnTexCoordPointer;
    gl10PTexSubImage1D fnTexSubImage1D;
    gl10PTexSubImage2D fnTexSubImage2D;
    gl10PVertexPointer fnVertexPointer;
    gl10PBlendColor fnBlendColor;
    gl10PBlendEquation fnBlendEquation;
    gl10PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl10PDrawRangeElements fnDrawRangeElements;
    gl10PTexImage3D fnTexImage3D;
    gl10PTexSubImage3D fnTexSubImage3D;
    gl10PActiveTexture fnActiveTexture;
    gl10PClientActiveTexture fnClientActiveTexture;
    gl10PCompressedTexImage1D fnCompressedTexImage1D;
    gl10PCompressedTexImage2D fnCompressedTexImage2D;
    gl10PCompressedTexImage3D fnCompressedTexImage3D;
    gl10PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl10PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl10PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl10PGetCompressedTexImage fnGetCompressedTexImage;
    gl10PLoadTransposeMatrixd fnLoadTransposeMatrixd;
    gl10PLoadTransposeMatrixf fnLoadTransposeMatrixf;
    gl10PMultTransposeMatrixd fnMultTransposeMatrixd;
    gl10PMultTransposeMatrixf fnMultTransposeMatrixf;
    gl10PSampleCoverage fnSampleCoverage;
    gl10PBlendFuncSeparate fnBlendFuncSeparate;
    gl10PFogCoordPointer fnFogCoordPointer;
    gl10PFogCoordd fnFogCoordd;
    gl10PFogCoordf fnFogCoordf;
    gl10PFogCoorddv fnFogCoorddv;
    gl10PFogCoordfv fnFogCoordfv;
    gl10PMultiDrawArrays fnMultiDrawArrays;
    gl10PMultiDrawElements fnMultiDrawElements;
    gl10PPointParameterf fnPointParameterf;
    gl10PPointParameteri fnPointParameteri;
    gl10PSecondaryColor3b fnSecondaryColor3b;
    gl10PSecondaryColor3s fnSecondaryColor3s;
    gl10PSecondaryColor3i fnSecondaryColor3i;
    gl10PSecondaryColor3f fnSecondaryColor3f;
    gl10PSecondaryColor3d fnSecondaryColor3d;
    gl10PSecondaryColor3ub fnSecondaryColor3ub;
    gl10PSecondaryColor3us fnSecondaryColor3us;
    gl10PSecondaryColor3ui fnSecondaryColor3ui;
    gl10PSecondaryColor3bv fnSecondaryColor3bv;
    gl10PSecondaryColor3sv fnSecondaryColor3sv;
    gl10PSecondaryColor3iv fnSecondaryColor3iv;
    gl10PSecondaryColor3fv fnSecondaryColor3fv;
    gl10PSecondaryColor3dv fnSecondaryColor3dv;
    gl10PSecondaryColor3ubv fnSecondaryColor3ubv;
    gl10PSecondaryColor3usv fnSecondaryColor3usv;
    gl10PSecondaryColor3uiv fnSecondaryColor3uiv;
    gl10PSecondaryColorPointer fnSecondaryColorPointer;
    gl10PWindowPos2s fnWindowPos2s;
    gl10PWindowPos2i fnWindowPos2i;
    gl10PWindowPos2f fnWindowPos2f;
    gl10PWindowPos2d fnWindowPos2d;
    gl10PWindowPos3s fnWindowPos3s;
    gl10PWindowPos3i fnWindowPos3i;
    gl10PWindowPos3f fnWindowPos3f;
    gl10PWindowPos3d fnWindowPos3d;
    gl10PWindowPos2sv fnWindowPos2sv;
    gl10PWindowPos2iv fnWindowPos2iv;
    gl10PWindowPos2fv fnWindowPos2fv;
    gl10PWindowPos2dv fnWindowPos2dv;
    gl10PWindowPos3sv fnWindowPos3sv;
    gl10PWindowPos3iv fnWindowPos3iv;
    gl10PWindowPos3fv fnWindowPos3fv;
    gl10PWindowPos3dv fnWindowPos3dv;
    gl10PBeginQuery fnBeginQuery;
    gl10PBindBuffer fnBindBuffer;
    gl10PBufferData fnBufferData;
    gl10PBufferSubData fnBufferSubData;
    gl10PDeleteBuffers fnDeleteBuffers;
    gl10PDeleteQueries fnDeleteQueries;
    gl10PGenBuffers fnGenBuffers;
    gl10PGenQueries fnGenQueries;
    gl10PGetBufferParameteriv fnGetBufferParameteriv;
    gl10PGetBufferPointerv fnGetBufferPointerv;
    gl10PGetBufferSubData fnGetBufferSubData;
    gl10PGetQueryObjectiv fnGetQueryObjectiv;
    gl10PGetQueryObjectuiv fnGetQueryObjectuiv;
    gl10PGetQueryiv fnGetQueryiv;
    gl10PIsBuffer fnIsBuffer;
    gl10PIsQuery fnIsQuery;
    gl10PMapBuffer fnMapBuffer;
    gl10PUnmapBuffer fnUnmapBuffer;
    gl10PAttachShader fnAttachShader;
    gl10PBindAttribLocation fnBindAttribLocation;
    gl10PBlendEquationSeperate fnBlendEquationSeperate;
    gl10PCompileShader fnCompileShader;
    gl10PCreateProgram fnCreateProgram;
    gl10PCreateShader fnCreateShader;
    gl10PDeleteProgram fnDeleteProgram;
    gl10PDeleteShader fnDeleteShader;
    gl10PDetachShader fnDetachShader;
    gl10PEnableVertexAttribArray fnEnableVertexAttribArray;
    gl10PDisableVertexAttribArray fnDisableVertexAttribArray;
    gl10PDrawBuffers fnDrawBuffers;
    gl10PGetActiveAttrib fnGetActiveAttrib;
    gl10PGetActiveUniform fnGetActiveUniform;
    gl10PGetAttachedShaders fnGetAttachedShaders;
    gl10PGetAttribLocation fnGetAttribLocation;
    gl10PGetProgramiv fnGetProgramiv;
    gl10PGetProgramInfoLog fnGetProgramInfoLog;
    gl10PGetShaderiv fnGetShaderiv;
    gl10PGetShaderInfoLog fnGetShaderInfoLog;
    gl10PGetShaderSource fnGetShaderSource;
    gl10PGetUniformfv fnGetUniformfv;
    gl10PGetUniformiv fnGetUniformiv;
    gl10PGetUniformLocation fnGetUniformLocation;
    gl10PGetVertexAttribdv fnGetVertexAttribdv;
    gl10PGetVertexAttribfv fnGetVertexAttribfv;
    gl10PGetVertexAttribiv fnGetVertexAttribiv;
    gl10PGetVertexAttribPointerv fnGetVertexAttribPointerv;
    gl10PIsProgram fnIsProgram;
    gl10PIsShader fnIsShader;
    gl10PLinkProgram fnLinkProgram;
    gl10PShaderSource fnShaderSource;
    gl10PStencilFuncSeparate fnStencilFuncSeparate;
    gl10PStencilMaskSeparate fnStencilMaskSeparate;
    gl10PStencilOpSeparate fnStencilOpSeparate;
    gl10PUniform1f fnUniform1f;
    gl10PUniform2f fnUniform2f;
    gl10PUniform3f fnUniform3f;
    gl10PUniform4f fnUniform4f;
    gl10PUniform1i fnUniform1i;
    gl10PUniform2i fnUniform2i;
    gl10PUniform3i fnUniform3i;
    gl10PUniform4i fnUniform4i;
    gl10PUniform1ui fnUniform1ui;
    gl10PUniform2ui fnUniform2ui;
    gl10PUniform3ui fnUniform3ui;
    gl10PUniform4ui fnUniform4ui;
    gl10PUniform1fv fnUniform1fv;
    gl10PUniform2fv fnUniform2fv;
    gl10PUniform3fv fnUniform3fv;
    gl10PUniform4fv fnUniform4fv;
    gl10PUniform1iv fnUniform1iv;
    gl10PUniform2iv fnUniform2iv;
    gl10PUniform3iv fnUniform3iv;
    gl10PUniform4iv fnUniform4iv;
    gl10PUniform1uiv fnUniform1uiv;
    gl10PUniform2uiv fnUniform2uiv;
    gl10PUniform3uiv fnUniform3uiv;
    gl10PUniform4uiv fnUniform4uiv;
    gl10PUseProgram fnUseProgram;
    gl10PValidateProgram fnValidateProgram;
    gl10PVertexAttribPointer fnVertexAttribPointer;
    gl10PVertexAttrib1f fnVertexAttrib1f;
    gl10PVertexAttrib1s fnVertexAttrib1s;
    gl10PVertexAttrib1d fnVertexAttrib1d;
    gl10PVertexAttrib2f fnVertexAttrib2f;
    gl10PVertexAttrib2s fnVertexAttrib2s;
    gl10PVertexAttrib2d fnVertexAttrib2d;
    gl10PVertexAttrib3f fnVertexAttrib3f;
    gl10PVertexAttrib3s fnVertexAttrib3s;
    gl10PVertexAttrib3d fnVertexAttrib3d;
    gl10PVertexAttrib4f fnVertexAttrib4f;
    gl10PVertexAttrib4s fnVertexAttrib4s;
    gl10PVertexAttrib4d fnVertexAttrib4d;
    gl10PVertexAttrib4Nuv fnVertexAttrib4Nuv;
    gl10PVertexAttrib1fv fnVertexAttrib1fv;
    gl10PVertexAttrib1sv fnVertexAttrib1sv;
    gl10PVertexAttrib1dv fnVertexAttrib1dv;
    gl10PVertexAttrib2fv fnVertexAttrib2fv;
    gl10PVertexAttrib2sv fnVertexAttrib2sv;
    gl10PVertexAttrib2dv fnVertexAttrib2dv;
    gl10PVertexAttrib3fv fnVertexAttrib3fv;
    gl10PVertexAttrib3sv fnVertexAttrib3sv;
    gl10PVertexAttrib3dv fnVertexAttrib3dv;
    gl10PVertexAttrib4fv fnVertexAttrib4fv;
    gl10PVertexAttrib4sv fnVertexAttrib4sv;
    gl10PVertexAttrib4dv fnVertexAttrib4dv;
    gl10PVertexAttrib4iv fnVertexAttrib4iv;
    gl10PVertexAttrib4bv fnVertexAttrib4bv;
    gl10PVertexAttrib4ubv fnVertexAttrib4ubv;
    gl10PVertexAttrib4usv fnVertexAttrib4usv;
    gl10PVertexAttrib4uiv fnVertexAttrib4uiv;
    gl10PVertexAttrib4Nbv fnVertexAttrib4Nbv;
    gl10PVertexAttrib4Nsv fnVertexAttrib4Nsv;
    gl10PVertexAttrib4Niv fnVertexAttrib4Niv;
    gl10PVertexAttrib4Nubv fnVertexAttrib4Nubv;
    gl10PVertexAttrib4Nusv fnVertexAttrib4Nusv;
    gl10PVertexAttrib4Nuiv fnVertexAttrib4Nuiv;
    gl10PUniformMatrix2fv fnUniformMatrix2fv;
    gl10PUniformMatrix3fv fnUniformMatrix3fv;
    gl10PUniformMatrix4fv fnUniformMatrix4fv;
    gl10PUniformMatrix2x3fv fnUniformMatrix2x3fv;
    gl10PUniformMatrix3x2fv fnUniformMatrix3x2fv;
    gl10PUniformMatrix2x4fv fnUniformMatrix2x4fv;
    gl10PUniformMatrix4x2fv fnUniformMatrix4x2fv;
    gl10PUniformMatrix3x4fv fnUniformMatrix3x4fv;
    gl10PUniformMatrix4x3fv fnUniformMatrix4x3fv;
} gl10Context;

extern gl10Context* gl10NewContext();
void gl10Accum(gl10Context* glc, GLenum op, GLfloat value);
void gl10AlphaFunc(gl10Context* glc, GLenum func, GLclampf ref);
void gl10Begin(gl10Context* glc, GLenum mode);
void gl10End(gl10Context* glc);
void gl10Bitmap(gl10Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl10BlendFunc(gl10Context* glc, GLenum sfactor, GLenum dfactor);
void gl10CallList(gl10Context* glc, GLuint list);
void gl10CallLists(gl10Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl10Clear(gl10Context* glc, GLbitfield mask);
void gl10ClearAccum(gl10Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl10ClearColor(gl10Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl10ClearDepth(gl10Context* glc, GLclampd depth);
void gl10ClearIndex(gl10Context* glc, GLfloat c);
void gl10ClearStencil(gl10Context* glc, GLint s);
void gl10ClipPlane(gl10Context* glc, GLenum plane, GLdouble* equation);
void gl10Color3b(gl10Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl10Color3d(gl10Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl10Color3f(gl10Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl10Color3i(gl10Context* glc, GLint red, GLint green, GLint blue);
void gl10Color3s(gl10Context* glc, GLshort red, GLshort green, GLshort blue);
void gl10Color3ub(gl10Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl10Color3ui(gl10Context* glc, GLuint red, GLuint green, GLuint blue);
void gl10Color3us(gl10Context* glc, GLushort red, GLushort green, GLushort blue);
void gl10Color4b(gl10Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl10Color4d(gl10Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl10Color4f(gl10Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl10Color4i(gl10Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl10Color4s(gl10Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl10Color4ub(gl10Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl10Color4ui(gl10Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl10Color4us(gl10Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl10Color3bv(gl10Context* glc, GLbyte* v);
void gl10Color3dv(gl10Context* glc, GLdouble* v);
void gl10Color3fv(gl10Context* glc, GLfloat* v);
void gl10Color3iv(gl10Context* glc, GLint* v);
void gl10Color3sv(gl10Context* glc, GLshort* v);
void gl10Color3ubv(gl10Context* glc, GLubyte* v);
void gl10Color3uiv(gl10Context* glc, GLuint* v);
void gl10Color3usv(gl10Context* glc, GLushort* v);
void gl10Color4bv(gl10Context* glc, GLbyte* v);
void gl10Color4dv(gl10Context* glc, GLdouble* v);
void gl10Color4fv(gl10Context* glc, GLfloat* v);
void gl10Color4iv(gl10Context* glc, GLint* v);
void gl10Color4sv(gl10Context* glc, GLshort* v);
void gl10Color4ubv(gl10Context* glc, GLubyte* v);
void gl10Color4uiv(gl10Context* glc, GLuint* v);
void gl10Color4usv(gl10Context* glc, GLushort* v);
void gl10ColorMask(gl10Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl10ColorMaterial(gl10Context* glc, GLenum face, GLenum mode);
void gl10CopyPixels(gl10Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl10CullFace(gl10Context* glc, GLenum mode);
void gl10DeleteLists(gl10Context* glc, GLuint list, GLsizei range);
void gl10DepthFunc(gl10Context* glc, GLenum func);
void gl10DepthMask(gl10Context* glc, GLboolean flag);
void gl10DepthRange(gl10Context* glc, GLclampd zNear, GLclampd zFar);
void gl10Enable(gl10Context* glc, GLenum cap);
void gl10Disable(gl10Context* glc, GLenum cap);
void gl10DrawBuffer(gl10Context* glc, GLenum mode);
void gl10DrawPixels(gl10Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl10EdgeFlag(gl10Context* glc, GLboolean flag);
void gl10EdgeFlagv(gl10Context* glc, GLboolean* flag);
void gl10EdgeFlagPointer(gl10Context* glc, GLsizei stride, GLvoid* pointer);
void gl10EvalCoord1d(gl10Context* glc, GLdouble u);
void gl10EvalCoord1f(gl10Context* glc, GLfloat u);
void gl10EvalCoord2d(gl10Context* glc, GLdouble u, GLdouble v);
void gl10EvalCoord2f(gl10Context* glc, GLfloat u, GLfloat v);
void gl10EvalCoord1dv(gl10Context* glc, GLdouble* u);
void gl10EvalCoord1fv(gl10Context* glc, GLfloat* u);
void gl10EvalCoord2dv(gl10Context* glc, GLdouble* u);
void gl10EvalCoord2fv(gl10Context* glc, GLfloat* u);
void gl10EvalMesh1(gl10Context* glc, GLenum mode, GLint i1, GLint i2);
void gl10EvalMesh2(gl10Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl10EvalPoint1(gl10Context* glc, GLint i);
void gl10EvalPoint2(gl10Context* glc, GLint i, GLint j);
void gl10FeedbackBuffer(gl10Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl10Finish(gl10Context* glc);
void gl10Flush(gl10Context* glc);
void gl10Fogf(gl10Context* glc, GLenum pname, GLfloat param);
void gl10Fogi(gl10Context* glc, GLenum pname, GLint param);
void gl10Fogfv(gl10Context* glc, GLenum pname, GLfloat* params);
void gl10Fogiv(gl10Context* glc, GLenum pname, GLint* params);
void gl10FrontFace(gl10Context* glc, GLenum mode);
void gl10Frustum(gl10Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl10GenLists(gl10Context* glc, GLsizei range);
void gl10GetBooleanv(gl10Context* glc, GLenum pname, GLboolean* params);
void gl10GetDoublev(gl10Context* glc, GLenum pname, GLdouble* params);
void gl10GetFloatv(gl10Context* glc, GLenum pname, GLfloat* params);
void gl10GetIntegerv(gl10Context* glc, GLenum pname, GLint* params);
void gl10GetClipPlane(gl10Context* glc, GLenum plane, GLdouble* equation);
GLenum gl10GetError(gl10Context* glc);
void gl10GetLightfv(gl10Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl10GetLightiv(gl10Context* glc, GLenum light, GLenum pname, GLint* params);
void gl10GetMapdv(gl10Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl10GetMapfv(gl10Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl10GetMapiv(gl10Context* glc, GLenum target, GLenum query, GLint* v);
void gl10GetMaterialfv(gl10Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl10GetMaterialiv(gl10Context* glc, GLenum face, GLenum pname, GLint* params);
void gl10GetPixelMapfv(gl10Context* glc, GLenum map, GLfloat* values);
void gl10GetPixelMapuiv(gl10Context* glc, GLenum map, GLuint* values);
void gl10GetPixelMapusv(gl10Context* glc, GLenum map, GLushort* values);
void gl10GetPolygonStipple(gl10Context* glc, GLubyte* pattern);
GLubyte* gl10GetString(gl10Context* glc, GLenum name);
void gl10GetTexEnvfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10GetTexEnviv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10GetTexGendv(gl10Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl10GetTexGenfv(gl10Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl10GetTexGeniv(gl10Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl10GetTexImage(gl10Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl10GetTexLevelParameterfv(gl10Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl10GetTexLevelParameteriv(gl10Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl10GetTexParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10GetTexParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10Hint(gl10Context* glc, GLenum target, GLenum mode);
void gl10Indexd(gl10Context* glc, GLdouble c);
void gl10Indexf(gl10Context* glc, GLfloat c);
void gl10Indexi(gl10Context* glc, GLint c);
void gl10Indexs(gl10Context* glc, GLshort c);
void gl10Indexdv(gl10Context* glc, GLdouble* c);
void gl10Indexfv(gl10Context* glc, GLfloat* c);
void gl10Indexiv(gl10Context* glc, GLint* c);
void gl10Indexsv(gl10Context* glc, GLshort* c);
void gl10IndexMask(gl10Context* glc, GLuint mask);
void gl10IndexPointer(gl10Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10InitNames(gl10Context* glc);
void gl10IsEnabled(gl10Context* glc, GLenum cap);
GLboolean gl10IsList(gl10Context* glc, GLuint list);
void gl10Lightf(gl10Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl10Lighti(gl10Context* glc, GLenum light, GLenum pname, GLint param);
void gl10Lightfv(gl10Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl10Lightiv(gl10Context* glc, GLenum light, GLenum pname, GLint* params);
void gl10LightModelf(gl10Context* glc, GLenum pname, GLfloat param);
void gl10LightModeli(gl10Context* glc, GLenum pname, GLint param);
void gl10LightModelfv(gl10Context* glc, GLenum pname, GLfloat* params);
void gl10LightModeliv(gl10Context* glc, GLenum pname, GLint* params);
void gl10LineStipple(gl10Context* glc, GLint factor, GLushort pattern);
void gl10LineWidth(gl10Context* glc, GLfloat width);
void gl10ListBase(gl10Context* glc, GLuint base);
void gl10LoadIdentity(gl10Context* glc);
void gl10LoadMatrixd(gl10Context* glc, GLdouble* m);
void gl10LoadMatrixf(gl10Context* glc, GLfloat* m);
void gl10LoadName(gl10Context* glc, GLuint name);
void gl10LogicOp(gl10Context* glc, GLenum opcode);
void gl10Map1d(gl10Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl10Map1f(gl10Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl10Map2d(gl10Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl10Map2f(gl10Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl10MapGrid1d(gl10Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl10MapGrid1f(gl10Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl10MapGrid2d(gl10Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl10MapGrid2f(gl10Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl10Materialf(gl10Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl10Materiali(gl10Context* glc, GLenum face, GLenum pname, GLint param);
void gl10Materialfv(gl10Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl10Materialiv(gl10Context* glc, GLenum face, GLenum pname, GLint* params);
void gl10MatrixMode(gl10Context* glc, GLenum mode);
void gl10MultMatrixd(gl10Context* glc, GLdouble* m);
void gl10MultMatrixf(gl10Context* glc, GLfloat* m);
void gl10NewList(gl10Context* glc, GLuint list, GLenum mode);
void gl10EndList(gl10Context* glc);
void gl10Normal3b(gl10Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl10Normal3d(gl10Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl10Normal3f(gl10Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl10Normal3i(gl10Context* glc, GLint nx, GLint ny, GLint nz);
void gl10Normal3s(gl10Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl10Normal3bv(gl10Context* glc, GLbyte* v);
void gl10Normal3dv(gl10Context* glc, GLdouble* v);
void gl10Normal3fv(gl10Context* glc, GLfloat* v);
void gl10Normal3iv(gl10Context* glc, GLint* v);
void gl10Normal3sv(gl10Context* glc, GLshort* v);
void gl10Ortho(gl10Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl10PassThrough(gl10Context* glc, GLfloat token);
void gl10PixelMapfv(gl10Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl10PixelMapuiv(gl10Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl10PixelMapusv(gl10Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl10PixelStoref(gl10Context* glc, GLenum pname, GLfloat param);
void gl10PixelStorei(gl10Context* glc, GLenum pname, GLint param);
void gl10PixelTransferf(gl10Context* glc, GLenum pname, GLfloat param);
void gl10PixelTransferi(gl10Context* glc, GLenum pname, GLint param);
void gl10PixelZoom(gl10Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl10PointSize(gl10Context* glc, GLfloat size);
void gl10PolygonMode(gl10Context* glc, GLenum face, GLenum mode);
void gl10PolygonStipple(gl10Context* glc, GLubyte* mask);
void gl10PushAttrib(gl10Context* glc, GLbitfield mask);
void gl10PopAttrib(gl10Context* glc);
void gl10PushMatrix(gl10Context* glc);
void gl10PopMatrix(gl10Context* glc);
void gl10PushName(gl10Context* glc, GLuint name);
void gl10PopName(gl10Context* glc);
void gl10RasterPos2d(gl10Context* glc, GLdouble x, GLdouble y);
void gl10RasterPos2f(gl10Context* glc, GLfloat x, GLfloat y);
void gl10RasterPos2i(gl10Context* glc, GLint x, GLint y);
void gl10RasterPos2s(gl10Context* glc, GLshort x, GLshort y);
void gl10RasterPos3d(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl10RasterPos3f(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl10RasterPos3i(gl10Context* glc, GLint x, GLint y, GLint z);
void gl10RasterPos3s(gl10Context* glc, GLshort x, GLshort y, GLshort z);
void gl10RasterPos4d(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl10RasterPos4f(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl10RasterPos4i(gl10Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl10RasterPos4s(gl10Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl10RasterPos2dv(gl10Context* glc, GLdouble* v);
void gl10RasterPos2fv(gl10Context* glc, GLfloat* v);
void gl10RasterPos2iv(gl10Context* glc, GLint* v);
void gl10RasterPos2sv(gl10Context* glc, GLshort* v);
void gl10RasterPos3dv(gl10Context* glc, GLdouble* v);
void gl10RasterPos3fv(gl10Context* glc, GLfloat* v);
void gl10RasterPos3iv(gl10Context* glc, GLint* v);
void gl10RasterPos3sv(gl10Context* glc, GLshort* v);
void gl10RasterPos4dv(gl10Context* glc, GLdouble* v);
void gl10RasterPos4fv(gl10Context* glc, GLfloat* v);
void gl10RasterPos4iv(gl10Context* glc, GLint* v);
void gl10RasterPos4sv(gl10Context* glc, GLshort* v);
void gl10ReadBuffer(gl10Context* glc, GLenum mode);
void gl10ReadPixels(gl10Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl10Rectd(gl10Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl10Rectf(gl10Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl10Recti(gl10Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl10Rects(gl10Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl10Rectdv(gl10Context* glc, GLdouble* v1, GLdouble* v2);
void gl10Rectfv(gl10Context* glc, GLfloat* v1, GLfloat* v2);
void gl10Rectiv(gl10Context* glc, GLint* v1, GLint* v2);
void gl10Rectsv(gl10Context* glc, GLshort* v1, GLshort* v2);
GLint gl10RenderMode(gl10Context* glc, GLenum mode);
void gl10Rotated(gl10Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl10Rotatef(gl10Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl10Scaled(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl10Scalef(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl10Scissor(gl10Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl10SelectBuffer(gl10Context* glc, GLsizei size, GLuint* buffer);
void gl10ShadeModel(gl10Context* glc, GLenum mode);
void gl10StencilFunc(gl10Context* glc, GLenum func, GLint ref, GLuint mask);
void gl10StencilMask(gl10Context* glc, GLuint mask);
void gl10StencilOp(gl10Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl10TexCoord1d(gl10Context* glc, GLdouble s);
void gl10TexCoord1f(gl10Context* glc, GLfloat s);
void gl10TexCoord1i(gl10Context* glc, GLint s);
void gl10TexCoord1s(gl10Context* glc, GLshort s);
void gl10TexCoord2d(gl10Context* glc, GLdouble s, GLdouble t);
void gl10TexCoord2f(gl10Context* glc, GLfloat s, GLfloat t);
void gl10TexCoord2i(gl10Context* glc, GLint s, GLint t);
void gl10TexCoord2s(gl10Context* glc, GLshort s, GLshort t);
void gl10TexCoord3d(gl10Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl10TexCoord3f(gl10Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl10TexCoord3i(gl10Context* glc, GLint s, GLint t, GLint r);
void gl10TexCoord3s(gl10Context* glc, GLshort s, GLshort t, GLshort r);
void gl10TexCoord4d(gl10Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl10TexCoord4f(gl10Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl10TexCoord4i(gl10Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl10TexCoord4s(gl10Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl10TexCoord1dv(gl10Context* glc, GLdouble* v);
void gl10TexCoord1fv(gl10Context* glc, GLfloat* v);
void gl10TexCoord1iv(gl10Context* glc, GLint* v);
void gl10TexCoord1sv(gl10Context* glc, GLshort* v);
void gl10TexCoord2dv(gl10Context* glc, GLdouble* v);
void gl10TexCoord2fv(gl10Context* glc, GLfloat* v);
void gl10TexCoord2iv(gl10Context* glc, GLint* v);
void gl10TexCoord2sv(gl10Context* glc, GLshort* v);
void gl10TexCoord3dv(gl10Context* glc, GLdouble* v);
void gl10TexCoord3fv(gl10Context* glc, GLfloat* v);
void gl10TexCoord3iv(gl10Context* glc, GLint* v);
void gl10TexCoord3sv(gl10Context* glc, GLshort* v);
void gl10TexCoord4dv(gl10Context* glc, GLdouble* v);
void gl10TexCoord4fv(gl10Context* glc, GLfloat* v);
void gl10TexCoord4iv(gl10Context* glc, GLint* v);
void gl10TexCoord4sv(gl10Context* glc, GLshort* v);
void gl10TexEnvf(gl10Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl10TexEnvi(gl10Context* glc, GLenum target, GLenum pname, GLint param);
void gl10TexEnvfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10TexEnviv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10TexGend(gl10Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl10TexGenf(gl10Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl10TexGeni(gl10Context* glc, GLenum coord, GLenum pname, GLint param);
void gl10TexGendv(gl10Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl10TexGenfv(gl10Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl10TexGeniv(gl10Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl10TexImage1D(gl10Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl10TexImage2D(gl10Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl10TexParameterf(gl10Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl10TexParameteri(gl10Context* glc, GLenum target, GLenum pname, GLint param);
void gl10TexParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10TexParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10Translated(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl10Translatef(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl10Vertex2s(gl10Context* glc, GLshort x, GLshort y);
void gl10Vertex2i(gl10Context* glc, GLint x, GLint y);
void gl10Vertex2f(gl10Context* glc, GLfloat x, GLfloat y);
void gl10Vertex2d(gl10Context* glc, GLdouble x, GLdouble y);
void gl10Vertex3s(gl10Context* glc, GLshort x, GLshort y, GLshort z);
void gl10Vertex3i(gl10Context* glc, GLint x, GLint y, GLint z);
void gl10Vertex3f(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl10Vertex3d(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl10Vertex4s(gl10Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl10Vertex4i(gl10Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl10Vertex4f(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl10Vertex4d(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl10Viewport(gl10Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl10GetConvolutionParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10GetConvolutionParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10ColorTable(gl10Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl10ColorTableParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10ColorTableParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10ColorSubTable(gl10Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl10ConvolutionFilter1D(gl10Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl10ConvolutionFilter2D(gl10Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl10ConvolutionParameterf(gl10Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl10ConvolutionParameteri(gl10Context* glc, GLenum target, GLenum pname, GLint params);
void gl10CopyColorTable(gl10Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl10CopyColorSubTable(gl10Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl10CopyConvolutionFilter1D(gl10Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl10CopyConvolutionFilter2D(gl10Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl10GetColorTable(gl10Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* table);
void gl10GetColorTableParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10GetColorTableParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10GetConvolutionFilter(gl10Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* image);
void gl10GetHistogram(gl10Context* glc, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
void gl10GetHistogramParameterfv(gl10Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl10GetHistogramParameteriv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
void gl10GetSeparableFilter(gl10Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
void gl10Histogram(gl10Context* glc, GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void gl10Minmax(gl10Context* glc, GLenum target, GLenum internalformat, GLboolean sink);
void gl10MultiTexCoord1s(gl10Context* glc, GLenum target, GLshort s);
void gl10MultiTexCoord1i(gl10Context* glc, GLenum target, GLint s);
void gl10MultiTexCoord1f(gl10Context* glc, GLenum target, GLfloat s);
void gl10MultiTexCoord1d(gl10Context* glc, GLenum target, GLdouble s);
void gl10MultiTexCoord2s(gl10Context* glc, GLenum target, GLshort s, GLshort t);
void gl10MultiTexCoord2i(gl10Context* glc, GLenum target, GLint s, GLint t);
void gl10MultiTexCoord2f(gl10Context* glc, GLenum target, GLfloat s, GLfloat t);
void gl10MultiTexCoord2d(gl10Context* glc, GLenum target, GLdouble s, GLdouble t);
void gl10MultiTexCoord3s(gl10Context* glc, GLenum target, GLshort s, GLshort t, GLshort r);
void gl10MultiTexCoord3i(gl10Context* glc, GLenum target, GLint s, GLint t, GLint r);
void gl10MultiTexCoord3f(gl10Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl10MultiTexCoord3d(gl10Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl10MultiTexCoord4s(gl10Context* glc, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl10MultiTexCoord4i(gl10Context* glc, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl10MultiTexCoord4f(gl10Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl10MultiTexCoord4d(gl10Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl10MultiTexCoord1sv(gl10Context* glc, GLenum target, GLshort* v);
void gl10MultiTexCoord1iv(gl10Context* glc, GLenum target, GLint* v);
void gl10MultiTexCoord1fv(gl10Context* glc, GLenum target, GLfloat* v);
void gl10MultiTexCoord1dv(gl10Context* glc, GLenum target, GLdouble* v);
void gl10MultiTexCoord2sv(gl10Context* glc, GLenum target, GLshort* v);
void gl10MultiTexCoord2iv(gl10Context* glc, GLenum target, GLint* v);
void gl10MultiTexCoord2fv(gl10Context* glc, GLenum target, GLfloat* v);
void gl10MultiTexCoord2dv(gl10Context* glc, GLenum target, GLdouble* v);
void gl10MultiTexCoord3sv(gl10Context* glc, GLenum target, GLshort* v);
void gl10MultiTexCoord3iv(gl10Context* glc, GLenum target, GLint* v);
void gl10MultiTexCoord3fv(gl10Context* glc, GLenum target, GLfloat* v);
void gl10MultiTexCoord3dv(gl10Context* glc, GLenum target, GLdouble* v);
void gl10MultiTexCoord4sv(gl10Context* glc, GLenum target, GLshort* v);
void gl10MultiTexCoord4iv(gl10Context* glc, GLenum target, GLint* v);
void gl10MultiTexCoord4fv(gl10Context* glc, GLenum target, GLfloat* v);
void gl10MultiTexCoord4dv(gl10Context* glc, GLenum target, GLdouble* v);
void gl10ResetHistogram(gl10Context* glc, GLenum target);
void gl10ResetMinmax(gl10Context* glc, GLenum target);
void gl10SeparableFilter2D(gl10Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
GLboolean gl10AreTexturesResident(gl10Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl10ArrayElement(gl10Context* glc, GLint i);
void gl10DrawArrays(gl10Context* glc, GLenum mode, GLint first, GLsizei count);
void gl10DrawElements(gl10Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl10GetPointerv(gl10Context* glc, GLenum pname, GLvoid* params);
void gl10PolygonOffset(gl10Context* glc, GLfloat factor, GLfloat units);
void gl10CopyTexImage1D(gl10Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl10CopyTexImage2D(gl10Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl10CopyTexSubImage1D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl10CopyTexSubImage2D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl10BindTexture(gl10Context* glc, GLenum target, GLuint texture);
void gl10DeleteTextures(gl10Context* glc, GLsizei n, GLuint* textures);
void gl10GenTextures(gl10Context* glc, GLsizei n, GLuint* textures);
GLboolean gl10IsTexture(gl10Context* glc, GLuint texture);
void gl10ColorPointer(gl10Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10EnableClientState(gl10Context* glc, GLenum cap);
void gl10DisableClientState(gl10Context* glc, GLenum cap);
void gl10Indexub(gl10Context* glc, GLubyte c);
void gl10Indexubv(gl10Context* glc, GLubyte* c);
void gl10InterleavedArrays(gl10Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl10NormalPointer(gl10Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10PushClientAttrib(gl10Context* glc, GLbitfield mask);
void gl10PrioritizeTextures(gl10Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl10PopClientAttrib(gl10Context* glc);
void gl10TexCoordPointer(gl10Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10TexSubImage1D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl10TexSubImage2D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl10VertexPointer(gl10Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10BlendColor(gl10Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl10BlendEquation(gl10Context* glc, GLenum mode);
void gl10CopyTexSubImage3D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl10DrawRangeElements(gl10Context* glc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
void gl10TexImage3D(gl10Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl10TexSubImage3D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl10ActiveTexture(gl10Context* glc, GLenum texture);
void gl10ClientActiveTexture(gl10Context* glc, GLenum texture);
void gl10CompressedTexImage1D(gl10Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl10CompressedTexImage2D(gl10Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl10CompressedTexImage3D(gl10Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl10CompressedTexSubImage1D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl10CompressedTexSubImage2D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl10CompressedTexSubImage3D(gl10Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl10GetCompressedTexImage(gl10Context* glc, GLenum target, GLint lod, GLvoid* img);
void gl10LoadTransposeMatrixd(gl10Context* glc, GLdouble* m);
void gl10LoadTransposeMatrixf(gl10Context* glc, GLdouble* m);
void gl10MultTransposeMatrixd(gl10Context* glc, GLdouble* m);
void gl10MultTransposeMatrixf(gl10Context* glc, GLfloat* m);
void gl10SampleCoverage(gl10Context* glc, GLclampf value, GLboolean invert);
void gl10BlendFuncSeparate(gl10Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl10FogCoordPointer(gl10Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10FogCoordd(gl10Context* glc, GLdouble coord);
void gl10FogCoordf(gl10Context* glc, GLfloat coord);
void gl10FogCoorddv(gl10Context* glc, GLdouble* coord);
void gl10FogCoordfv(gl10Context* glc, GLfloat* coord);
void gl10MultiDrawArrays(gl10Context* glc, GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
void gl10MultiDrawElements(gl10Context* glc, GLenum mode, GLsizei* count, GLenum type, GLvoid* indices, GLsizei primcount);
void gl10PointParameterf(gl10Context* glc, GLenum pname, GLfloat param);
void gl10PointParameteri(gl10Context* glc, GLenum pname, GLint param);
void gl10SecondaryColor3b(gl10Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl10SecondaryColor3s(gl10Context* glc, GLshort red, GLshort green, GLshort blue);
void gl10SecondaryColor3i(gl10Context* glc, GLint red, GLint green, GLint blue);
void gl10SecondaryColor3f(gl10Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl10SecondaryColor3d(gl10Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl10SecondaryColor3ub(gl10Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl10SecondaryColor3us(gl10Context* glc, GLushort red, GLushort green, GLushort blue);
void gl10SecondaryColor3ui(gl10Context* glc, GLuint red, GLuint green, GLuint blue);
void gl10SecondaryColor3bv(gl10Context* glc, GLbyte* v);
void gl10SecondaryColor3sv(gl10Context* glc, GLshort* v);
void gl10SecondaryColor3iv(gl10Context* glc, GLint* v);
void gl10SecondaryColor3fv(gl10Context* glc, GLfloat* v);
void gl10SecondaryColor3dv(gl10Context* glc, GLdouble* v);
void gl10SecondaryColor3ubv(gl10Context* glc, GLubyte* v);
void gl10SecondaryColor3usv(gl10Context* glc, GLushort* v);
void gl10SecondaryColor3uiv(gl10Context* glc, GLuint* v);
void gl10SecondaryColorPointer(gl10Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl10WindowPos2s(gl10Context* glc, GLshort x, GLshort y);
void gl10WindowPos2i(gl10Context* glc, GLint x, GLint y);
void gl10WindowPos2f(gl10Context* glc, GLfloat x, GLfloat y);
void gl10WindowPos2d(gl10Context* glc, GLdouble x, GLdouble y);
void gl10WindowPos3s(gl10Context* glc, GLshort x, GLshort y, GLshort z);
void gl10WindowPos3i(gl10Context* glc, GLint x, GLint y, GLint z);
void gl10WindowPos3f(gl10Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl10WindowPos3d(gl10Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl10WindowPos2sv(gl10Context* glc, GLshort* v);
void gl10WindowPos2iv(gl10Context* glc, GLint* v);
void gl10WindowPos2fv(gl10Context* glc, GLfloat* v);
void gl10WindowPos2dv(gl10Context* glc, GLdouble* v);
void gl10WindowPos3sv(gl10Context* glc, GLshort* v);
void gl10WindowPos3iv(gl10Context* glc, GLint* v);
void gl10WindowPos3fv(gl10Context* glc, GLfloat* v);
void gl10WindowPos3dv(gl10Context* glc, GLdouble* v);
void gl10BeginQuery(gl10Context* glc, GLenum target, GLuint id);
void gl10BindBuffer(gl10Context* glc, GLenum target, GLuint buffer);
void gl10BufferData(gl10Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl10BufferSubData(gl10Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl10DeleteBuffers(gl10Context* glc, GLsizei n, GLuint* buffers);
void gl10DeleteQueries(gl10Context* glc, GLsizei n, GLuint* ids);
void gl10GenBuffers(gl10Context* glc, GLsizei n, GLuint* buffers);
void gl10GenQueries(gl10Context* glc, GLsizei n, GLuint* ids);
void gl10GetBufferParameteriv(gl10Context* glc, GLenum target, GLenum value, GLint* data);
void gl10GetBufferPointerv(gl10Context* glc, GLenum target, GLenum pname, GLvoid* params);
void gl10GetBufferSubData(gl10Context* glc, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl10GetQueryObjectiv(gl10Context* glc, GLuint id, GLenum pname, GLint* params);
void gl10GetQueryObjectuiv(gl10Context* glc, GLuint id, GLenum pname, GLuint* params);
void gl10GetQueryiv(gl10Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl10IsBuffer(gl10Context* glc, GLuint buffer);
GLboolean gl10IsQuery(gl10Context* glc, GLuint id);
GLvoid* gl10MapBuffer(gl10Context* glc, GLenum target, GLenum access);
GLboolean gl10UnmapBuffer(gl10Context* glc, GLenum target);
void gl10AttachShader(gl10Context* glc, GLuint program, GLuint shader);
void gl10BindAttribLocation(gl10Context* glc, GLuint program, GLuint index, GLchar* name);
void gl10BlendEquationSeperate(gl10Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl10CompileShader(gl10Context* glc, GLuint shader);
GLuint gl10CreateProgram(gl10Context* glc);
GLuint gl10CreateShader(gl10Context* glc, GLenum shaderType);
void gl10DeleteProgram(gl10Context* glc, GLuint program);
void gl10DeleteShader(gl10Context* glc, GLuint shader);
void gl10DetachShader(gl10Context* glc, GLuint program, GLuint shader);
void gl10EnableVertexAttribArray(gl10Context* glc, GLuint index);
void gl10DisableVertexAttribArray(gl10Context* glc, GLuint index);
void gl10DrawBuffers(gl10Context* glc, GLsizei n, GLenum* bufs);
void gl10GetActiveAttrib(gl10Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl10GetActiveUniform(gl10Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl10GetAttachedShaders(gl10Context* glc, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
GLint gl10GetAttribLocation(gl10Context* glc, GLuint program, GLchar* name);
void gl10GetProgramiv(gl10Context* glc, GLuint program, GLenum pname, GLint* params);
void gl10GetProgramInfoLog(gl10Context* glc, GLuint program, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl10GetShaderiv(gl10Context* glc, GLuint program, GLenum pname, GLint* params);
void gl10GetShaderInfoLog(gl10Context* glc, GLuint shader, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl10GetShaderSource(gl10Context* glc, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl10GetUniformfv(gl10Context* glc, GLuint program, GLint location, GLfloat* params);
void gl10GetUniformiv(gl10Context* glc, GLuint program, GLint location, GLint* params);
GLint gl10GetUniformLocation(gl10Context* glc, GLuint program, GLchar* name);
void gl10GetVertexAttribdv(gl10Context* glc, GLuint index, GLenum pname, GLdouble* params);
void gl10GetVertexAttribfv(gl10Context* glc, GLuint index, GLenum pname, GLfloat* params);
void gl10GetVertexAttribiv(gl10Context* glc, GLuint index, GLenum pname, GLint* params);
void gl10GetVertexAttribPointerv(gl10Context* glc, GLuint index, GLenum pname, GLvoid* pointer);
GLboolean gl10IsProgram(gl10Context* glc, GLuint program);
GLboolean gl10IsShader(gl10Context* glc, GLuint shader);
void gl10LinkProgram(gl10Context* glc, GLuint program);
void gl10ShaderSource(gl10Context* glc, GLuint shader, GLsizei count, GLchar** string, GLint* length);
void gl10StencilFuncSeparate(gl10Context* glc, GLenum face, GLenum func, GLint ref, GLuint mask);
void gl10StencilMaskSeparate(gl10Context* glc, GLenum face, GLuint mask);
void gl10StencilOpSeparate(gl10Context* glc, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl10Uniform1f(gl10Context* glc, GLint location, GLfloat v0);
void gl10Uniform2f(gl10Context* glc, GLint location, GLfloat v0, GLfloat v1);
void gl10Uniform3f(gl10Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl10Uniform4f(gl10Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl10Uniform1i(gl10Context* glc, GLint location, GLint v0);
void gl10Uniform2i(gl10Context* glc, GLint location, GLint v0, GLint v1);
void gl10Uniform3i(gl10Context* glc, GLint location, GLint v0, GLint v1, GLint v2);
void gl10Uniform4i(gl10Context* glc, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl10Uniform1ui(gl10Context* glc, GLint location, GLuint v0);
void gl10Uniform2ui(gl10Context* glc, GLint location, GLuint v0, GLuint v1);
void gl10Uniform3ui(gl10Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2);
void gl10Uniform4ui(gl10Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void gl10Uniform1fv(gl10Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl10Uniform2fv(gl10Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl10Uniform3fv(gl10Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl10Uniform4fv(gl10Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl10Uniform1iv(gl10Context* glc, GLint location, GLsizei count, GLint* value);
void gl10Uniform2iv(gl10Context* glc, GLint location, GLsizei count, GLint* value);
void gl10Uniform3iv(gl10Context* glc, GLint location, GLsizei count, GLint* value);
void gl10Uniform4iv(gl10Context* glc, GLint location, GLsizei count, GLint* value);
void gl10Uniform1uiv(gl10Context* glc, GLint location, GLsizei count, GLuint* value);
void gl10Uniform2uiv(gl10Context* glc, GLint location, GLsizei count, GLuint* value);
void gl10Uniform3uiv(gl10Context* glc, GLint location, GLsizei count, GLuint* value);
void gl10Uniform4uiv(gl10Context* glc, GLint location, GLsizei count, GLuint* value);
void gl10UseProgram(gl10Context* glc, GLuint program);
void gl10ValidateProgram(gl10Context* glc, GLuint program);
void gl10VertexAttribPointer(gl10Context* glc, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
void gl10VertexAttrib1f(gl10Context* glc, GLuint index, GLfloat v0);
void gl10VertexAttrib1s(gl10Context* glc, GLuint index, GLshort v0);
void gl10VertexAttrib1d(gl10Context* glc, GLuint index, GLdouble v0);
void gl10VertexAttrib2f(gl10Context* glc, GLuint index, GLfloat v0, GLfloat v1);
void gl10VertexAttrib2s(gl10Context* glc, GLuint index, GLshort v0, GLshort v1);
void gl10VertexAttrib2d(gl10Context* glc, GLuint index, GLdouble v0, GLdouble v1);
void gl10VertexAttrib3f(gl10Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2);
void gl10VertexAttrib3s(gl10Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2);
void gl10VertexAttrib3d(gl10Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
void gl10VertexAttrib4f(gl10Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl10VertexAttrib4s(gl10Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2, GLshort v3);
void gl10VertexAttrib4d(gl10Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void gl10VertexAttrib4Nuv(gl10Context* glc, GLuint index, GLubyte v0, GLubyte v1, GLubyte v2, GLubyte v3);
void gl10VertexAttrib1fv(gl10Context* glc, GLuint index, GLfloat* v);
void gl10VertexAttrib1sv(gl10Context* glc, GLuint index, GLshort* v);
void gl10VertexAttrib1dv(gl10Context* glc, GLuint index, GLdouble* v);
void gl10VertexAttrib2fv(gl10Context* glc, GLuint index, GLfloat* v);
void gl10VertexAttrib2sv(gl10Context* glc, GLuint index, GLshort* v);
void gl10VertexAttrib2dv(gl10Context* glc, GLuint index, GLdouble* v);
void gl10VertexAttrib3fv(gl10Context* glc, GLuint index, GLfloat* v);
void gl10VertexAttrib3sv(gl10Context* glc, GLuint index, GLshort* v);
void gl10VertexAttrib3dv(gl10Context* glc, GLuint index, GLdouble* v);
void gl10VertexAttrib4fv(gl10Context* glc, GLuint index, GLfloat* v);
void gl10VertexAttrib4sv(gl10Context* glc, GLuint index, GLshort* v);
void gl10VertexAttrib4dv(gl10Context* glc, GLuint index, GLdouble* v);
void gl10VertexAttrib4iv(gl10Context* glc, GLuint index, GLint* v);
void gl10VertexAttrib4bv(gl10Context* glc, GLuint index, GLbyte* v);
void gl10VertexAttrib4ubv(gl10Context* glc, GLuint index, GLubyte* v);
void gl10VertexAttrib4usv(gl10Context* glc, GLuint index, GLushort* v);
void gl10VertexAttrib4uiv(gl10Context* glc, GLuint index, GLuint* v);
void gl10VertexAttrib4Nbv(gl10Context* glc, GLuint index, GLbyte* v);
void gl10VertexAttrib4Nsv(gl10Context* glc, GLuint index, GLshort* v);
void gl10VertexAttrib4Niv(gl10Context* glc, GLuint index, GLint* v);
void gl10VertexAttrib4Nubv(gl10Context* glc, GLuint index, GLubyte* v);
void gl10VertexAttrib4Nusv(gl10Context* glc, GLuint index, GLushort* v);
void gl10VertexAttrib4Nuiv(gl10Context* glc, GLuint index, GLuint* v);
void gl10UniformMatrix2fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix3fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix4fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix2x3fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix3x2fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix2x4fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix4x2fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix3x4fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl10UniformMatrix4x3fv(gl10Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
