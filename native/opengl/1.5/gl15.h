// Copyright 2012 Lightpoke. All rights reserved.
// This source code is subject to the terms and
// conditions defined in the "License.txt" file.

#include <stdbool.h>
#include <stdlib.h>
#include <stddef.h>
#include <stdint.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;
typedef ptrdiff_t GLintptr;

typedef void(*gl15PAccum)(GLenum, GLfloat);
typedef void(*gl15PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl15PBegin)(GLenum);
typedef void(*gl15PEnd)();
typedef void(*gl15PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl15PBlendFunc)(GLenum, GLenum);
typedef void(*gl15PCallList)(GLuint);
typedef void(*gl15PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl15PClear)(GLbitfield);
typedef void(*gl15PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl15PClearDepth)(GLclampd);
typedef void(*gl15PClearIndex)(GLfloat);
typedef void(*gl15PClearStencil)(GLint);
typedef void(*gl15PClipPlane)(GLenum, GLdouble*);
typedef void(*gl15PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl15PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PColor3i)(GLint, GLint, GLint);
typedef void(*gl15PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl15PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl15PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl15PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl15PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl15PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl15PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl15PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl15PColor3bv)(GLbyte*);
typedef void(*gl15PColor3dv)(GLdouble*);
typedef void(*gl15PColor3fv)(GLfloat*);
typedef void(*gl15PColor3iv)(GLint*);
typedef void(*gl15PColor3sv)(GLshort*);
typedef void(*gl15PColor3ubv)(GLubyte*);
typedef void(*gl15PColor3uiv)(GLuint*);
typedef void(*gl15PColor3usv)(GLushort*);
typedef void(*gl15PColor4bv)(GLbyte*);
typedef void(*gl15PColor4dv)(GLdouble*);
typedef void(*gl15PColor4fv)(GLfloat*);
typedef void(*gl15PColor4iv)(GLint*);
typedef void(*gl15PColor4sv)(GLshort*);
typedef void(*gl15PColor4ubv)(GLubyte*);
typedef void(*gl15PColor4uiv)(GLuint*);
typedef void(*gl15PColor4usv)(GLushort*);
typedef void(*gl15PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl15PColorMaterial)(GLenum, GLenum);
typedef void(*gl15PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl15PCullFace)(GLenum);
typedef void(*gl15PDeleteLists)(GLuint, GLsizei);
typedef void(*gl15PDepthFunc)(GLenum);
typedef void(*gl15PDepthMask)(GLboolean);
typedef void(*gl15PDepthRange)(GLclampd, GLclampd);
typedef void(*gl15PEnable)(GLenum);
typedef void(*gl15PDisable)(GLenum);
typedef void(*gl15PDrawBuffer)(GLenum);
typedef void(*gl15PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PEdgeFlag)(GLboolean);
typedef void(*gl15PEdgeFlagv)(GLboolean*);
typedef void(*gl15PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl15PEvalCoord1d)(GLdouble);
typedef void(*gl15PEvalCoord1f)(GLfloat);
typedef void(*gl15PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl15PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl15PEvalCoord1dv)(GLdouble*);
typedef void(*gl15PEvalCoord1fv)(GLfloat*);
typedef void(*gl15PEvalCoord2dv)(GLdouble*);
typedef void(*gl15PEvalCoord2fv)(GLfloat*);
typedef void(*gl15PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl15PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl15PEvalPoint1)(GLint);
typedef void(*gl15PEvalPoint2)(GLint, GLint);
typedef void(*gl15PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl15PFinish)();
typedef void(*gl15PFlush)();
typedef void(*gl15PFogf)(GLenum, GLfloat);
typedef void(*gl15PFogi)(GLenum, GLint);
typedef void(*gl15PFogfv)(GLenum, GLfloat*);
typedef void(*gl15PFogiv)(GLenum, GLint*);
typedef void(*gl15PFrontFace)(GLenum);
typedef void(*gl15PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl15PGenLists)(GLsizei);
typedef void(*gl15PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl15PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl15PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl15PGetIntegerv)(GLenum, GLint*);
typedef void(*gl15PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl15PGetError)();
typedef void(*gl15PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl15PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl15PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl15PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl15PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl15PGetString)(GLenum);
typedef void(*gl15PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl15PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl15PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl15PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl15PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PHint)(GLenum, GLenum);
typedef void(*gl15PIndexd)(GLdouble);
typedef void(*gl15PIndexf)(GLfloat);
typedef void(*gl15PIndexi)(GLint);
typedef void(*gl15PIndexs)(GLshort);
typedef void(*gl15PIndexdv)(GLdouble*);
typedef void(*gl15PIndexfv)(GLfloat*);
typedef void(*gl15PIndexiv)(GLint*);
typedef void(*gl15PIndexsv)(GLshort*);
typedef void(*gl15PIndexMask)(GLuint);
typedef void(*gl15PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl15PInitNames)();
typedef void(*gl15PIsEnabled)(GLenum);
typedef GLboolean(*gl15PIsList)(GLuint);
typedef void(*gl15PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PLighti)(GLenum, GLenum, GLint);
typedef void(*gl15PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl15PLightModelf)(GLenum, GLfloat);
typedef void(*gl15PLightModeli)(GLenum, GLint);
typedef void(*gl15PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl15PLightModeliv)(GLenum, GLint*);
typedef void(*gl15PLineStipple)(GLint, GLushort);
typedef void(*gl15PLineWidth)(GLfloat);
typedef void(*gl15PListBase)(GLuint);
typedef void(*gl15PLoadIdentity)();
typedef void(*gl15PLoadMatrixd)(GLdouble*);
typedef void(*gl15PLoadMatrixf)(GLfloat*);
typedef void(*gl15PLoadName)(GLuint);
typedef void(*gl15PLogicOp)(GLenum);
typedef void(*gl15PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl15PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl15PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl15PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl15PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl15PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl15PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl15PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl15PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl15PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl15PMatrixMode)(GLenum);
typedef void(*gl15PMultMatrixd)(GLdouble*);
typedef void(*gl15PMultMatrixf)(GLfloat*);
typedef void(*gl15PNewList)(GLuint, GLenum);
typedef void(*gl15PEndList)();
typedef void(*gl15PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl15PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PNormal3i)(GLint, GLint, GLint);
typedef void(*gl15PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PNormal3bv)(GLbyte*);
typedef void(*gl15PNormal3dv)(GLdouble*);
typedef void(*gl15PNormal3fv)(GLfloat*);
typedef void(*gl15PNormal3iv)(GLint*);
typedef void(*gl15PNormal3sv)(GLshort*);
typedef void(*gl15POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PPassThrough)(GLfloat);
typedef void(*gl15PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl15PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl15PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl15PPixelStoref)(GLenum, GLfloat);
typedef void(*gl15PPixelStorei)(GLenum, GLint);
typedef void(*gl15PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl15PPixelTransferi)(GLenum, GLint);
typedef void(*gl15PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl15PPointSize)(GLfloat);
typedef void(*gl15PPolygonMode)(GLenum, GLenum);
typedef void(*gl15PPolygonStipple)(GLubyte*);
typedef void(*gl15PPushAttrib)(GLbitfield);
typedef void(*gl15PPopAttrib)();
typedef void(*gl15PPushMatrix)();
typedef void(*gl15PPopMatrix)();
typedef void(*gl15PPushName)(GLuint);
typedef void(*gl15PPopName)();
typedef void(*gl15PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl15PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl15PRasterPos2i)(GLint, GLint);
typedef void(*gl15PRasterPos2s)(GLshort, GLshort);
typedef void(*gl15PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl15PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl15PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PRasterPos2dv)(GLdouble*);
typedef void(*gl15PRasterPos2fv)(GLfloat*);
typedef void(*gl15PRasterPos2iv)(GLint*);
typedef void(*gl15PRasterPos2sv)(GLshort*);
typedef void(*gl15PRasterPos3dv)(GLdouble*);
typedef void(*gl15PRasterPos3fv)(GLfloat*);
typedef void(*gl15PRasterPos3iv)(GLint*);
typedef void(*gl15PRasterPos3sv)(GLshort*);
typedef void(*gl15PRasterPos4dv)(GLdouble*);
typedef void(*gl15PRasterPos4fv)(GLfloat*);
typedef void(*gl15PRasterPos4iv)(GLint*);
typedef void(*gl15PRasterPos4sv)(GLshort*);
typedef void(*gl15PReadBuffer)(GLenum);
typedef void(*gl15PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl15PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl15PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl15PRectiv)(GLint*, GLint*);
typedef void(*gl15PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl15PRenderMode)(GLenum);
typedef void(*gl15PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl15PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl15PShadeModel)(GLenum);
typedef void(*gl15PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl15PStencilMask)(GLuint);
typedef void(*gl15PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl15PTexCoord1d)(GLdouble);
typedef void(*gl15PTexCoord1f)(GLfloat);
typedef void(*gl15PTexCoord1i)(GLint);
typedef void(*gl15PTexCoord1s)(GLshort);
typedef void(*gl15PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl15PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl15PTexCoord2i)(GLint, GLint);
typedef void(*gl15PTexCoord2s)(GLshort, GLshort);
typedef void(*gl15PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl15PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl15PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PTexCoord1dv)(GLdouble*);
typedef void(*gl15PTexCoord1fv)(GLfloat*);
typedef void(*gl15PTexCoord1iv)(GLint*);
typedef void(*gl15PTexCoord1sv)(GLshort*);
typedef void(*gl15PTexCoord2dv)(GLdouble*);
typedef void(*gl15PTexCoord2fv)(GLfloat*);
typedef void(*gl15PTexCoord2iv)(GLint*);
typedef void(*gl15PTexCoord2sv)(GLshort*);
typedef void(*gl15PTexCoord3dv)(GLdouble*);
typedef void(*gl15PTexCoord3fv)(GLfloat*);
typedef void(*gl15PTexCoord3iv)(GLint*);
typedef void(*gl15PTexCoord3sv)(GLshort*);
typedef void(*gl15PTexCoord4dv)(GLdouble*);
typedef void(*gl15PTexCoord4fv)(GLfloat*);
typedef void(*gl15PTexCoord4iv)(GLint*);
typedef void(*gl15PTexCoord4sv)(GLshort*);
typedef void(*gl15PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl15PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl15PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl15PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl15PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl15PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl15PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl15PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl15PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl15PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PVertex2s)(GLshort, GLshort);
typedef void(*gl15PVertex2i)(GLint, GLint);
typedef void(*gl15PVertex2f)(GLfloat, GLfloat);
typedef void(*gl15PVertex2d)(GLdouble, GLdouble);
typedef void(*gl15PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PVertex3i)(GLint, GLint, GLint);
typedef void(*gl15PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl15PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl15PGetConvolutionParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetConvolutionParameteriv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl15PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl15PArrayElement)(GLint);
typedef void(*gl15PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl15PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl15PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl15PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl15PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl15PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl15PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl15PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl15PBindTexture)(GLenum, GLuint);
typedef void(*gl15PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl15PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl15PIsTexture)(GLuint);
typedef void(*gl15PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PEnableClientState)(GLenum);
typedef void(*gl15PDisableClientState)(GLenum);
typedef void(*gl15PIndexub)(GLubyte);
typedef void(*gl15PIndexubv)(GLubyte*);
typedef void(*gl15PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl15PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl15PPushClientAttrib)(GLbitfield);
typedef void(*gl15PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl15PPopClientAttrib)();
typedef void(*gl15PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl15PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl15PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl15PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl15PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl15PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl15PGetColorTable)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl15PGetColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetConvolutionFilter)(GLenum, GLenum, GLenum, GLvoid*);
typedef void(*gl15PGetHistogram)(GLenum, GLboolean, GLenum, GLenum, GLvoid*);
typedef void(*gl15PGetHistogramParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl15PGetHistogramParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetSeparableFilter)(GLenum, GLenum, GLenum, GLvoid*, GLvoid*, GLvoid*);
typedef void(*gl15PHistogram)(GLenum, GLsizei, GLenum, GLboolean);
typedef void(*gl15PMinmax)(GLenum, GLenum, GLboolean);
typedef void(*gl15PMultiTexCoord1s)(GLenum, GLshort);
typedef void(*gl15PMultiTexCoord1i)(GLenum, GLint);
typedef void(*gl15PMultiTexCoord1f)(GLenum, GLfloat);
typedef void(*gl15PMultiTexCoord1d)(GLenum, GLdouble);
typedef void(*gl15PMultiTexCoord2s)(GLenum, GLshort, GLshort);
typedef void(*gl15PMultiTexCoord2i)(GLenum, GLint, GLint);
typedef void(*gl15PMultiTexCoord2f)(GLenum, GLfloat, GLfloat);
typedef void(*gl15PMultiTexCoord2d)(GLenum, GLdouble, GLdouble);
typedef void(*gl15PMultiTexCoord3s)(GLenum, GLshort, GLshort, GLshort);
typedef void(*gl15PMultiTexCoord3i)(GLenum, GLint, GLint, GLint);
typedef void(*gl15PMultiTexCoord3f)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PMultiTexCoord3d)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PMultiTexCoord4s)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PMultiTexCoord4i)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl15PMultiTexCoord4f)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PMultiTexCoord4d)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PMultiTexCoord1sv)(GLenum, GLshort*);
typedef void(*gl15PMultiTexCoord1iv)(GLenum, GLint*);
typedef void(*gl15PMultiTexCoord1fv)(GLenum, GLfloat*);
typedef void(*gl15PMultiTexCoord1dv)(GLenum, GLdouble*);
typedef void(*gl15PMultiTexCoord2sv)(GLenum, GLshort*);
typedef void(*gl15PMultiTexCoord2iv)(GLenum, GLint*);
typedef void(*gl15PMultiTexCoord2fv)(GLenum, GLfloat*);
typedef void(*gl15PMultiTexCoord2dv)(GLenum, GLdouble*);
typedef void(*gl15PMultiTexCoord3sv)(GLenum, GLshort*);
typedef void(*gl15PMultiTexCoord3iv)(GLenum, GLint*);
typedef void(*gl15PMultiTexCoord3fv)(GLenum, GLfloat*);
typedef void(*gl15PMultiTexCoord3dv)(GLenum, GLdouble*);
typedef void(*gl15PMultiTexCoord4sv)(GLenum, GLshort*);
typedef void(*gl15PMultiTexCoord4iv)(GLenum, GLint*);
typedef void(*gl15PMultiTexCoord4fv)(GLenum, GLfloat*);
typedef void(*gl15PMultiTexCoord4dv)(GLenum, GLdouble*);
typedef void(*gl15PResetHistogram)(GLenum);
typedef void(*gl15PResetMinmax)(GLenum);
typedef void(*gl15PSeparableFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*, GLvoid*);
typedef void(*gl15PBlendColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl15PBlendEquation)(GLenum);
typedef void(*gl15PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl15PDrawRangeElements)(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid*);
typedef void(*gl15PTexImage3D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl15PTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl15PActiveTexture)(GLenum);
typedef void(*gl15PClientActiveTexture)(GLenum);
typedef void(*gl15PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl15PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl15PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl15PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PGetCompressedTexImage)(GLenum, GLint, GLvoid*);
typedef void(*gl15PLoadTransposeMatrixd)(GLdouble*);
typedef void(*gl15PLoadTransposeMatrixf)(GLdouble*);
typedef void(*gl15PMultTransposeMatrixd)(GLdouble*);
typedef void(*gl15PMultTransposeMatrixf)(GLfloat*);
typedef void(*gl15PSampleCoverage)(GLclampf, GLboolean);
typedef void(*gl15PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl15PFogCoordPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl15PFogCoordd)(GLdouble);
typedef void(*gl15PFogCoordf)(GLfloat);
typedef void(*gl15PFogCoorddv)(GLdouble*);
typedef void(*gl15PFogCoordfv)(GLfloat*);
typedef void(*gl15PMultiDrawArrays)(GLenum, GLint*, GLsizei*, GLsizei);
typedef void(*gl15PMultiDrawElements)(GLenum, GLsizei*, GLenum, GLvoid*, GLsizei);
typedef void(*gl15PPointParameterf)(GLenum, GLfloat);
typedef void(*gl15PPointParameteri)(GLenum, GLint);
typedef void(*gl15PSecondaryColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl15PSecondaryColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PSecondaryColor3i)(GLint, GLint, GLint);
typedef void(*gl15PSecondaryColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PSecondaryColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PSecondaryColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl15PSecondaryColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl15PSecondaryColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl15PSecondaryColor3bv)(GLbyte*);
typedef void(*gl15PSecondaryColor3sv)(GLshort*);
typedef void(*gl15PSecondaryColor3iv)(GLint*);
typedef void(*gl15PSecondaryColor3fv)(GLfloat*);
typedef void(*gl15PSecondaryColor3dv)(GLdouble*);
typedef void(*gl15PSecondaryColor3ubv)(GLubyte*);
typedef void(*gl15PSecondaryColor3usv)(GLushort*);
typedef void(*gl15PSecondaryColor3uiv)(GLuint*);
typedef void(*gl15PSecondaryColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl15PWindowPos2s)(GLshort, GLshort);
typedef void(*gl15PWindowPos2i)(GLint, GLint);
typedef void(*gl15PWindowPos2f)(GLfloat, GLfloat);
typedef void(*gl15PWindowPos2d)(GLdouble, GLdouble);
typedef void(*gl15PWindowPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl15PWindowPos3i)(GLint, GLint, GLint);
typedef void(*gl15PWindowPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl15PWindowPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl15PWindowPos2sv)(GLshort*);
typedef void(*gl15PWindowPos2iv)(GLint*);
typedef void(*gl15PWindowPos2fv)(GLfloat*);
typedef void(*gl15PWindowPos2dv)(GLdouble*);
typedef void(*gl15PWindowPos3sv)(GLshort*);
typedef void(*gl15PWindowPos3iv)(GLint*);
typedef void(*gl15PWindowPos3fv)(GLfloat*);
typedef void(*gl15PWindowPos3dv)(GLdouble*);
typedef void(*gl15PBeginQuery)(GLenum, GLuint);
typedef void(*gl15PBindBuffer)(GLenum, GLuint);
typedef void(*gl15PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl15PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl15PDeleteBuffers)(GLsizei, GLuint*);
typedef void(*gl15PDeleteQueries)(GLsizei, GLuint*);
typedef void(*gl15PGenBuffers)(GLsizei, GLuint*);
typedef void(*gl15PGenQueries)(GLsizei, GLuint*);
typedef void(*gl15PGetBufferParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl15PGetBufferPointerv)(GLenum, GLenum, GLvoid*);
typedef void(*gl15PGetBufferSubData)(GLenum, GLintptr, GLsizeiptr, GLvoid*);
typedef void(*gl15PGetQueryObjectiv)(GLuint, GLenum, GLint*);
typedef void(*gl15PGetQueryObjectuiv)(GLuint, GLenum, GLuint*);
typedef void(*gl15PGetQueryiv)(GLenum, GLenum, GLint*);
typedef GLboolean(*gl15PIsBuffer)(GLuint);
typedef GLboolean(*gl15PIsQuery)(GLuint);
typedef GLvoid*(*gl15PMapBuffer)(GLenum, GLenum);
typedef GLboolean(*gl15PUnmapBuffer)(GLenum);
typedef void(*gl15PAttachShader)(GLuint, GLuint);
typedef void(*gl15PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl15PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl15PCompileShader)(GLuint);
typedef GLuint(*gl15PCreateProgram)();
typedef GLuint(*gl15PCreateShader)(GLenum);
typedef void(*gl15PDeleteProgram)(GLuint);
typedef void(*gl15PDeleteShader)(GLuint);
typedef void(*gl15PDetachShader)(GLuint, GLuint);
typedef void(*gl15PEnableVertexAttribArray)(GLuint);
typedef void(*gl15PDisableVertexAttribArray)(GLuint);
typedef void(*gl15PDrawBuffers)(GLsizei, GLenum*);
typedef void(*gl15PGetActiveAttrib)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl15PGetActiveUniform)(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
typedef void(*gl15PGetAttachedShaders)(GLuint, GLsizei, GLsizei*, GLuint*);
typedef GLint(*gl15PGetAttribLocation)(GLuint, GLchar*);
typedef void(*gl15PGetProgramiv)(GLuint, GLenum, GLint*);
typedef void(*gl15PGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl15PGetShaderiv)(GLuint, GLenum, GLint*);
typedef void(*gl15PGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl15PGetShaderSource)(GLuint, GLsizei, GLsizei*, GLchar*);
typedef void(*gl15PGetUniformfv)(GLuint, GLint, GLfloat*);
typedef void(*gl15PGetUniformiv)(GLuint, GLint, GLint*);
typedef GLint(*gl15PGetUniformLocation)(GLuint, GLchar*);
typedef void(*gl15PGetVertexAttribdv)(GLuint, GLenum, GLdouble*);
typedef void(*gl15PGetVertexAttribfv)(GLuint, GLenum, GLfloat*);
typedef void(*gl15PGetVertexAttribiv)(GLuint, GLenum, GLint*);
typedef void(*gl15PGetVertexAttribPointerv)(GLuint, GLenum, GLvoid*);
typedef GLboolean(*gl15PIsProgram)(GLuint);
typedef GLboolean(*gl15PIsShader)(GLuint);
typedef void(*gl15PLinkProgram)(GLuint);
typedef void(*gl15PShaderSource)(GLuint, GLsizei, GLchar**, GLint*);
typedef void(*gl15PStencilFuncSeparate)(GLenum, GLenum, GLint, GLuint);
typedef void(*gl15PStencilMaskSeparate)(GLenum, GLuint);
typedef void(*gl15PStencilOpSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl15PUniform1f)(GLint, GLfloat);
typedef void(*gl15PUniform2f)(GLint, GLfloat, GLfloat);
typedef void(*gl15PUniform3f)(GLint, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PUniform4f)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PUniform1i)(GLint, GLint);
typedef void(*gl15PUniform2i)(GLint, GLint, GLint);
typedef void(*gl15PUniform3i)(GLint, GLint, GLint, GLint);
typedef void(*gl15PUniform4i)(GLint, GLint, GLint, GLint, GLint);
typedef void(*gl15PUniform1ui)(GLint, GLuint);
typedef void(*gl15PUniform2ui)(GLint, GLuint, GLuint);
typedef void(*gl15PUniform3ui)(GLint, GLuint, GLuint, GLuint);
typedef void(*gl15PUniform4ui)(GLint, GLuint, GLuint, GLuint, GLuint);
typedef void(*gl15PUniform1fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl15PUniform2fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl15PUniform3fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl15PUniform4fv)(GLint, GLsizei, GLfloat*);
typedef void(*gl15PUniform1iv)(GLint, GLsizei, GLint*);
typedef void(*gl15PUniform2iv)(GLint, GLsizei, GLint*);
typedef void(*gl15PUniform3iv)(GLint, GLsizei, GLint*);
typedef void(*gl15PUniform4iv)(GLint, GLsizei, GLint*);
typedef void(*gl15PUniform1uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl15PUniform2uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl15PUniform3uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl15PUniform4uiv)(GLint, GLsizei, GLuint*);
typedef void(*gl15PUseProgram)(GLuint);
typedef void(*gl15PValidateProgram)(GLuint);
typedef void(*gl15PVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid*);
typedef void(*gl15PVertexAttrib1f)(GLuint, GLfloat);
typedef void(*gl15PVertexAttrib1s)(GLuint, GLshort);
typedef void(*gl15PVertexAttrib1d)(GLuint, GLdouble);
typedef void(*gl15PVertexAttrib2f)(GLuint, GLfloat, GLfloat);
typedef void(*gl15PVertexAttrib2s)(GLuint, GLshort, GLshort);
typedef void(*gl15PVertexAttrib2d)(GLuint, GLdouble, GLdouble);
typedef void(*gl15PVertexAttrib3f)(GLuint, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PVertexAttrib3s)(GLuint, GLshort, GLshort, GLshort);
typedef void(*gl15PVertexAttrib3d)(GLuint, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PVertexAttrib4f)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl15PVertexAttrib4s)(GLuint, GLshort, GLshort, GLshort, GLshort);
typedef void(*gl15PVertexAttrib4d)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl15PVertexAttrib4Nuv)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl15PVertexAttrib1fv)(GLuint, GLfloat*);
typedef void(*gl15PVertexAttrib1sv)(GLuint, GLshort*);
typedef void(*gl15PVertexAttrib1dv)(GLuint, GLdouble*);
typedef void(*gl15PVertexAttrib2fv)(GLuint, GLfloat*);
typedef void(*gl15PVertexAttrib2sv)(GLuint, GLshort*);
typedef void(*gl15PVertexAttrib2dv)(GLuint, GLdouble*);
typedef void(*gl15PVertexAttrib3fv)(GLuint, GLfloat*);
typedef void(*gl15PVertexAttrib3sv)(GLuint, GLshort*);
typedef void(*gl15PVertexAttrib3dv)(GLuint, GLdouble*);
typedef void(*gl15PVertexAttrib4fv)(GLuint, GLfloat*);
typedef void(*gl15PVertexAttrib4sv)(GLuint, GLshort*);
typedef void(*gl15PVertexAttrib4dv)(GLuint, GLdouble*);
typedef void(*gl15PVertexAttrib4iv)(GLuint, GLint*);
typedef void(*gl15PVertexAttrib4bv)(GLuint, GLbyte*);
typedef void(*gl15PVertexAttrib4ubv)(GLuint, GLubyte*);
typedef void(*gl15PVertexAttrib4usv)(GLuint, GLushort*);
typedef void(*gl15PVertexAttrib4uiv)(GLuint, GLuint*);
typedef void(*gl15PVertexAttrib4Nbv)(GLuint, GLbyte*);
typedef void(*gl15PVertexAttrib4Nsv)(GLuint, GLshort*);
typedef void(*gl15PVertexAttrib4Niv)(GLuint, GLint*);
typedef void(*gl15PVertexAttrib4Nubv)(GLuint, GLubyte*);
typedef void(*gl15PVertexAttrib4Nusv)(GLuint, GLushort*);
typedef void(*gl15PVertexAttrib4Nuiv)(GLuint, GLuint*);
typedef void(*gl15PUniformMatrix2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix2x3fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix3x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix2x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix4x2fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix3x4fv)(GLint, GLsizei, GLboolean, GLfloat*);
typedef void(*gl15PUniformMatrix4x3fv)(GLint, GLsizei, GLboolean, GLfloat*);

typedef struct {
    gl15PAccum fnAccum;
    gl15PAlphaFunc fnAlphaFunc;
    gl15PBegin fnBegin;
    gl15PEnd fnEnd;
    gl15PBitmap fnBitmap;
    gl15PBlendFunc fnBlendFunc;
    gl15PCallList fnCallList;
    gl15PCallLists fnCallLists;
    gl15PClear fnClear;
    gl15PClearAccum fnClearAccum;
    gl15PClearColor fnClearColor;
    gl15PClearDepth fnClearDepth;
    gl15PClearIndex fnClearIndex;
    gl15PClearStencil fnClearStencil;
    gl15PClipPlane fnClipPlane;
    gl15PColor3b fnColor3b;
    gl15PColor3d fnColor3d;
    gl15PColor3f fnColor3f;
    gl15PColor3i fnColor3i;
    gl15PColor3s fnColor3s;
    gl15PColor3ub fnColor3ub;
    gl15PColor3ui fnColor3ui;
    gl15PColor3us fnColor3us;
    gl15PColor4b fnColor4b;
    gl15PColor4d fnColor4d;
    gl15PColor4f fnColor4f;
    gl15PColor4i fnColor4i;
    gl15PColor4s fnColor4s;
    gl15PColor4ub fnColor4ub;
    gl15PColor4ui fnColor4ui;
    gl15PColor4us fnColor4us;
    gl15PColor3bv fnColor3bv;
    gl15PColor3dv fnColor3dv;
    gl15PColor3fv fnColor3fv;
    gl15PColor3iv fnColor3iv;
    gl15PColor3sv fnColor3sv;
    gl15PColor3ubv fnColor3ubv;
    gl15PColor3uiv fnColor3uiv;
    gl15PColor3usv fnColor3usv;
    gl15PColor4bv fnColor4bv;
    gl15PColor4dv fnColor4dv;
    gl15PColor4fv fnColor4fv;
    gl15PColor4iv fnColor4iv;
    gl15PColor4sv fnColor4sv;
    gl15PColor4ubv fnColor4ubv;
    gl15PColor4uiv fnColor4uiv;
    gl15PColor4usv fnColor4usv;
    gl15PColorMask fnColorMask;
    gl15PColorMaterial fnColorMaterial;
    gl15PCopyPixels fnCopyPixels;
    gl15PCullFace fnCullFace;
    gl15PDeleteLists fnDeleteLists;
    gl15PDepthFunc fnDepthFunc;
    gl15PDepthMask fnDepthMask;
    gl15PDepthRange fnDepthRange;
    gl15PEnable fnEnable;
    gl15PDisable fnDisable;
    gl15PDrawBuffer fnDrawBuffer;
    gl15PDrawPixels fnDrawPixels;
    gl15PEdgeFlag fnEdgeFlag;
    gl15PEdgeFlagv fnEdgeFlagv;
    gl15PEdgeFlagPointer fnEdgeFlagPointer;
    gl15PEvalCoord1d fnEvalCoord1d;
    gl15PEvalCoord1f fnEvalCoord1f;
    gl15PEvalCoord2d fnEvalCoord2d;
    gl15PEvalCoord2f fnEvalCoord2f;
    gl15PEvalCoord1dv fnEvalCoord1dv;
    gl15PEvalCoord1fv fnEvalCoord1fv;
    gl15PEvalCoord2dv fnEvalCoord2dv;
    gl15PEvalCoord2fv fnEvalCoord2fv;
    gl15PEvalMesh1 fnEvalMesh1;
    gl15PEvalMesh2 fnEvalMesh2;
    gl15PEvalPoint1 fnEvalPoint1;
    gl15PEvalPoint2 fnEvalPoint2;
    gl15PFeedbackBuffer fnFeedbackBuffer;
    gl15PFinish fnFinish;
    gl15PFlush fnFlush;
    gl15PFogf fnFogf;
    gl15PFogi fnFogi;
    gl15PFogfv fnFogfv;
    gl15PFogiv fnFogiv;
    gl15PFrontFace fnFrontFace;
    gl15PFrustum fnFrustum;
    gl15PGenLists fnGenLists;
    gl15PGetBooleanv fnGetBooleanv;
    gl15PGetDoublev fnGetDoublev;
    gl15PGetFloatv fnGetFloatv;
    gl15PGetIntegerv fnGetIntegerv;
    gl15PGetClipPlane fnGetClipPlane;
    gl15PGetError fnGetError;
    gl15PGetLightfv fnGetLightfv;
    gl15PGetLightiv fnGetLightiv;
    gl15PGetMapdv fnGetMapdv;
    gl15PGetMapfv fnGetMapfv;
    gl15PGetMapiv fnGetMapiv;
    gl15PGetMaterialfv fnGetMaterialfv;
    gl15PGetMaterialiv fnGetMaterialiv;
    gl15PGetPixelMapfv fnGetPixelMapfv;
    gl15PGetPixelMapuiv fnGetPixelMapuiv;
    gl15PGetPixelMapusv fnGetPixelMapusv;
    gl15PGetPolygonStipple fnGetPolygonStipple;
    gl15PGetString fnGetString;
    gl15PGetTexEnvfv fnGetTexEnvfv;
    gl15PGetTexEnviv fnGetTexEnviv;
    gl15PGetTexGendv fnGetTexGendv;
    gl15PGetTexGenfv fnGetTexGenfv;
    gl15PGetTexGeniv fnGetTexGeniv;
    gl15PGetTexImage fnGetTexImage;
    gl15PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl15PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl15PGetTexParameterfv fnGetTexParameterfv;
    gl15PGetTexParameteriv fnGetTexParameteriv;
    gl15PHint fnHint;
    gl15PIndexd fnIndexd;
    gl15PIndexf fnIndexf;
    gl15PIndexi fnIndexi;
    gl15PIndexs fnIndexs;
    gl15PIndexdv fnIndexdv;
    gl15PIndexfv fnIndexfv;
    gl15PIndexiv fnIndexiv;
    gl15PIndexsv fnIndexsv;
    gl15PIndexMask fnIndexMask;
    gl15PIndexPointer fnIndexPointer;
    gl15PInitNames fnInitNames;
    gl15PIsEnabled fnIsEnabled;
    gl15PIsList fnIsList;
    gl15PLightf fnLightf;
    gl15PLighti fnLighti;
    gl15PLightfv fnLightfv;
    gl15PLightiv fnLightiv;
    gl15PLightModelf fnLightModelf;
    gl15PLightModeli fnLightModeli;
    gl15PLightModelfv fnLightModelfv;
    gl15PLightModeliv fnLightModeliv;
    gl15PLineStipple fnLineStipple;
    gl15PLineWidth fnLineWidth;
    gl15PListBase fnListBase;
    gl15PLoadIdentity fnLoadIdentity;
    gl15PLoadMatrixd fnLoadMatrixd;
    gl15PLoadMatrixf fnLoadMatrixf;
    gl15PLoadName fnLoadName;
    gl15PLogicOp fnLogicOp;
    gl15PMap1d fnMap1d;
    gl15PMap1f fnMap1f;
    gl15PMap2d fnMap2d;
    gl15PMap2f fnMap2f;
    gl15PMapGrid1d fnMapGrid1d;
    gl15PMapGrid1f fnMapGrid1f;
    gl15PMapGrid2d fnMapGrid2d;
    gl15PMapGrid2f fnMapGrid2f;
    gl15PMaterialf fnMaterialf;
    gl15PMateriali fnMateriali;
    gl15PMaterialfv fnMaterialfv;
    gl15PMaterialiv fnMaterialiv;
    gl15PMatrixMode fnMatrixMode;
    gl15PMultMatrixd fnMultMatrixd;
    gl15PMultMatrixf fnMultMatrixf;
    gl15PNewList fnNewList;
    gl15PEndList fnEndList;
    gl15PNormal3b fnNormal3b;
    gl15PNormal3d fnNormal3d;
    gl15PNormal3f fnNormal3f;
    gl15PNormal3i fnNormal3i;
    gl15PNormal3s fnNormal3s;
    gl15PNormal3bv fnNormal3bv;
    gl15PNormal3dv fnNormal3dv;
    gl15PNormal3fv fnNormal3fv;
    gl15PNormal3iv fnNormal3iv;
    gl15PNormal3sv fnNormal3sv;
    gl15POrtho fnOrtho;
    gl15PPassThrough fnPassThrough;
    gl15PPixelMapfv fnPixelMapfv;
    gl15PPixelMapuiv fnPixelMapuiv;
    gl15PPixelMapusv fnPixelMapusv;
    gl15PPixelStoref fnPixelStoref;
    gl15PPixelStorei fnPixelStorei;
    gl15PPixelTransferf fnPixelTransferf;
    gl15PPixelTransferi fnPixelTransferi;
    gl15PPixelZoom fnPixelZoom;
    gl15PPointSize fnPointSize;
    gl15PPolygonMode fnPolygonMode;
    gl15PPolygonStipple fnPolygonStipple;
    gl15PPushAttrib fnPushAttrib;
    gl15PPopAttrib fnPopAttrib;
    gl15PPushMatrix fnPushMatrix;
    gl15PPopMatrix fnPopMatrix;
    gl15PPushName fnPushName;
    gl15PPopName fnPopName;
    gl15PRasterPos2d fnRasterPos2d;
    gl15PRasterPos2f fnRasterPos2f;
    gl15PRasterPos2i fnRasterPos2i;
    gl15PRasterPos2s fnRasterPos2s;
    gl15PRasterPos3d fnRasterPos3d;
    gl15PRasterPos3f fnRasterPos3f;
    gl15PRasterPos3i fnRasterPos3i;
    gl15PRasterPos3s fnRasterPos3s;
    gl15PRasterPos4d fnRasterPos4d;
    gl15PRasterPos4f fnRasterPos4f;
    gl15PRasterPos4i fnRasterPos4i;
    gl15PRasterPos4s fnRasterPos4s;
    gl15PRasterPos2dv fnRasterPos2dv;
    gl15PRasterPos2fv fnRasterPos2fv;
    gl15PRasterPos2iv fnRasterPos2iv;
    gl15PRasterPos2sv fnRasterPos2sv;
    gl15PRasterPos3dv fnRasterPos3dv;
    gl15PRasterPos3fv fnRasterPos3fv;
    gl15PRasterPos3iv fnRasterPos3iv;
    gl15PRasterPos3sv fnRasterPos3sv;
    gl15PRasterPos4dv fnRasterPos4dv;
    gl15PRasterPos4fv fnRasterPos4fv;
    gl15PRasterPos4iv fnRasterPos4iv;
    gl15PRasterPos4sv fnRasterPos4sv;
    gl15PReadBuffer fnReadBuffer;
    gl15PReadPixels fnReadPixels;
    gl15PRectd fnRectd;
    gl15PRectf fnRectf;
    gl15PRecti fnRecti;
    gl15PRects fnRects;
    gl15PRectdv fnRectdv;
    gl15PRectfv fnRectfv;
    gl15PRectiv fnRectiv;
    gl15PRectsv fnRectsv;
    gl15PRenderMode fnRenderMode;
    gl15PRotated fnRotated;
    gl15PRotatef fnRotatef;
    gl15PScaled fnScaled;
    gl15PScalef fnScalef;
    gl15PScissor fnScissor;
    gl15PSelectBuffer fnSelectBuffer;
    gl15PShadeModel fnShadeModel;
    gl15PStencilFunc fnStencilFunc;
    gl15PStencilMask fnStencilMask;
    gl15PStencilOp fnStencilOp;
    gl15PTexCoord1d fnTexCoord1d;
    gl15PTexCoord1f fnTexCoord1f;
    gl15PTexCoord1i fnTexCoord1i;
    gl15PTexCoord1s fnTexCoord1s;
    gl15PTexCoord2d fnTexCoord2d;
    gl15PTexCoord2f fnTexCoord2f;
    gl15PTexCoord2i fnTexCoord2i;
    gl15PTexCoord2s fnTexCoord2s;
    gl15PTexCoord3d fnTexCoord3d;
    gl15PTexCoord3f fnTexCoord3f;
    gl15PTexCoord3i fnTexCoord3i;
    gl15PTexCoord3s fnTexCoord3s;
    gl15PTexCoord4d fnTexCoord4d;
    gl15PTexCoord4f fnTexCoord4f;
    gl15PTexCoord4i fnTexCoord4i;
    gl15PTexCoord4s fnTexCoord4s;
    gl15PTexCoord1dv fnTexCoord1dv;
    gl15PTexCoord1fv fnTexCoord1fv;
    gl15PTexCoord1iv fnTexCoord1iv;
    gl15PTexCoord1sv fnTexCoord1sv;
    gl15PTexCoord2dv fnTexCoord2dv;
    gl15PTexCoord2fv fnTexCoord2fv;
    gl15PTexCoord2iv fnTexCoord2iv;
    gl15PTexCoord2sv fnTexCoord2sv;
    gl15PTexCoord3dv fnTexCoord3dv;
    gl15PTexCoord3fv fnTexCoord3fv;
    gl15PTexCoord3iv fnTexCoord3iv;
    gl15PTexCoord3sv fnTexCoord3sv;
    gl15PTexCoord4dv fnTexCoord4dv;
    gl15PTexCoord4fv fnTexCoord4fv;
    gl15PTexCoord4iv fnTexCoord4iv;
    gl15PTexCoord4sv fnTexCoord4sv;
    gl15PTexEnvf fnTexEnvf;
    gl15PTexEnvi fnTexEnvi;
    gl15PTexEnvfv fnTexEnvfv;
    gl15PTexEnviv fnTexEnviv;
    gl15PTexGend fnTexGend;
    gl15PTexGenf fnTexGenf;
    gl15PTexGeni fnTexGeni;
    gl15PTexGendv fnTexGendv;
    gl15PTexGenfv fnTexGenfv;
    gl15PTexGeniv fnTexGeniv;
    gl15PTexImage1D fnTexImage1D;
    gl15PTexImage2D fnTexImage2D;
    gl15PTexParameterf fnTexParameterf;
    gl15PTexParameteri fnTexParameteri;
    gl15PTexParameterfv fnTexParameterfv;
    gl15PTexParameteriv fnTexParameteriv;
    gl15PTranslated fnTranslated;
    gl15PTranslatef fnTranslatef;
    gl15PVertex2s fnVertex2s;
    gl15PVertex2i fnVertex2i;
    gl15PVertex2f fnVertex2f;
    gl15PVertex2d fnVertex2d;
    gl15PVertex3s fnVertex3s;
    gl15PVertex3i fnVertex3i;
    gl15PVertex3f fnVertex3f;
    gl15PVertex3d fnVertex3d;
    gl15PVertex4s fnVertex4s;
    gl15PVertex4i fnVertex4i;
    gl15PVertex4f fnVertex4f;
    gl15PVertex4d fnVertex4d;
    gl15PViewport fnViewport;
    gl15PGetConvolutionParameterfv fnGetConvolutionParameterfv;
    gl15PGetConvolutionParameteriv fnGetConvolutionParameteriv;
    gl15PAreTexturesResident fnAreTexturesResident;
    gl15PArrayElement fnArrayElement;
    gl15PDrawArrays fnDrawArrays;
    gl15PDrawElements fnDrawElements;
    gl15PGetPointerv fnGetPointerv;
    gl15PPolygonOffset fnPolygonOffset;
    gl15PCopyTexImage1D fnCopyTexImage1D;
    gl15PCopyTexImage2D fnCopyTexImage2D;
    gl15PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl15PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl15PBindTexture fnBindTexture;
    gl15PDeleteTextures fnDeleteTextures;
    gl15PGenTextures fnGenTextures;
    gl15PIsTexture fnIsTexture;
    gl15PColorPointer fnColorPointer;
    gl15PEnableClientState fnEnableClientState;
    gl15PDisableClientState fnDisableClientState;
    gl15PIndexub fnIndexub;
    gl15PIndexubv fnIndexubv;
    gl15PInterleavedArrays fnInterleavedArrays;
    gl15PNormalPointer fnNormalPointer;
    gl15PPushClientAttrib fnPushClientAttrib;
    gl15PPrioritizeTextures fnPrioritizeTextures;
    gl15PPopClientAttrib fnPopClientAttrib;
    gl15PTexCoordPointer fnTexCoordPointer;
    gl15PTexSubImage1D fnTexSubImage1D;
    gl15PTexSubImage2D fnTexSubImage2D;
    gl15PVertexPointer fnVertexPointer;
    gl15PColorTable fnColorTable;
    gl15PColorTableParameterfv fnColorTableParameterfv;
    gl15PColorTableParameteriv fnColorTableParameteriv;
    gl15PColorSubTable fnColorSubTable;
    gl15PConvolutionFilter1D fnConvolutionFilter1D;
    gl15PConvolutionFilter2D fnConvolutionFilter2D;
    gl15PConvolutionParameterf fnConvolutionParameterf;
    gl15PConvolutionParameteri fnConvolutionParameteri;
    gl15PCopyColorTable fnCopyColorTable;
    gl15PCopyColorSubTable fnCopyColorSubTable;
    gl15PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl15PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl15PGetColorTable fnGetColorTable;
    gl15PGetColorTableParameterfv fnGetColorTableParameterfv;
    gl15PGetColorTableParameteriv fnGetColorTableParameteriv;
    gl15PGetConvolutionFilter fnGetConvolutionFilter;
    gl15PGetHistogram fnGetHistogram;
    gl15PGetHistogramParameterfv fnGetHistogramParameterfv;
    gl15PGetHistogramParameteriv fnGetHistogramParameteriv;
    gl15PGetSeparableFilter fnGetSeparableFilter;
    gl15PHistogram fnHistogram;
    gl15PMinmax fnMinmax;
    gl15PMultiTexCoord1s fnMultiTexCoord1s;
    gl15PMultiTexCoord1i fnMultiTexCoord1i;
    gl15PMultiTexCoord1f fnMultiTexCoord1f;
    gl15PMultiTexCoord1d fnMultiTexCoord1d;
    gl15PMultiTexCoord2s fnMultiTexCoord2s;
    gl15PMultiTexCoord2i fnMultiTexCoord2i;
    gl15PMultiTexCoord2f fnMultiTexCoord2f;
    gl15PMultiTexCoord2d fnMultiTexCoord2d;
    gl15PMultiTexCoord3s fnMultiTexCoord3s;
    gl15PMultiTexCoord3i fnMultiTexCoord3i;
    gl15PMultiTexCoord3f fnMultiTexCoord3f;
    gl15PMultiTexCoord3d fnMultiTexCoord3d;
    gl15PMultiTexCoord4s fnMultiTexCoord4s;
    gl15PMultiTexCoord4i fnMultiTexCoord4i;
    gl15PMultiTexCoord4f fnMultiTexCoord4f;
    gl15PMultiTexCoord4d fnMultiTexCoord4d;
    gl15PMultiTexCoord1sv fnMultiTexCoord1sv;
    gl15PMultiTexCoord1iv fnMultiTexCoord1iv;
    gl15PMultiTexCoord1fv fnMultiTexCoord1fv;
    gl15PMultiTexCoord1dv fnMultiTexCoord1dv;
    gl15PMultiTexCoord2sv fnMultiTexCoord2sv;
    gl15PMultiTexCoord2iv fnMultiTexCoord2iv;
    gl15PMultiTexCoord2fv fnMultiTexCoord2fv;
    gl15PMultiTexCoord2dv fnMultiTexCoord2dv;
    gl15PMultiTexCoord3sv fnMultiTexCoord3sv;
    gl15PMultiTexCoord3iv fnMultiTexCoord3iv;
    gl15PMultiTexCoord3fv fnMultiTexCoord3fv;
    gl15PMultiTexCoord3dv fnMultiTexCoord3dv;
    gl15PMultiTexCoord4sv fnMultiTexCoord4sv;
    gl15PMultiTexCoord4iv fnMultiTexCoord4iv;
    gl15PMultiTexCoord4fv fnMultiTexCoord4fv;
    gl15PMultiTexCoord4dv fnMultiTexCoord4dv;
    gl15PResetHistogram fnResetHistogram;
    gl15PResetMinmax fnResetMinmax;
    gl15PSeparableFilter2D fnSeparableFilter2D;
    gl15PBlendColor fnBlendColor;
    gl15PBlendEquation fnBlendEquation;
    gl15PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl15PDrawRangeElements fnDrawRangeElements;
    gl15PTexImage3D fnTexImage3D;
    gl15PTexSubImage3D fnTexSubImage3D;
    gl15PActiveTexture fnActiveTexture;
    gl15PClientActiveTexture fnClientActiveTexture;
    gl15PCompressedTexImage1D fnCompressedTexImage1D;
    gl15PCompressedTexImage2D fnCompressedTexImage2D;
    gl15PCompressedTexImage3D fnCompressedTexImage3D;
    gl15PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl15PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl15PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl15PGetCompressedTexImage fnGetCompressedTexImage;
    gl15PLoadTransposeMatrixd fnLoadTransposeMatrixd;
    gl15PLoadTransposeMatrixf fnLoadTransposeMatrixf;
    gl15PMultTransposeMatrixd fnMultTransposeMatrixd;
    gl15PMultTransposeMatrixf fnMultTransposeMatrixf;
    gl15PSampleCoverage fnSampleCoverage;
    gl15PBlendFuncSeparate fnBlendFuncSeparate;
    gl15PFogCoordPointer fnFogCoordPointer;
    gl15PFogCoordd fnFogCoordd;
    gl15PFogCoordf fnFogCoordf;
    gl15PFogCoorddv fnFogCoorddv;
    gl15PFogCoordfv fnFogCoordfv;
    gl15PMultiDrawArrays fnMultiDrawArrays;
    gl15PMultiDrawElements fnMultiDrawElements;
    gl15PPointParameterf fnPointParameterf;
    gl15PPointParameteri fnPointParameteri;
    gl15PSecondaryColor3b fnSecondaryColor3b;
    gl15PSecondaryColor3s fnSecondaryColor3s;
    gl15PSecondaryColor3i fnSecondaryColor3i;
    gl15PSecondaryColor3f fnSecondaryColor3f;
    gl15PSecondaryColor3d fnSecondaryColor3d;
    gl15PSecondaryColor3ub fnSecondaryColor3ub;
    gl15PSecondaryColor3us fnSecondaryColor3us;
    gl15PSecondaryColor3ui fnSecondaryColor3ui;
    gl15PSecondaryColor3bv fnSecondaryColor3bv;
    gl15PSecondaryColor3sv fnSecondaryColor3sv;
    gl15PSecondaryColor3iv fnSecondaryColor3iv;
    gl15PSecondaryColor3fv fnSecondaryColor3fv;
    gl15PSecondaryColor3dv fnSecondaryColor3dv;
    gl15PSecondaryColor3ubv fnSecondaryColor3ubv;
    gl15PSecondaryColor3usv fnSecondaryColor3usv;
    gl15PSecondaryColor3uiv fnSecondaryColor3uiv;
    gl15PSecondaryColorPointer fnSecondaryColorPointer;
    gl15PWindowPos2s fnWindowPos2s;
    gl15PWindowPos2i fnWindowPos2i;
    gl15PWindowPos2f fnWindowPos2f;
    gl15PWindowPos2d fnWindowPos2d;
    gl15PWindowPos3s fnWindowPos3s;
    gl15PWindowPos3i fnWindowPos3i;
    gl15PWindowPos3f fnWindowPos3f;
    gl15PWindowPos3d fnWindowPos3d;
    gl15PWindowPos2sv fnWindowPos2sv;
    gl15PWindowPos2iv fnWindowPos2iv;
    gl15PWindowPos2fv fnWindowPos2fv;
    gl15PWindowPos2dv fnWindowPos2dv;
    gl15PWindowPos3sv fnWindowPos3sv;
    gl15PWindowPos3iv fnWindowPos3iv;
    gl15PWindowPos3fv fnWindowPos3fv;
    gl15PWindowPos3dv fnWindowPos3dv;
    gl15PBeginQuery fnBeginQuery;
    gl15PBindBuffer fnBindBuffer;
    gl15PBufferData fnBufferData;
    gl15PBufferSubData fnBufferSubData;
    gl15PDeleteBuffers fnDeleteBuffers;
    gl15PDeleteQueries fnDeleteQueries;
    gl15PGenBuffers fnGenBuffers;
    gl15PGenQueries fnGenQueries;
    gl15PGetBufferParameteriv fnGetBufferParameteriv;
    gl15PGetBufferPointerv fnGetBufferPointerv;
    gl15PGetBufferSubData fnGetBufferSubData;
    gl15PGetQueryObjectiv fnGetQueryObjectiv;
    gl15PGetQueryObjectuiv fnGetQueryObjectuiv;
    gl15PGetQueryiv fnGetQueryiv;
    gl15PIsBuffer fnIsBuffer;
    gl15PIsQuery fnIsQuery;
    gl15PMapBuffer fnMapBuffer;
    gl15PUnmapBuffer fnUnmapBuffer;
    gl15PAttachShader fnAttachShader;
    gl15PBindAttribLocation fnBindAttribLocation;
    gl15PBlendEquationSeperate fnBlendEquationSeperate;
    gl15PCompileShader fnCompileShader;
    gl15PCreateProgram fnCreateProgram;
    gl15PCreateShader fnCreateShader;
    gl15PDeleteProgram fnDeleteProgram;
    gl15PDeleteShader fnDeleteShader;
    gl15PDetachShader fnDetachShader;
    gl15PEnableVertexAttribArray fnEnableVertexAttribArray;
    gl15PDisableVertexAttribArray fnDisableVertexAttribArray;
    gl15PDrawBuffers fnDrawBuffers;
    gl15PGetActiveAttrib fnGetActiveAttrib;
    gl15PGetActiveUniform fnGetActiveUniform;
    gl15PGetAttachedShaders fnGetAttachedShaders;
    gl15PGetAttribLocation fnGetAttribLocation;
    gl15PGetProgramiv fnGetProgramiv;
    gl15PGetProgramInfoLog fnGetProgramInfoLog;
    gl15PGetShaderiv fnGetShaderiv;
    gl15PGetShaderInfoLog fnGetShaderInfoLog;
    gl15PGetShaderSource fnGetShaderSource;
    gl15PGetUniformfv fnGetUniformfv;
    gl15PGetUniformiv fnGetUniformiv;
    gl15PGetUniformLocation fnGetUniformLocation;
    gl15PGetVertexAttribdv fnGetVertexAttribdv;
    gl15PGetVertexAttribfv fnGetVertexAttribfv;
    gl15PGetVertexAttribiv fnGetVertexAttribiv;
    gl15PGetVertexAttribPointerv fnGetVertexAttribPointerv;
    gl15PIsProgram fnIsProgram;
    gl15PIsShader fnIsShader;
    gl15PLinkProgram fnLinkProgram;
    gl15PShaderSource fnShaderSource;
    gl15PStencilFuncSeparate fnStencilFuncSeparate;
    gl15PStencilMaskSeparate fnStencilMaskSeparate;
    gl15PStencilOpSeparate fnStencilOpSeparate;
    gl15PUniform1f fnUniform1f;
    gl15PUniform2f fnUniform2f;
    gl15PUniform3f fnUniform3f;
    gl15PUniform4f fnUniform4f;
    gl15PUniform1i fnUniform1i;
    gl15PUniform2i fnUniform2i;
    gl15PUniform3i fnUniform3i;
    gl15PUniform4i fnUniform4i;
    gl15PUniform1ui fnUniform1ui;
    gl15PUniform2ui fnUniform2ui;
    gl15PUniform3ui fnUniform3ui;
    gl15PUniform4ui fnUniform4ui;
    gl15PUniform1fv fnUniform1fv;
    gl15PUniform2fv fnUniform2fv;
    gl15PUniform3fv fnUniform3fv;
    gl15PUniform4fv fnUniform4fv;
    gl15PUniform1iv fnUniform1iv;
    gl15PUniform2iv fnUniform2iv;
    gl15PUniform3iv fnUniform3iv;
    gl15PUniform4iv fnUniform4iv;
    gl15PUniform1uiv fnUniform1uiv;
    gl15PUniform2uiv fnUniform2uiv;
    gl15PUniform3uiv fnUniform3uiv;
    gl15PUniform4uiv fnUniform4uiv;
    gl15PUseProgram fnUseProgram;
    gl15PValidateProgram fnValidateProgram;
    gl15PVertexAttribPointer fnVertexAttribPointer;
    gl15PVertexAttrib1f fnVertexAttrib1f;
    gl15PVertexAttrib1s fnVertexAttrib1s;
    gl15PVertexAttrib1d fnVertexAttrib1d;
    gl15PVertexAttrib2f fnVertexAttrib2f;
    gl15PVertexAttrib2s fnVertexAttrib2s;
    gl15PVertexAttrib2d fnVertexAttrib2d;
    gl15PVertexAttrib3f fnVertexAttrib3f;
    gl15PVertexAttrib3s fnVertexAttrib3s;
    gl15PVertexAttrib3d fnVertexAttrib3d;
    gl15PVertexAttrib4f fnVertexAttrib4f;
    gl15PVertexAttrib4s fnVertexAttrib4s;
    gl15PVertexAttrib4d fnVertexAttrib4d;
    gl15PVertexAttrib4Nuv fnVertexAttrib4Nuv;
    gl15PVertexAttrib1fv fnVertexAttrib1fv;
    gl15PVertexAttrib1sv fnVertexAttrib1sv;
    gl15PVertexAttrib1dv fnVertexAttrib1dv;
    gl15PVertexAttrib2fv fnVertexAttrib2fv;
    gl15PVertexAttrib2sv fnVertexAttrib2sv;
    gl15PVertexAttrib2dv fnVertexAttrib2dv;
    gl15PVertexAttrib3fv fnVertexAttrib3fv;
    gl15PVertexAttrib3sv fnVertexAttrib3sv;
    gl15PVertexAttrib3dv fnVertexAttrib3dv;
    gl15PVertexAttrib4fv fnVertexAttrib4fv;
    gl15PVertexAttrib4sv fnVertexAttrib4sv;
    gl15PVertexAttrib4dv fnVertexAttrib4dv;
    gl15PVertexAttrib4iv fnVertexAttrib4iv;
    gl15PVertexAttrib4bv fnVertexAttrib4bv;
    gl15PVertexAttrib4ubv fnVertexAttrib4ubv;
    gl15PVertexAttrib4usv fnVertexAttrib4usv;
    gl15PVertexAttrib4uiv fnVertexAttrib4uiv;
    gl15PVertexAttrib4Nbv fnVertexAttrib4Nbv;
    gl15PVertexAttrib4Nsv fnVertexAttrib4Nsv;
    gl15PVertexAttrib4Niv fnVertexAttrib4Niv;
    gl15PVertexAttrib4Nubv fnVertexAttrib4Nubv;
    gl15PVertexAttrib4Nusv fnVertexAttrib4Nusv;
    gl15PVertexAttrib4Nuiv fnVertexAttrib4Nuiv;
    gl15PUniformMatrix2fv fnUniformMatrix2fv;
    gl15PUniformMatrix3fv fnUniformMatrix3fv;
    gl15PUniformMatrix4fv fnUniformMatrix4fv;
    gl15PUniformMatrix2x3fv fnUniformMatrix2x3fv;
    gl15PUniformMatrix3x2fv fnUniformMatrix3x2fv;
    gl15PUniformMatrix2x4fv fnUniformMatrix2x4fv;
    gl15PUniformMatrix4x2fv fnUniformMatrix4x2fv;
    gl15PUniformMatrix3x4fv fnUniformMatrix3x4fv;
    gl15PUniformMatrix4x3fv fnUniformMatrix4x3fv;
} gl15Context;

extern gl15Context* gl15NewContext();
void gl15Accum(gl15Context* glc, GLenum op, GLfloat value);
void gl15AlphaFunc(gl15Context* glc, GLenum func, GLclampf ref);
void gl15Begin(gl15Context* glc, GLenum mode);
void gl15End(gl15Context* glc);
void gl15Bitmap(gl15Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl15BlendFunc(gl15Context* glc, GLenum sfactor, GLenum dfactor);
void gl15CallList(gl15Context* glc, GLuint list);
void gl15CallLists(gl15Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl15Clear(gl15Context* glc, GLbitfield mask);
void gl15ClearAccum(gl15Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl15ClearColor(gl15Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl15ClearDepth(gl15Context* glc, GLclampd depth);
void gl15ClearIndex(gl15Context* glc, GLfloat c);
void gl15ClearStencil(gl15Context* glc, GLint s);
void gl15ClipPlane(gl15Context* glc, GLenum plane, GLdouble* equation);
void gl15Color3b(gl15Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl15Color3d(gl15Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl15Color3f(gl15Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl15Color3i(gl15Context* glc, GLint red, GLint green, GLint blue);
void gl15Color3s(gl15Context* glc, GLshort red, GLshort green, GLshort blue);
void gl15Color3ub(gl15Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl15Color3ui(gl15Context* glc, GLuint red, GLuint green, GLuint blue);
void gl15Color3us(gl15Context* glc, GLushort red, GLushort green, GLushort blue);
void gl15Color4b(gl15Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl15Color4d(gl15Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl15Color4f(gl15Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl15Color4i(gl15Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl15Color4s(gl15Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl15Color4ub(gl15Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl15Color4ui(gl15Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl15Color4us(gl15Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl15Color3bv(gl15Context* glc, GLbyte* v);
void gl15Color3dv(gl15Context* glc, GLdouble* v);
void gl15Color3fv(gl15Context* glc, GLfloat* v);
void gl15Color3iv(gl15Context* glc, GLint* v);
void gl15Color3sv(gl15Context* glc, GLshort* v);
void gl15Color3ubv(gl15Context* glc, GLubyte* v);
void gl15Color3uiv(gl15Context* glc, GLuint* v);
void gl15Color3usv(gl15Context* glc, GLushort* v);
void gl15Color4bv(gl15Context* glc, GLbyte* v);
void gl15Color4dv(gl15Context* glc, GLdouble* v);
void gl15Color4fv(gl15Context* glc, GLfloat* v);
void gl15Color4iv(gl15Context* glc, GLint* v);
void gl15Color4sv(gl15Context* glc, GLshort* v);
void gl15Color4ubv(gl15Context* glc, GLubyte* v);
void gl15Color4uiv(gl15Context* glc, GLuint* v);
void gl15Color4usv(gl15Context* glc, GLushort* v);
void gl15ColorMask(gl15Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl15ColorMaterial(gl15Context* glc, GLenum face, GLenum mode);
void gl15CopyPixels(gl15Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl15CullFace(gl15Context* glc, GLenum mode);
void gl15DeleteLists(gl15Context* glc, GLuint list, GLsizei range);
void gl15DepthFunc(gl15Context* glc, GLenum func);
void gl15DepthMask(gl15Context* glc, GLboolean flag);
void gl15DepthRange(gl15Context* glc, GLclampd zNear, GLclampd zFar);
void gl15Enable(gl15Context* glc, GLenum cap);
void gl15Disable(gl15Context* glc, GLenum cap);
void gl15DrawBuffer(gl15Context* glc, GLenum mode);
void gl15DrawPixels(gl15Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl15EdgeFlag(gl15Context* glc, GLboolean flag);
void gl15EdgeFlagv(gl15Context* glc, GLboolean* flag);
void gl15EdgeFlagPointer(gl15Context* glc, GLsizei stride, GLvoid* pointer);
void gl15EvalCoord1d(gl15Context* glc, GLdouble u);
void gl15EvalCoord1f(gl15Context* glc, GLfloat u);
void gl15EvalCoord2d(gl15Context* glc, GLdouble u, GLdouble v);
void gl15EvalCoord2f(gl15Context* glc, GLfloat u, GLfloat v);
void gl15EvalCoord1dv(gl15Context* glc, GLdouble* u);
void gl15EvalCoord1fv(gl15Context* glc, GLfloat* u);
void gl15EvalCoord2dv(gl15Context* glc, GLdouble* u);
void gl15EvalCoord2fv(gl15Context* glc, GLfloat* u);
void gl15EvalMesh1(gl15Context* glc, GLenum mode, GLint i1, GLint i2);
void gl15EvalMesh2(gl15Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl15EvalPoint1(gl15Context* glc, GLint i);
void gl15EvalPoint2(gl15Context* glc, GLint i, GLint j);
void gl15FeedbackBuffer(gl15Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl15Finish(gl15Context* glc);
void gl15Flush(gl15Context* glc);
void gl15Fogf(gl15Context* glc, GLenum pname, GLfloat param);
void gl15Fogi(gl15Context* glc, GLenum pname, GLint param);
void gl15Fogfv(gl15Context* glc, GLenum pname, GLfloat* params);
void gl15Fogiv(gl15Context* glc, GLenum pname, GLint* params);
void gl15FrontFace(gl15Context* glc, GLenum mode);
void gl15Frustum(gl15Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl15GenLists(gl15Context* glc, GLsizei range);
void gl15GetBooleanv(gl15Context* glc, GLenum pname, GLboolean* params);
void gl15GetDoublev(gl15Context* glc, GLenum pname, GLdouble* params);
void gl15GetFloatv(gl15Context* glc, GLenum pname, GLfloat* params);
void gl15GetIntegerv(gl15Context* glc, GLenum pname, GLint* params);
void gl15GetClipPlane(gl15Context* glc, GLenum plane, GLdouble* equation);
GLenum gl15GetError(gl15Context* glc);
void gl15GetLightfv(gl15Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl15GetLightiv(gl15Context* glc, GLenum light, GLenum pname, GLint* params);
void gl15GetMapdv(gl15Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl15GetMapfv(gl15Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl15GetMapiv(gl15Context* glc, GLenum target, GLenum query, GLint* v);
void gl15GetMaterialfv(gl15Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl15GetMaterialiv(gl15Context* glc, GLenum face, GLenum pname, GLint* params);
void gl15GetPixelMapfv(gl15Context* glc, GLenum map, GLfloat* values);
void gl15GetPixelMapuiv(gl15Context* glc, GLenum map, GLuint* values);
void gl15GetPixelMapusv(gl15Context* glc, GLenum map, GLushort* values);
void gl15GetPolygonStipple(gl15Context* glc, GLubyte* pattern);
GLubyte* gl15GetString(gl15Context* glc, GLenum name);
void gl15GetTexEnvfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15GetTexEnviv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15GetTexGendv(gl15Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl15GetTexGenfv(gl15Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl15GetTexGeniv(gl15Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl15GetTexImage(gl15Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl15GetTexLevelParameterfv(gl15Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl15GetTexLevelParameteriv(gl15Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl15GetTexParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15GetTexParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15Hint(gl15Context* glc, GLenum target, GLenum mode);
void gl15Indexd(gl15Context* glc, GLdouble c);
void gl15Indexf(gl15Context* glc, GLfloat c);
void gl15Indexi(gl15Context* glc, GLint c);
void gl15Indexs(gl15Context* glc, GLshort c);
void gl15Indexdv(gl15Context* glc, GLdouble* c);
void gl15Indexfv(gl15Context* glc, GLfloat* c);
void gl15Indexiv(gl15Context* glc, GLint* c);
void gl15Indexsv(gl15Context* glc, GLshort* c);
void gl15IndexMask(gl15Context* glc, GLuint mask);
void gl15IndexPointer(gl15Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15InitNames(gl15Context* glc);
void gl15IsEnabled(gl15Context* glc, GLenum cap);
GLboolean gl15IsList(gl15Context* glc, GLuint list);
void gl15Lightf(gl15Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl15Lighti(gl15Context* glc, GLenum light, GLenum pname, GLint param);
void gl15Lightfv(gl15Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl15Lightiv(gl15Context* glc, GLenum light, GLenum pname, GLint* params);
void gl15LightModelf(gl15Context* glc, GLenum pname, GLfloat param);
void gl15LightModeli(gl15Context* glc, GLenum pname, GLint param);
void gl15LightModelfv(gl15Context* glc, GLenum pname, GLfloat* params);
void gl15LightModeliv(gl15Context* glc, GLenum pname, GLint* params);
void gl15LineStipple(gl15Context* glc, GLint factor, GLushort pattern);
void gl15LineWidth(gl15Context* glc, GLfloat width);
void gl15ListBase(gl15Context* glc, GLuint base);
void gl15LoadIdentity(gl15Context* glc);
void gl15LoadMatrixd(gl15Context* glc, GLdouble* m);
void gl15LoadMatrixf(gl15Context* glc, GLfloat* m);
void gl15LoadName(gl15Context* glc, GLuint name);
void gl15LogicOp(gl15Context* glc, GLenum opcode);
void gl15Map1d(gl15Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl15Map1f(gl15Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl15Map2d(gl15Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl15Map2f(gl15Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl15MapGrid1d(gl15Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl15MapGrid1f(gl15Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl15MapGrid2d(gl15Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl15MapGrid2f(gl15Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl15Materialf(gl15Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl15Materiali(gl15Context* glc, GLenum face, GLenum pname, GLint param);
void gl15Materialfv(gl15Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl15Materialiv(gl15Context* glc, GLenum face, GLenum pname, GLint* params);
void gl15MatrixMode(gl15Context* glc, GLenum mode);
void gl15MultMatrixd(gl15Context* glc, GLdouble* m);
void gl15MultMatrixf(gl15Context* glc, GLfloat* m);
void gl15NewList(gl15Context* glc, GLuint list, GLenum mode);
void gl15EndList(gl15Context* glc);
void gl15Normal3b(gl15Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl15Normal3d(gl15Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl15Normal3f(gl15Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl15Normal3i(gl15Context* glc, GLint nx, GLint ny, GLint nz);
void gl15Normal3s(gl15Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl15Normal3bv(gl15Context* glc, GLbyte* v);
void gl15Normal3dv(gl15Context* glc, GLdouble* v);
void gl15Normal3fv(gl15Context* glc, GLfloat* v);
void gl15Normal3iv(gl15Context* glc, GLint* v);
void gl15Normal3sv(gl15Context* glc, GLshort* v);
void gl15Ortho(gl15Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl15PassThrough(gl15Context* glc, GLfloat token);
void gl15PixelMapfv(gl15Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl15PixelMapuiv(gl15Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl15PixelMapusv(gl15Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl15PixelStoref(gl15Context* glc, GLenum pname, GLfloat param);
void gl15PixelStorei(gl15Context* glc, GLenum pname, GLint param);
void gl15PixelTransferf(gl15Context* glc, GLenum pname, GLfloat param);
void gl15PixelTransferi(gl15Context* glc, GLenum pname, GLint param);
void gl15PixelZoom(gl15Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl15PointSize(gl15Context* glc, GLfloat size);
void gl15PolygonMode(gl15Context* glc, GLenum face, GLenum mode);
void gl15PolygonStipple(gl15Context* glc, GLubyte* mask);
void gl15PushAttrib(gl15Context* glc, GLbitfield mask);
void gl15PopAttrib(gl15Context* glc);
void gl15PushMatrix(gl15Context* glc);
void gl15PopMatrix(gl15Context* glc);
void gl15PushName(gl15Context* glc, GLuint name);
void gl15PopName(gl15Context* glc);
void gl15RasterPos2d(gl15Context* glc, GLdouble x, GLdouble y);
void gl15RasterPos2f(gl15Context* glc, GLfloat x, GLfloat y);
void gl15RasterPos2i(gl15Context* glc, GLint x, GLint y);
void gl15RasterPos2s(gl15Context* glc, GLshort x, GLshort y);
void gl15RasterPos3d(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl15RasterPos3f(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl15RasterPos3i(gl15Context* glc, GLint x, GLint y, GLint z);
void gl15RasterPos3s(gl15Context* glc, GLshort x, GLshort y, GLshort z);
void gl15RasterPos4d(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl15RasterPos4f(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl15RasterPos4i(gl15Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl15RasterPos4s(gl15Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl15RasterPos2dv(gl15Context* glc, GLdouble* v);
void gl15RasterPos2fv(gl15Context* glc, GLfloat* v);
void gl15RasterPos2iv(gl15Context* glc, GLint* v);
void gl15RasterPos2sv(gl15Context* glc, GLshort* v);
void gl15RasterPos3dv(gl15Context* glc, GLdouble* v);
void gl15RasterPos3fv(gl15Context* glc, GLfloat* v);
void gl15RasterPos3iv(gl15Context* glc, GLint* v);
void gl15RasterPos3sv(gl15Context* glc, GLshort* v);
void gl15RasterPos4dv(gl15Context* glc, GLdouble* v);
void gl15RasterPos4fv(gl15Context* glc, GLfloat* v);
void gl15RasterPos4iv(gl15Context* glc, GLint* v);
void gl15RasterPos4sv(gl15Context* glc, GLshort* v);
void gl15ReadBuffer(gl15Context* glc, GLenum mode);
void gl15ReadPixels(gl15Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl15Rectd(gl15Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl15Rectf(gl15Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl15Recti(gl15Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl15Rects(gl15Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl15Rectdv(gl15Context* glc, GLdouble* v1, GLdouble* v2);
void gl15Rectfv(gl15Context* glc, GLfloat* v1, GLfloat* v2);
void gl15Rectiv(gl15Context* glc, GLint* v1, GLint* v2);
void gl15Rectsv(gl15Context* glc, GLshort* v1, GLshort* v2);
GLint gl15RenderMode(gl15Context* glc, GLenum mode);
void gl15Rotated(gl15Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl15Rotatef(gl15Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl15Scaled(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl15Scalef(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl15Scissor(gl15Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl15SelectBuffer(gl15Context* glc, GLsizei size, GLuint* buffer);
void gl15ShadeModel(gl15Context* glc, GLenum mode);
void gl15StencilFunc(gl15Context* glc, GLenum func, GLint ref, GLuint mask);
void gl15StencilMask(gl15Context* glc, GLuint mask);
void gl15StencilOp(gl15Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl15TexCoord1d(gl15Context* glc, GLdouble s);
void gl15TexCoord1f(gl15Context* glc, GLfloat s);
void gl15TexCoord1i(gl15Context* glc, GLint s);
void gl15TexCoord1s(gl15Context* glc, GLshort s);
void gl15TexCoord2d(gl15Context* glc, GLdouble s, GLdouble t);
void gl15TexCoord2f(gl15Context* glc, GLfloat s, GLfloat t);
void gl15TexCoord2i(gl15Context* glc, GLint s, GLint t);
void gl15TexCoord2s(gl15Context* glc, GLshort s, GLshort t);
void gl15TexCoord3d(gl15Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl15TexCoord3f(gl15Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl15TexCoord3i(gl15Context* glc, GLint s, GLint t, GLint r);
void gl15TexCoord3s(gl15Context* glc, GLshort s, GLshort t, GLshort r);
void gl15TexCoord4d(gl15Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl15TexCoord4f(gl15Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl15TexCoord4i(gl15Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl15TexCoord4s(gl15Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl15TexCoord1dv(gl15Context* glc, GLdouble* v);
void gl15TexCoord1fv(gl15Context* glc, GLfloat* v);
void gl15TexCoord1iv(gl15Context* glc, GLint* v);
void gl15TexCoord1sv(gl15Context* glc, GLshort* v);
void gl15TexCoord2dv(gl15Context* glc, GLdouble* v);
void gl15TexCoord2fv(gl15Context* glc, GLfloat* v);
void gl15TexCoord2iv(gl15Context* glc, GLint* v);
void gl15TexCoord2sv(gl15Context* glc, GLshort* v);
void gl15TexCoord3dv(gl15Context* glc, GLdouble* v);
void gl15TexCoord3fv(gl15Context* glc, GLfloat* v);
void gl15TexCoord3iv(gl15Context* glc, GLint* v);
void gl15TexCoord3sv(gl15Context* glc, GLshort* v);
void gl15TexCoord4dv(gl15Context* glc, GLdouble* v);
void gl15TexCoord4fv(gl15Context* glc, GLfloat* v);
void gl15TexCoord4iv(gl15Context* glc, GLint* v);
void gl15TexCoord4sv(gl15Context* glc, GLshort* v);
void gl15TexEnvf(gl15Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl15TexEnvi(gl15Context* glc, GLenum target, GLenum pname, GLint param);
void gl15TexEnvfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15TexEnviv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15TexGend(gl15Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl15TexGenf(gl15Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl15TexGeni(gl15Context* glc, GLenum coord, GLenum pname, GLint param);
void gl15TexGendv(gl15Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl15TexGenfv(gl15Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl15TexGeniv(gl15Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl15TexImage1D(gl15Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl15TexImage2D(gl15Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl15TexParameterf(gl15Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl15TexParameteri(gl15Context* glc, GLenum target, GLenum pname, GLint param);
void gl15TexParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15TexParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15Translated(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl15Translatef(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl15Vertex2s(gl15Context* glc, GLshort x, GLshort y);
void gl15Vertex2i(gl15Context* glc, GLint x, GLint y);
void gl15Vertex2f(gl15Context* glc, GLfloat x, GLfloat y);
void gl15Vertex2d(gl15Context* glc, GLdouble x, GLdouble y);
void gl15Vertex3s(gl15Context* glc, GLshort x, GLshort y, GLshort z);
void gl15Vertex3i(gl15Context* glc, GLint x, GLint y, GLint z);
void gl15Vertex3f(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl15Vertex3d(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl15Vertex4s(gl15Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl15Vertex4i(gl15Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl15Vertex4f(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl15Vertex4d(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl15Viewport(gl15Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl15GetConvolutionParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15GetConvolutionParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl15AreTexturesResident(gl15Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl15ArrayElement(gl15Context* glc, GLint i);
void gl15DrawArrays(gl15Context* glc, GLenum mode, GLint first, GLsizei count);
void gl15DrawElements(gl15Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl15GetPointerv(gl15Context* glc, GLenum pname, GLvoid* params);
void gl15PolygonOffset(gl15Context* glc, GLfloat factor, GLfloat units);
void gl15CopyTexImage1D(gl15Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl15CopyTexImage2D(gl15Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl15CopyTexSubImage1D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl15CopyTexSubImage2D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl15BindTexture(gl15Context* glc, GLenum target, GLuint texture);
void gl15DeleteTextures(gl15Context* glc, GLsizei n, GLuint* textures);
void gl15GenTextures(gl15Context* glc, GLsizei n, GLuint* textures);
GLboolean gl15IsTexture(gl15Context* glc, GLuint texture);
void gl15ColorPointer(gl15Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15EnableClientState(gl15Context* glc, GLenum cap);
void gl15DisableClientState(gl15Context* glc, GLenum cap);
void gl15Indexub(gl15Context* glc, GLubyte c);
void gl15Indexubv(gl15Context* glc, GLubyte* c);
void gl15InterleavedArrays(gl15Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl15NormalPointer(gl15Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15PushClientAttrib(gl15Context* glc, GLbitfield mask);
void gl15PrioritizeTextures(gl15Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl15PopClientAttrib(gl15Context* glc);
void gl15TexCoordPointer(gl15Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15TexSubImage1D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl15TexSubImage2D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl15VertexPointer(gl15Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15ColorTable(gl15Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl15ColorTableParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15ColorTableParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15ColorSubTable(gl15Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl15ConvolutionFilter1D(gl15Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl15ConvolutionFilter2D(gl15Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl15ConvolutionParameterf(gl15Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl15ConvolutionParameteri(gl15Context* glc, GLenum target, GLenum pname, GLint params);
void gl15CopyColorTable(gl15Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl15CopyColorSubTable(gl15Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl15CopyConvolutionFilter1D(gl15Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl15CopyConvolutionFilter2D(gl15Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl15GetColorTable(gl15Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* table);
void gl15GetColorTableParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15GetColorTableParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15GetConvolutionFilter(gl15Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* image);
void gl15GetHistogram(gl15Context* glc, GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
void gl15GetHistogramParameterfv(gl15Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl15GetHistogramParameteriv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
void gl15GetSeparableFilter(gl15Context* glc, GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
void gl15Histogram(gl15Context* glc, GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void gl15Minmax(gl15Context* glc, GLenum target, GLenum internalformat, GLboolean sink);
void gl15MultiTexCoord1s(gl15Context* glc, GLenum target, GLshort s);
void gl15MultiTexCoord1i(gl15Context* glc, GLenum target, GLint s);
void gl15MultiTexCoord1f(gl15Context* glc, GLenum target, GLfloat s);
void gl15MultiTexCoord1d(gl15Context* glc, GLenum target, GLdouble s);
void gl15MultiTexCoord2s(gl15Context* glc, GLenum target, GLshort s, GLshort t);
void gl15MultiTexCoord2i(gl15Context* glc, GLenum target, GLint s, GLint t);
void gl15MultiTexCoord2f(gl15Context* glc, GLenum target, GLfloat s, GLfloat t);
void gl15MultiTexCoord2d(gl15Context* glc, GLenum target, GLdouble s, GLdouble t);
void gl15MultiTexCoord3s(gl15Context* glc, GLenum target, GLshort s, GLshort t, GLshort r);
void gl15MultiTexCoord3i(gl15Context* glc, GLenum target, GLint s, GLint t, GLint r);
void gl15MultiTexCoord3f(gl15Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r);
void gl15MultiTexCoord3d(gl15Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r);
void gl15MultiTexCoord4s(gl15Context* glc, GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void gl15MultiTexCoord4i(gl15Context* glc, GLenum target, GLint s, GLint t, GLint r, GLint q);
void gl15MultiTexCoord4f(gl15Context* glc, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl15MultiTexCoord4d(gl15Context* glc, GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl15MultiTexCoord1sv(gl15Context* glc, GLenum target, GLshort* v);
void gl15MultiTexCoord1iv(gl15Context* glc, GLenum target, GLint* v);
void gl15MultiTexCoord1fv(gl15Context* glc, GLenum target, GLfloat* v);
void gl15MultiTexCoord1dv(gl15Context* glc, GLenum target, GLdouble* v);
void gl15MultiTexCoord2sv(gl15Context* glc, GLenum target, GLshort* v);
void gl15MultiTexCoord2iv(gl15Context* glc, GLenum target, GLint* v);
void gl15MultiTexCoord2fv(gl15Context* glc, GLenum target, GLfloat* v);
void gl15MultiTexCoord2dv(gl15Context* glc, GLenum target, GLdouble* v);
void gl15MultiTexCoord3sv(gl15Context* glc, GLenum target, GLshort* v);
void gl15MultiTexCoord3iv(gl15Context* glc, GLenum target, GLint* v);
void gl15MultiTexCoord3fv(gl15Context* glc, GLenum target, GLfloat* v);
void gl15MultiTexCoord3dv(gl15Context* glc, GLenum target, GLdouble* v);
void gl15MultiTexCoord4sv(gl15Context* glc, GLenum target, GLshort* v);
void gl15MultiTexCoord4iv(gl15Context* glc, GLenum target, GLint* v);
void gl15MultiTexCoord4fv(gl15Context* glc, GLenum target, GLfloat* v);
void gl15MultiTexCoord4dv(gl15Context* glc, GLenum target, GLdouble* v);
void gl15ResetHistogram(gl15Context* glc, GLenum target);
void gl15ResetMinmax(gl15Context* glc, GLenum target);
void gl15SeparableFilter2D(gl15Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
void gl15BlendColor(gl15Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl15BlendEquation(gl15Context* glc, GLenum mode);
void gl15CopyTexSubImage3D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl15DrawRangeElements(gl15Context* glc, GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
void gl15TexImage3D(gl15Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl15TexSubImage3D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl15ActiveTexture(gl15Context* glc, GLenum texture);
void gl15ClientActiveTexture(gl15Context* glc, GLenum texture);
void gl15CompressedTexImage1D(gl15Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl15CompressedTexImage2D(gl15Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl15CompressedTexImage3D(gl15Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl15CompressedTexSubImage1D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl15CompressedTexSubImage2D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl15CompressedTexSubImage3D(gl15Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl15GetCompressedTexImage(gl15Context* glc, GLenum target, GLint lod, GLvoid* img);
void gl15LoadTransposeMatrixd(gl15Context* glc, GLdouble* m);
void gl15LoadTransposeMatrixf(gl15Context* glc, GLdouble* m);
void gl15MultTransposeMatrixd(gl15Context* glc, GLdouble* m);
void gl15MultTransposeMatrixf(gl15Context* glc, GLfloat* m);
void gl15SampleCoverage(gl15Context* glc, GLclampf value, GLboolean invert);
void gl15BlendFuncSeparate(gl15Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl15FogCoordPointer(gl15Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15FogCoordd(gl15Context* glc, GLdouble coord);
void gl15FogCoordf(gl15Context* glc, GLfloat coord);
void gl15FogCoorddv(gl15Context* glc, GLdouble* coord);
void gl15FogCoordfv(gl15Context* glc, GLfloat* coord);
void gl15MultiDrawArrays(gl15Context* glc, GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
void gl15MultiDrawElements(gl15Context* glc, GLenum mode, GLsizei* count, GLenum type, GLvoid* indices, GLsizei primcount);
void gl15PointParameterf(gl15Context* glc, GLenum pname, GLfloat param);
void gl15PointParameteri(gl15Context* glc, GLenum pname, GLint param);
void gl15SecondaryColor3b(gl15Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl15SecondaryColor3s(gl15Context* glc, GLshort red, GLshort green, GLshort blue);
void gl15SecondaryColor3i(gl15Context* glc, GLint red, GLint green, GLint blue);
void gl15SecondaryColor3f(gl15Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl15SecondaryColor3d(gl15Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl15SecondaryColor3ub(gl15Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl15SecondaryColor3us(gl15Context* glc, GLushort red, GLushort green, GLushort blue);
void gl15SecondaryColor3ui(gl15Context* glc, GLuint red, GLuint green, GLuint blue);
void gl15SecondaryColor3bv(gl15Context* glc, GLbyte* v);
void gl15SecondaryColor3sv(gl15Context* glc, GLshort* v);
void gl15SecondaryColor3iv(gl15Context* glc, GLint* v);
void gl15SecondaryColor3fv(gl15Context* glc, GLfloat* v);
void gl15SecondaryColor3dv(gl15Context* glc, GLdouble* v);
void gl15SecondaryColor3ubv(gl15Context* glc, GLubyte* v);
void gl15SecondaryColor3usv(gl15Context* glc, GLushort* v);
void gl15SecondaryColor3uiv(gl15Context* glc, GLuint* v);
void gl15SecondaryColorPointer(gl15Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl15WindowPos2s(gl15Context* glc, GLshort x, GLshort y);
void gl15WindowPos2i(gl15Context* glc, GLint x, GLint y);
void gl15WindowPos2f(gl15Context* glc, GLfloat x, GLfloat y);
void gl15WindowPos2d(gl15Context* glc, GLdouble x, GLdouble y);
void gl15WindowPos3s(gl15Context* glc, GLshort x, GLshort y, GLshort z);
void gl15WindowPos3i(gl15Context* glc, GLint x, GLint y, GLint z);
void gl15WindowPos3f(gl15Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl15WindowPos3d(gl15Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl15WindowPos2sv(gl15Context* glc, GLshort* v);
void gl15WindowPos2iv(gl15Context* glc, GLint* v);
void gl15WindowPos2fv(gl15Context* glc, GLfloat* v);
void gl15WindowPos2dv(gl15Context* glc, GLdouble* v);
void gl15WindowPos3sv(gl15Context* glc, GLshort* v);
void gl15WindowPos3iv(gl15Context* glc, GLint* v);
void gl15WindowPos3fv(gl15Context* glc, GLfloat* v);
void gl15WindowPos3dv(gl15Context* glc, GLdouble* v);
void gl15BeginQuery(gl15Context* glc, GLenum target, GLuint id);
void gl15BindBuffer(gl15Context* glc, GLenum target, GLuint buffer);
void gl15BufferData(gl15Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl15BufferSubData(gl15Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl15DeleteBuffers(gl15Context* glc, GLsizei n, GLuint* buffers);
void gl15DeleteQueries(gl15Context* glc, GLsizei n, GLuint* ids);
void gl15GenBuffers(gl15Context* glc, GLsizei n, GLuint* buffers);
void gl15GenQueries(gl15Context* glc, GLsizei n, GLuint* ids);
void gl15GetBufferParameteriv(gl15Context* glc, GLenum target, GLenum value, GLint* data);
void gl15GetBufferPointerv(gl15Context* glc, GLenum target, GLenum pname, GLvoid* params);
void gl15GetBufferSubData(gl15Context* glc, GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void gl15GetQueryObjectiv(gl15Context* glc, GLuint id, GLenum pname, GLint* params);
void gl15GetQueryObjectuiv(gl15Context* glc, GLuint id, GLenum pname, GLuint* params);
void gl15GetQueryiv(gl15Context* glc, GLenum target, GLenum pname, GLint* params);
GLboolean gl15IsBuffer(gl15Context* glc, GLuint buffer);
GLboolean gl15IsQuery(gl15Context* glc, GLuint id);
GLvoid* gl15MapBuffer(gl15Context* glc, GLenum target, GLenum access);
GLboolean gl15UnmapBuffer(gl15Context* glc, GLenum target);
void gl15AttachShader(gl15Context* glc, GLuint program, GLuint shader);
void gl15BindAttribLocation(gl15Context* glc, GLuint program, GLuint index, GLchar* name);
void gl15BlendEquationSeperate(gl15Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl15CompileShader(gl15Context* glc, GLuint shader);
GLuint gl15CreateProgram(gl15Context* glc);
GLuint gl15CreateShader(gl15Context* glc, GLenum shaderType);
void gl15DeleteProgram(gl15Context* glc, GLuint program);
void gl15DeleteShader(gl15Context* glc, GLuint shader);
void gl15DetachShader(gl15Context* glc, GLuint program, GLuint shader);
void gl15EnableVertexAttribArray(gl15Context* glc, GLuint index);
void gl15DisableVertexAttribArray(gl15Context* glc, GLuint index);
void gl15DrawBuffers(gl15Context* glc, GLsizei n, GLenum* bufs);
void gl15GetActiveAttrib(gl15Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl15GetActiveUniform(gl15Context* glc, GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void gl15GetAttachedShaders(gl15Context* glc, GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
GLint gl15GetAttribLocation(gl15Context* glc, GLuint program, GLchar* name);
void gl15GetProgramiv(gl15Context* glc, GLuint program, GLenum pname, GLint* params);
void gl15GetProgramInfoLog(gl15Context* glc, GLuint program, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl15GetShaderiv(gl15Context* glc, GLuint program, GLenum pname, GLint* params);
void gl15GetShaderInfoLog(gl15Context* glc, GLuint shader, GLsizei maxLength, GLsizei* length, GLchar* infoLog);
void gl15GetShaderSource(gl15Context* glc, GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void gl15GetUniformfv(gl15Context* glc, GLuint program, GLint location, GLfloat* params);
void gl15GetUniformiv(gl15Context* glc, GLuint program, GLint location, GLint* params);
GLint gl15GetUniformLocation(gl15Context* glc, GLuint program, GLchar* name);
void gl15GetVertexAttribdv(gl15Context* glc, GLuint index, GLenum pname, GLdouble* params);
void gl15GetVertexAttribfv(gl15Context* glc, GLuint index, GLenum pname, GLfloat* params);
void gl15GetVertexAttribiv(gl15Context* glc, GLuint index, GLenum pname, GLint* params);
void gl15GetVertexAttribPointerv(gl15Context* glc, GLuint index, GLenum pname, GLvoid* pointer);
GLboolean gl15IsProgram(gl15Context* glc, GLuint program);
GLboolean gl15IsShader(gl15Context* glc, GLuint shader);
void gl15LinkProgram(gl15Context* glc, GLuint program);
void gl15ShaderSource(gl15Context* glc, GLuint shader, GLsizei count, GLchar** string, GLint* length);
void gl15StencilFuncSeparate(gl15Context* glc, GLenum face, GLenum func, GLint ref, GLuint mask);
void gl15StencilMaskSeparate(gl15Context* glc, GLenum face, GLuint mask);
void gl15StencilOpSeparate(gl15Context* glc, GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void gl15Uniform1f(gl15Context* glc, GLint location, GLfloat v0);
void gl15Uniform2f(gl15Context* glc, GLint location, GLfloat v0, GLfloat v1);
void gl15Uniform3f(gl15Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void gl15Uniform4f(gl15Context* glc, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl15Uniform1i(gl15Context* glc, GLint location, GLint v0);
void gl15Uniform2i(gl15Context* glc, GLint location, GLint v0, GLint v1);
void gl15Uniform3i(gl15Context* glc, GLint location, GLint v0, GLint v1, GLint v2);
void gl15Uniform4i(gl15Context* glc, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void gl15Uniform1ui(gl15Context* glc, GLint location, GLuint v0);
void gl15Uniform2ui(gl15Context* glc, GLint location, GLuint v0, GLuint v1);
void gl15Uniform3ui(gl15Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2);
void gl15Uniform4ui(gl15Context* glc, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void gl15Uniform1fv(gl15Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl15Uniform2fv(gl15Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl15Uniform3fv(gl15Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl15Uniform4fv(gl15Context* glc, GLint location, GLsizei count, GLfloat* value);
void gl15Uniform1iv(gl15Context* glc, GLint location, GLsizei count, GLint* value);
void gl15Uniform2iv(gl15Context* glc, GLint location, GLsizei count, GLint* value);
void gl15Uniform3iv(gl15Context* glc, GLint location, GLsizei count, GLint* value);
void gl15Uniform4iv(gl15Context* glc, GLint location, GLsizei count, GLint* value);
void gl15Uniform1uiv(gl15Context* glc, GLint location, GLsizei count, GLuint* value);
void gl15Uniform2uiv(gl15Context* glc, GLint location, GLsizei count, GLuint* value);
void gl15Uniform3uiv(gl15Context* glc, GLint location, GLsizei count, GLuint* value);
void gl15Uniform4uiv(gl15Context* glc, GLint location, GLsizei count, GLuint* value);
void gl15UseProgram(gl15Context* glc, GLuint program);
void gl15ValidateProgram(gl15Context* glc, GLuint program);
void gl15VertexAttribPointer(gl15Context* glc, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
void gl15VertexAttrib1f(gl15Context* glc, GLuint index, GLfloat v0);
void gl15VertexAttrib1s(gl15Context* glc, GLuint index, GLshort v0);
void gl15VertexAttrib1d(gl15Context* glc, GLuint index, GLdouble v0);
void gl15VertexAttrib2f(gl15Context* glc, GLuint index, GLfloat v0, GLfloat v1);
void gl15VertexAttrib2s(gl15Context* glc, GLuint index, GLshort v0, GLshort v1);
void gl15VertexAttrib2d(gl15Context* glc, GLuint index, GLdouble v0, GLdouble v1);
void gl15VertexAttrib3f(gl15Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2);
void gl15VertexAttrib3s(gl15Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2);
void gl15VertexAttrib3d(gl15Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2);
void gl15VertexAttrib4f(gl15Context* glc, GLuint index, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void gl15VertexAttrib4s(gl15Context* glc, GLuint index, GLshort v0, GLshort v1, GLshort v2, GLshort v3);
void gl15VertexAttrib4d(gl15Context* glc, GLuint index, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void gl15VertexAttrib4Nuv(gl15Context* glc, GLuint index, GLubyte v0, GLubyte v1, GLubyte v2, GLubyte v3);
void gl15VertexAttrib1fv(gl15Context* glc, GLuint index, GLfloat* v);
void gl15VertexAttrib1sv(gl15Context* glc, GLuint index, GLshort* v);
void gl15VertexAttrib1dv(gl15Context* glc, GLuint index, GLdouble* v);
void gl15VertexAttrib2fv(gl15Context* glc, GLuint index, GLfloat* v);
void gl15VertexAttrib2sv(gl15Context* glc, GLuint index, GLshort* v);
void gl15VertexAttrib2dv(gl15Context* glc, GLuint index, GLdouble* v);
void gl15VertexAttrib3fv(gl15Context* glc, GLuint index, GLfloat* v);
void gl15VertexAttrib3sv(gl15Context* glc, GLuint index, GLshort* v);
void gl15VertexAttrib3dv(gl15Context* glc, GLuint index, GLdouble* v);
void gl15VertexAttrib4fv(gl15Context* glc, GLuint index, GLfloat* v);
void gl15VertexAttrib4sv(gl15Context* glc, GLuint index, GLshort* v);
void gl15VertexAttrib4dv(gl15Context* glc, GLuint index, GLdouble* v);
void gl15VertexAttrib4iv(gl15Context* glc, GLuint index, GLint* v);
void gl15VertexAttrib4bv(gl15Context* glc, GLuint index, GLbyte* v);
void gl15VertexAttrib4ubv(gl15Context* glc, GLuint index, GLubyte* v);
void gl15VertexAttrib4usv(gl15Context* glc, GLuint index, GLushort* v);
void gl15VertexAttrib4uiv(gl15Context* glc, GLuint index, GLuint* v);
void gl15VertexAttrib4Nbv(gl15Context* glc, GLuint index, GLbyte* v);
void gl15VertexAttrib4Nsv(gl15Context* glc, GLuint index, GLshort* v);
void gl15VertexAttrib4Niv(gl15Context* glc, GLuint index, GLint* v);
void gl15VertexAttrib4Nubv(gl15Context* glc, GLuint index, GLubyte* v);
void gl15VertexAttrib4Nusv(gl15Context* glc, GLuint index, GLushort* v);
void gl15VertexAttrib4Nuiv(gl15Context* glc, GLuint index, GLuint* v);
void gl15UniformMatrix2fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix3fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix4fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix2x3fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix3x2fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix2x4fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix4x2fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix3x4fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
void gl15UniformMatrix4x3fv(gl15Context* glc, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
