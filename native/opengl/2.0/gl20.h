#include <stdbool.h>
#include <stdlib.h>

typedef char GLchar;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLsizei;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void GLvoid;
typedef ptrdiff_t GLsizeiptr;

typedef void(*gl20PAccum)(GLenum, GLfloat);
typedef void(*gl20PAlphaFunc)(GLenum, GLclampf);
typedef void(*gl20PBegin)(GLenum);
typedef void(*gl20PEnd)();
typedef void(*gl20PBitmap)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*);
typedef void(*gl20PBlendFunc)(GLenum, GLenum);
typedef void(*gl20PCallList)(GLuint);
typedef void(*gl20PCallLists)(GLsizei, GLenum, GLvoid*);
typedef void(*gl20PClear)(GLbitfield);
typedef void(*gl20PClearAccum)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PClearColor)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl20PClearDepth)(GLclampd);
typedef void(*gl20PClearIndex)(GLfloat);
typedef void(*gl20PClearStencil)(GLint);
typedef void(*gl20PClipPlane)(GLenum, GLdouble*);
typedef void(*gl20PColor3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl20PColor3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PColor3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PColor3i)(GLint, GLint, GLint);
typedef void(*gl20PColor3s)(GLshort, GLshort, GLshort);
typedef void(*gl20PColor3ub)(GLubyte, GLubyte, GLubyte);
typedef void(*gl20PColor3ui)(GLuint, GLuint, GLuint);
typedef void(*gl20PColor3us)(GLushort, GLushort, GLushort);
typedef void(*gl20PColor4b)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void(*gl20PColor4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PColor4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PColor4i)(GLint, GLint, GLint, GLint);
typedef void(*gl20PColor4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl20PColor4ub)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void(*gl20PColor4ui)(GLuint, GLuint, GLuint, GLuint);
typedef void(*gl20PColor4us)(GLushort, GLushort, GLushort, GLushort);
typedef void(*gl20PColor3bv)(GLbyte*);
typedef void(*gl20PColor3dv)(GLdouble*);
typedef void(*gl20PColor3fv)(GLfloat*);
typedef void(*gl20PColor3iv)(GLint*);
typedef void(*gl20PColor3sv)(GLshort*);
typedef void(*gl20PColor3ubv)(GLubyte*);
typedef void(*gl20PColor3uiv)(GLuint*);
typedef void(*gl20PColor3usv)(GLushort*);
typedef void(*gl20PColor4bv)(GLbyte*);
typedef void(*gl20PColor4dv)(GLdouble*);
typedef void(*gl20PColor4fv)(GLfloat*);
typedef void(*gl20PColor4iv)(GLint*);
typedef void(*gl20PColor4sv)(GLshort*);
typedef void(*gl20PColor4ubv)(GLubyte*);
typedef void(*gl20PColor4uiv)(GLuint*);
typedef void(*gl20PColor4usv)(GLushort*);
typedef void(*gl20PColorMask)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void(*gl20PColorMaterial)(GLenum, GLenum);
typedef void(*gl20PColorTable)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PColorTableParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PColorTableParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl20PColorSubTable)(GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PCopyPixels)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void(*gl20PCullFace)(GLenum);
typedef void(*gl20PConvolutionFilter1D)(GLenum, GLenum, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PConvolutionFilter2D)(GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PConvolutionParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PConvolutionParameteri)(GLenum, GLenum, GLint);
typedef void(*gl20PCopyColorTable)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl20PCopyColorSubTable)(GLenum, GLsizei, GLint, GLint, GLsizei);
typedef void(*gl20PCopyConvolutionFilter1D)(GLenum, GLenum, GLint, GLint, GLsizei);
typedef void(*gl20PCopyConvolutionFilter2D)(GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl20PDeleteLists)(GLuint, GLsizei);
typedef void(*gl20PDepthFunc)(GLenum);
typedef void(*gl20PDepthRange)(GLclampd, GLclampd);
typedef void(*gl20PEnable)(GLenum);
typedef void(*gl20PDisable)(GLenum);
typedef void(*gl20PDrawBuffer)(GLenum);
typedef void(*gl20PDrawPixels)(GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PEdgeFlag)(GLboolean);
typedef void(*gl20PEdgeFlagv)(GLboolean*);
typedef void(*gl20PEdgeFlagPointer)(GLsizei, GLvoid*);
typedef void(*gl20PEnableClientState)(GLenum);
typedef void(*gl20PDisableClientState)(GLenum);
typedef void(*gl20PEvalCoord1d)(GLdouble);
typedef void(*gl20PEvalCoord1f)(GLfloat);
typedef void(*gl20PEvalCoord2d)(GLdouble, GLdouble);
typedef void(*gl20PEvalCoord2f)(GLfloat, GLfloat);
typedef void(*gl20PEvalCoord1dv)(GLdouble*);
typedef void(*gl20PEvalCoord1fv)(GLfloat*);
typedef void(*gl20PEvalCoord2dv)(GLdouble*);
typedef void(*gl20PEvalCoord2fv)(GLfloat*);
typedef void(*gl20PEvalMesh1)(GLenum, GLint, GLint);
typedef void(*gl20PEvalMesh2)(GLenum, GLint, GLint, GLint, GLint);
typedef void(*gl20PEvalPoint1)(GLint);
typedef void(*gl20PEvalPoint2)(GLint, GLint);
typedef void(*gl20PFeedbackBuffer)(GLsizei, GLenum, GLfloat*);
typedef void(*gl20PFinish)();
typedef void(*gl20PFlush)();
typedef void(*gl20PFogf)(GLenum, GLfloat);
typedef void(*gl20PFogi)(GLenum, GLint);
typedef void(*gl20PFogfv)(GLenum, GLfloat*);
typedef void(*gl20PFogiv)(GLenum, GLint*);
typedef void(*gl20PFrontFace)(GLenum);
typedef void(*gl20PFrustum)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef GLuint(*gl20PGenLists)(GLsizei);
typedef void(*gl20PGetBooleanv)(GLenum, GLboolean*);
typedef void(*gl20PGetDoublev)(GLenum, GLdouble*);
typedef void(*gl20PGetFloatv)(GLenum, GLfloat*);
typedef void(*gl20PGetIntegerv)(GLenum, GLint*);
typedef void(*gl20PGetClipPlane)(GLenum, GLdouble*);
typedef GLenum(*gl20PGetError)();
typedef void(*gl20PGetLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl20PGetMapdv)(GLenum, GLenum, GLdouble*);
typedef void(*gl20PGetMapfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetMapiv)(GLenum, GLenum, GLint*);
typedef void(*gl20PGetMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl20PGetPixelMapfv)(GLenum, GLfloat*);
typedef void(*gl20PGetPixelMapuiv)(GLenum, GLuint*);
typedef void(*gl20PGetPixelMapusv)(GLenum, GLushort*);
typedef void(*gl20PGetPolygonStipple)(GLubyte*);
typedef GLubyte*(*gl20PGetString)(GLenum);
typedef void(*gl20PGetTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl20PGetTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl20PGetTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl20PGetTexImage)(GLenum, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl20PGetTexLevelParameterfv)(GLenum, GLint, GLenum, GLfloat*);
typedef void(*gl20PGetTexLevelParameteriv)(GLenum, GLint, GLenum, GLint*);
typedef void(*gl20PGetTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PGetTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl20PHint)(GLenum, GLenum);
typedef void(*gl20PIndexd)(GLdouble);
typedef void(*gl20PIndexf)(GLfloat);
typedef void(*gl20PIndexi)(GLint);
typedef void(*gl20PIndexs)(GLshort);
typedef void(*gl20PIndexub)(GLubyte);
typedef void(*gl20PIndexdv)(GLdouble*);
typedef void(*gl20PIndexfv)(GLfloat*);
typedef void(*gl20PIndexiv)(GLint*);
typedef void(*gl20PIndexsv)(GLshort*);
typedef void(*gl20PIndexubv)(GLubyte*);
typedef void(*gl20PIndexMask)(GLuint);
typedef void(*gl20PIndexPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl20PInitNames)();
typedef void(*gl20PInterleavedArrays)(GLenum, GLsizei, GLvoid*);
typedef void(*gl20PIsEnabled)(GLenum);
typedef GLboolean(*gl20PIsList)(GLuint);
typedef void(*gl20PLightf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PLighti)(GLenum, GLenum, GLint);
typedef void(*gl20PLightfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PLightiv)(GLenum, GLenum, GLint*);
typedef void(*gl20PLightModelf)(GLenum, GLfloat);
typedef void(*gl20PLightModeli)(GLenum, GLint);
typedef void(*gl20PLightModelfv)(GLenum, GLfloat*);
typedef void(*gl20PLightModeliv)(GLenum, GLint*);
typedef void(*gl20PLineStipple)(GLint, GLushort);
typedef void(*gl20PLineWidth)(GLfloat);
typedef void(*gl20PListBase)(GLuint);
typedef void(*gl20PLoadIdentity)();
typedef void(*gl20PLoadMatrixd)(GLdouble*);
typedef void(*gl20PLoadMatrixf)(GLfloat*);
typedef void(*gl20PLoadName)(GLuint);
typedef void(*gl20PLogicOp)(GLenum);
typedef void(*gl20PMap1d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl20PMap1f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl20PMap2d)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*);
typedef void(*gl20PMap2f)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*);
typedef void(*gl20PMapGrid1d)(GLint, GLdouble, GLdouble);
typedef void(*gl20PMapGrid1f)(GLint, GLfloat, GLfloat);
typedef void(*gl20PMapGrid2d)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void(*gl20PMapGrid2f)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void(*gl20PMaterialf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PMateriali)(GLenum, GLenum, GLint);
typedef void(*gl20PMaterialfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PMaterialiv)(GLenum, GLenum, GLint*);
typedef void(*gl20PMatrixMode)(GLenum);
typedef void(*gl20PMultMatrixd)(GLdouble*);
typedef void(*gl20PMultMatrixf)(GLfloat*);
typedef void(*gl20PNewList)(GLuint, GLenum);
typedef void(*gl20PEndList)();
typedef void(*gl20PNormal3b)(GLbyte, GLbyte, GLbyte);
typedef void(*gl20PNormal3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PNormal3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PNormal3i)(GLint, GLint, GLint);
typedef void(*gl20PNormal3s)(GLshort, GLshort, GLshort);
typedef void(*gl20PNormal3bv)(GLbyte*);
typedef void(*gl20PNormal3dv)(GLdouble*);
typedef void(*gl20PNormal3fv)(GLfloat*);
typedef void(*gl20PNormal3iv)(GLint*);
typedef void(*gl20PNormal3sv)(GLshort*);
typedef void(*gl20PNormalPointer)(GLenum, GLsizei, GLvoid*);
typedef void(*gl20POrtho)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PPassThrough)(GLfloat);
typedef void(*gl20PPixelMapfv)(GLenum, GLsizei, GLfloat*);
typedef void(*gl20PPixelMapuiv)(GLenum, GLsizei, GLuint*);
typedef void(*gl20PPixelMapusv)(GLenum, GLsizei, GLushort*);
typedef void(*gl20PPixelStoref)(GLenum, GLfloat);
typedef void(*gl20PPixelStorei)(GLenum, GLint);
typedef void(*gl20PPixelTransferf)(GLenum, GLfloat);
typedef void(*gl20PPixelTransferi)(GLenum, GLint);
typedef void(*gl20PPixelZoom)(GLfloat, GLfloat);
typedef void(*gl20PPointSize)(GLfloat);
typedef void(*gl20PPolygonMode)(GLenum, GLenum);
typedef void(*gl20PPolygonStipple)(GLubyte*);
typedef void(*gl20PPrioritizeTextures)(GLsizei, GLuint*, GLclampf*);
typedef void(*gl20PPushAttrib)(GLbitfield);
typedef void(*gl20PPopAttrib)();
typedef void(*gl20PPushClientAttrib)(GLbitfield);
typedef void(*gl20PPopClientAttrib)();
typedef void(*gl20PPushMatrix)();
typedef void(*gl20PPopMatrix)();
typedef void(*gl20PPushName)(GLuint);
typedef void(*gl20PPopName)();
typedef void(*gl20PRasterPos2d)(GLdouble, GLdouble);
typedef void(*gl20PRasterPos2f)(GLfloat, GLfloat);
typedef void(*gl20PRasterPos2i)(GLint, GLint);
typedef void(*gl20PRasterPos2s)(GLshort, GLshort);
typedef void(*gl20PRasterPos3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PRasterPos3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PRasterPos3i)(GLint, GLint, GLint);
typedef void(*gl20PRasterPos3s)(GLshort, GLshort, GLshort);
typedef void(*gl20PRasterPos4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PRasterPos4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PRasterPos4i)(GLint, GLint, GLint, GLint);
typedef void(*gl20PRasterPos4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl20PRasterPos2dv)(GLdouble*);
typedef void(*gl20PRasterPos2fv)(GLfloat*);
typedef void(*gl20PRasterPos2iv)(GLint*);
typedef void(*gl20PRasterPos2sv)(GLshort*);
typedef void(*gl20PRasterPos3dv)(GLdouble*);
typedef void(*gl20PRasterPos3fv)(GLfloat*);
typedef void(*gl20PRasterPos3iv)(GLint*);
typedef void(*gl20PRasterPos3sv)(GLshort*);
typedef void(*gl20PRasterPos4dv)(GLdouble*);
typedef void(*gl20PRasterPos4fv)(GLfloat*);
typedef void(*gl20PRasterPos4iv)(GLint*);
typedef void(*gl20PRasterPos4sv)(GLshort*);
typedef void(*gl20PReadBuffer)(GLenum);
typedef void(*gl20PReadPixels)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PRectd)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PRectf)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PRecti)(GLint, GLint, GLint, GLint);
typedef void(*gl20PRects)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl20PRectdv)(GLdouble*, GLdouble*);
typedef void(*gl20PRectfv)(GLfloat*, GLfloat*);
typedef void(*gl20PRectiv)(GLint*, GLint*);
typedef void(*gl20PRectsv)(GLshort*, GLshort*);
typedef GLint(*gl20PRenderMode)(GLenum);
typedef void(*gl20PRotated)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PRotatef)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PScaled)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PScalef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PScissor)(GLint, GLint, GLsizei, GLsizei);
typedef void(*gl20PSelectBuffer)(GLsizei, GLuint*);
typedef void(*gl20PShadeModel)(GLenum);
typedef void(*gl20PStencilFunc)(GLenum, GLint, GLuint);
typedef void(*gl20PStencilMask)(GLuint);
typedef void(*gl20PStencilOp)(GLenum, GLenum, GLenum);
typedef void(*gl20PTexCoord1d)(GLdouble);
typedef void(*gl20PTexCoord1f)(GLfloat);
typedef void(*gl20PTexCoord1i)(GLint);
typedef void(*gl20PTexCoord1s)(GLshort);
typedef void(*gl20PTexCoord2d)(GLdouble, GLdouble);
typedef void(*gl20PTexCoord2f)(GLfloat, GLfloat);
typedef void(*gl20PTexCoord2i)(GLint, GLint);
typedef void(*gl20PTexCoord2s)(GLshort, GLshort);
typedef void(*gl20PTexCoord3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PTexCoord3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PTexCoord3i)(GLint, GLint, GLint);
typedef void(*gl20PTexCoord3s)(GLshort, GLshort, GLshort);
typedef void(*gl20PTexCoord4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PTexCoord4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PTexCoord4i)(GLint, GLint, GLint, GLint);
typedef void(*gl20PTexCoord4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl20PTexCoord1dv)(GLdouble*);
typedef void(*gl20PTexCoord1fv)(GLfloat*);
typedef void(*gl20PTexCoord1iv)(GLint*);
typedef void(*gl20PTexCoord1sv)(GLshort*);
typedef void(*gl20PTexCoord2dv)(GLdouble*);
typedef void(*gl20PTexCoord2fv)(GLfloat*);
typedef void(*gl20PTexCoord2iv)(GLint*);
typedef void(*gl20PTexCoord2sv)(GLshort*);
typedef void(*gl20PTexCoord3dv)(GLdouble*);
typedef void(*gl20PTexCoord3fv)(GLfloat*);
typedef void(*gl20PTexCoord3iv)(GLint*);
typedef void(*gl20PTexCoord3sv)(GLshort*);
typedef void(*gl20PTexCoord4dv)(GLdouble*);
typedef void(*gl20PTexCoord4fv)(GLfloat*);
typedef void(*gl20PTexCoord4iv)(GLint*);
typedef void(*gl20PTexCoord4sv)(GLshort*);
typedef void(*gl20PTexCoordPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PTexEnvf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PTexEnvi)(GLenum, GLenum, GLint);
typedef void(*gl20PTexEnvfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PTexEnviv)(GLenum, GLenum, GLint*);
typedef void(*gl20PTexGend)(GLenum, GLenum, GLdouble);
typedef void(*gl20PTexGenf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PTexGeni)(GLenum, GLenum, GLint);
typedef void(*gl20PTexGendv)(GLenum, GLenum, GLdouble*);
typedef void(*gl20PTexGenfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PTexGeniv)(GLenum, GLenum, GLint*);
typedef void(*gl20PTexImage1D)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTexImage2D)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTexImage3DEXT)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTexParameterf)(GLenum, GLenum, GLfloat);
typedef void(*gl20PTexParameteri)(GLenum, GLenum, GLint);
typedef void(*gl20PTexParameterfv)(GLenum, GLenum, GLfloat*);
typedef void(*gl20PTexParameteriv)(GLenum, GLenum, GLint*);
typedef void(*gl20PTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTexSubImage3DEXT)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid*);
typedef void(*gl20PTranslated)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PTranslatef)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PVertex2s)(GLshort, GLshort);
typedef void(*gl20PVertex2i)(GLint, GLint);
typedef void(*gl20PVertex2f)(GLfloat, GLfloat);
typedef void(*gl20PVertex2d)(GLdouble, GLdouble);
typedef void(*gl20PVertex3s)(GLshort, GLshort, GLshort);
typedef void(*gl20PVertex3i)(GLint, GLint, GLint);
typedef void(*gl20PVertex3f)(GLfloat, GLfloat, GLfloat);
typedef void(*gl20PVertex3d)(GLdouble, GLdouble, GLdouble);
typedef void(*gl20PVertex4s)(GLshort, GLshort, GLshort, GLshort);
typedef void(*gl20PVertex4i)(GLint, GLint, GLint, GLint);
typedef void(*gl20PVertex4f)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void(*gl20PVertex4d)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void(*gl20PVertexPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PViewport)(GLint, GLint, GLsizei, GLsizei);
typedef GLboolean(*gl20PAreTexturesResident)(GLsizei, GLuint*, GLboolean*);
typedef void(*gl20PArrayElement)(GLint);
typedef void(*gl20PDrawArrays)(GLenum, GLint, GLsizei);
typedef void(*gl20PDrawElements)(GLenum, GLsizei, GLenum, GLvoid*);
typedef void(*gl20PGetPointerv)(GLenum, GLvoid*);
typedef void(*gl20PPolygonOffset)(GLfloat, GLfloat);
typedef void(*gl20PCopyTexImage1D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void(*gl20PCopyTexImage2D)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void(*gl20PCopyTexSubImage1D)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void(*gl20PCopyTexSubImage2D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl20PBindTexture)(GLenum, GLuint);
typedef void(*gl20PDeleteTextures)(GLsizei, GLuint*);
typedef void(*gl20PGenTextures)(GLsizei, GLuint*);
typedef GLboolean(*gl20PIsTexture)(GLuint);
typedef void(*gl20PColorPointer)(GLint, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PBlendColorEXT)(GLclampf, GLclampf, GLclampf, GLclampf);
typedef void(*gl20PBlendEquation)(GLenum);
typedef void(*gl20PCopyTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void(*gl20PActiveTexture)(GLenum);
typedef void(*gl20PClientActiveTexture)(GLenum);
typedef void(*gl20PCompressedTexImage1D)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl20PCompressedTexImage2D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl20PCompressedTexImage3D)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid*);
typedef void(*gl20PCompressedTexSubImage1D)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PCompressedTexSubImage2D)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PCompressedTexSubImage3D)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid*);
typedef void(*gl20PBlendFuncSeparate)(GLenum, GLenum, GLenum, GLenum);
typedef void(*gl20PBeginQuery)(GLenum, GLuint);
typedef void(*gl20PBindBuffer)(GLenum, GLuint);
typedef void(*gl20PBufferData)(GLenum, GLsizeiptr, GLvoid*, GLenum);
typedef void(*gl20PBufferSubData)(GLenum, GLenum, GLsizeiptr, GLvoid*);
typedef void(*gl20PAttachShader)(GLuint, GLuint);
typedef void(*gl20PBindAttribLocation)(GLuint, GLuint, GLchar*);
typedef void(*gl20PBlendEquationSeperate)(GLenum, GLenum);
typedef void(*gl20PCompileShader)(GLuint);
typedef GLuint(*gl20PCreateProgram)();
typedef GLuint(*gl20PCreateShader)(GLenum);

typedef struct {
    gl20PAccum fnAccum;
    gl20PAlphaFunc fnAlphaFunc;
    gl20PBegin fnBegin;
    gl20PEnd fnEnd;
    gl20PBitmap fnBitmap;
    gl20PBlendFunc fnBlendFunc;
    gl20PCallList fnCallList;
    gl20PCallLists fnCallLists;
    gl20PClear fnClear;
    gl20PClearAccum fnClearAccum;
    gl20PClearColor fnClearColor;
    gl20PClearDepth fnClearDepth;
    gl20PClearIndex fnClearIndex;
    gl20PClearStencil fnClearStencil;
    gl20PClipPlane fnClipPlane;
    gl20PColor3b fnColor3b;
    gl20PColor3d fnColor3d;
    gl20PColor3f fnColor3f;
    gl20PColor3i fnColor3i;
    gl20PColor3s fnColor3s;
    gl20PColor3ub fnColor3ub;
    gl20PColor3ui fnColor3ui;
    gl20PColor3us fnColor3us;
    gl20PColor4b fnColor4b;
    gl20PColor4d fnColor4d;
    gl20PColor4f fnColor4f;
    gl20PColor4i fnColor4i;
    gl20PColor4s fnColor4s;
    gl20PColor4ub fnColor4ub;
    gl20PColor4ui fnColor4ui;
    gl20PColor4us fnColor4us;
    gl20PColor3bv fnColor3bv;
    gl20PColor3dv fnColor3dv;
    gl20PColor3fv fnColor3fv;
    gl20PColor3iv fnColor3iv;
    gl20PColor3sv fnColor3sv;
    gl20PColor3ubv fnColor3ubv;
    gl20PColor3uiv fnColor3uiv;
    gl20PColor3usv fnColor3usv;
    gl20PColor4bv fnColor4bv;
    gl20PColor4dv fnColor4dv;
    gl20PColor4fv fnColor4fv;
    gl20PColor4iv fnColor4iv;
    gl20PColor4sv fnColor4sv;
    gl20PColor4ubv fnColor4ubv;
    gl20PColor4uiv fnColor4uiv;
    gl20PColor4usv fnColor4usv;
    gl20PColorMask fnColorMask;
    gl20PColorMaterial fnColorMaterial;
    gl20PColorTable fnColorTable;
    gl20PColorTableParameterfv fnColorTableParameterfv;
    gl20PColorTableParameteriv fnColorTableParameteriv;
    gl20PColorSubTable fnColorSubTable;
    gl20PCopyPixels fnCopyPixels;
    gl20PCullFace fnCullFace;
    gl20PConvolutionFilter1D fnConvolutionFilter1D;
    gl20PConvolutionFilter2D fnConvolutionFilter2D;
    gl20PConvolutionParameterf fnConvolutionParameterf;
    gl20PConvolutionParameteri fnConvolutionParameteri;
    gl20PCopyColorTable fnCopyColorTable;
    gl20PCopyColorSubTable fnCopyColorSubTable;
    gl20PCopyConvolutionFilter1D fnCopyConvolutionFilter1D;
    gl20PCopyConvolutionFilter2D fnCopyConvolutionFilter2D;
    gl20PDeleteLists fnDeleteLists;
    gl20PDepthFunc fnDepthFunc;
    gl20PDepthRange fnDepthRange;
    gl20PEnable fnEnable;
    gl20PDisable fnDisable;
    gl20PDrawBuffer fnDrawBuffer;
    gl20PDrawPixels fnDrawPixels;
    gl20PEdgeFlag fnEdgeFlag;
    gl20PEdgeFlagv fnEdgeFlagv;
    gl20PEdgeFlagPointer fnEdgeFlagPointer;
    gl20PEnableClientState fnEnableClientState;
    gl20PDisableClientState fnDisableClientState;
    gl20PEvalCoord1d fnEvalCoord1d;
    gl20PEvalCoord1f fnEvalCoord1f;
    gl20PEvalCoord2d fnEvalCoord2d;
    gl20PEvalCoord2f fnEvalCoord2f;
    gl20PEvalCoord1dv fnEvalCoord1dv;
    gl20PEvalCoord1fv fnEvalCoord1fv;
    gl20PEvalCoord2dv fnEvalCoord2dv;
    gl20PEvalCoord2fv fnEvalCoord2fv;
    gl20PEvalMesh1 fnEvalMesh1;
    gl20PEvalMesh2 fnEvalMesh2;
    gl20PEvalPoint1 fnEvalPoint1;
    gl20PEvalPoint2 fnEvalPoint2;
    gl20PFeedbackBuffer fnFeedbackBuffer;
    gl20PFinish fnFinish;
    gl20PFlush fnFlush;
    gl20PFogf fnFogf;
    gl20PFogi fnFogi;
    gl20PFogfv fnFogfv;
    gl20PFogiv fnFogiv;
    gl20PFrontFace fnFrontFace;
    gl20PFrustum fnFrustum;
    gl20PGenLists fnGenLists;
    gl20PGetBooleanv fnGetBooleanv;
    gl20PGetDoublev fnGetDoublev;
    gl20PGetFloatv fnGetFloatv;
    gl20PGetIntegerv fnGetIntegerv;
    gl20PGetClipPlane fnGetClipPlane;
    gl20PGetError fnGetError;
    gl20PGetLightfv fnGetLightfv;
    gl20PGetLightiv fnGetLightiv;
    gl20PGetMapdv fnGetMapdv;
    gl20PGetMapfv fnGetMapfv;
    gl20PGetMapiv fnGetMapiv;
    gl20PGetMaterialfv fnGetMaterialfv;
    gl20PGetMaterialiv fnGetMaterialiv;
    gl20PGetPixelMapfv fnGetPixelMapfv;
    gl20PGetPixelMapuiv fnGetPixelMapuiv;
    gl20PGetPixelMapusv fnGetPixelMapusv;
    gl20PGetPolygonStipple fnGetPolygonStipple;
    gl20PGetString fnGetString;
    gl20PGetTexEnvfv fnGetTexEnvfv;
    gl20PGetTexEnviv fnGetTexEnviv;
    gl20PGetTexGendv fnGetTexGendv;
    gl20PGetTexGenfv fnGetTexGenfv;
    gl20PGetTexGeniv fnGetTexGeniv;
    gl20PGetTexImage fnGetTexImage;
    gl20PGetTexLevelParameterfv fnGetTexLevelParameterfv;
    gl20PGetTexLevelParameteriv fnGetTexLevelParameteriv;
    gl20PGetTexParameterfv fnGetTexParameterfv;
    gl20PGetTexParameteriv fnGetTexParameteriv;
    gl20PHint fnHint;
    gl20PIndexd fnIndexd;
    gl20PIndexf fnIndexf;
    gl20PIndexi fnIndexi;
    gl20PIndexs fnIndexs;
    gl20PIndexub fnIndexub;
    gl20PIndexdv fnIndexdv;
    gl20PIndexfv fnIndexfv;
    gl20PIndexiv fnIndexiv;
    gl20PIndexsv fnIndexsv;
    gl20PIndexubv fnIndexubv;
    gl20PIndexMask fnIndexMask;
    gl20PIndexPointer fnIndexPointer;
    gl20PInitNames fnInitNames;
    gl20PInterleavedArrays fnInterleavedArrays;
    gl20PIsEnabled fnIsEnabled;
    gl20PIsList fnIsList;
    gl20PLightf fnLightf;
    gl20PLighti fnLighti;
    gl20PLightfv fnLightfv;
    gl20PLightiv fnLightiv;
    gl20PLightModelf fnLightModelf;
    gl20PLightModeli fnLightModeli;
    gl20PLightModelfv fnLightModelfv;
    gl20PLightModeliv fnLightModeliv;
    gl20PLineStipple fnLineStipple;
    gl20PLineWidth fnLineWidth;
    gl20PListBase fnListBase;
    gl20PLoadIdentity fnLoadIdentity;
    gl20PLoadMatrixd fnLoadMatrixd;
    gl20PLoadMatrixf fnLoadMatrixf;
    gl20PLoadName fnLoadName;
    gl20PLogicOp fnLogicOp;
    gl20PMap1d fnMap1d;
    gl20PMap1f fnMap1f;
    gl20PMap2d fnMap2d;
    gl20PMap2f fnMap2f;
    gl20PMapGrid1d fnMapGrid1d;
    gl20PMapGrid1f fnMapGrid1f;
    gl20PMapGrid2d fnMapGrid2d;
    gl20PMapGrid2f fnMapGrid2f;
    gl20PMaterialf fnMaterialf;
    gl20PMateriali fnMateriali;
    gl20PMaterialfv fnMaterialfv;
    gl20PMaterialiv fnMaterialiv;
    gl20PMatrixMode fnMatrixMode;
    gl20PMultMatrixd fnMultMatrixd;
    gl20PMultMatrixf fnMultMatrixf;
    gl20PNewList fnNewList;
    gl20PEndList fnEndList;
    gl20PNormal3b fnNormal3b;
    gl20PNormal3d fnNormal3d;
    gl20PNormal3f fnNormal3f;
    gl20PNormal3i fnNormal3i;
    gl20PNormal3s fnNormal3s;
    gl20PNormal3bv fnNormal3bv;
    gl20PNormal3dv fnNormal3dv;
    gl20PNormal3fv fnNormal3fv;
    gl20PNormal3iv fnNormal3iv;
    gl20PNormal3sv fnNormal3sv;
    gl20PNormalPointer fnNormalPointer;
    gl20POrtho fnOrtho;
    gl20PPassThrough fnPassThrough;
    gl20PPixelMapfv fnPixelMapfv;
    gl20PPixelMapuiv fnPixelMapuiv;
    gl20PPixelMapusv fnPixelMapusv;
    gl20PPixelStoref fnPixelStoref;
    gl20PPixelStorei fnPixelStorei;
    gl20PPixelTransferf fnPixelTransferf;
    gl20PPixelTransferi fnPixelTransferi;
    gl20PPixelZoom fnPixelZoom;
    gl20PPointSize fnPointSize;
    gl20PPolygonMode fnPolygonMode;
    gl20PPolygonStipple fnPolygonStipple;
    gl20PPrioritizeTextures fnPrioritizeTextures;
    gl20PPushAttrib fnPushAttrib;
    gl20PPopAttrib fnPopAttrib;
    gl20PPushClientAttrib fnPushClientAttrib;
    gl20PPopClientAttrib fnPopClientAttrib;
    gl20PPushMatrix fnPushMatrix;
    gl20PPopMatrix fnPopMatrix;
    gl20PPushName fnPushName;
    gl20PPopName fnPopName;
    gl20PRasterPos2d fnRasterPos2d;
    gl20PRasterPos2f fnRasterPos2f;
    gl20PRasterPos2i fnRasterPos2i;
    gl20PRasterPos2s fnRasterPos2s;
    gl20PRasterPos3d fnRasterPos3d;
    gl20PRasterPos3f fnRasterPos3f;
    gl20PRasterPos3i fnRasterPos3i;
    gl20PRasterPos3s fnRasterPos3s;
    gl20PRasterPos4d fnRasterPos4d;
    gl20PRasterPos4f fnRasterPos4f;
    gl20PRasterPos4i fnRasterPos4i;
    gl20PRasterPos4s fnRasterPos4s;
    gl20PRasterPos2dv fnRasterPos2dv;
    gl20PRasterPos2fv fnRasterPos2fv;
    gl20PRasterPos2iv fnRasterPos2iv;
    gl20PRasterPos2sv fnRasterPos2sv;
    gl20PRasterPos3dv fnRasterPos3dv;
    gl20PRasterPos3fv fnRasterPos3fv;
    gl20PRasterPos3iv fnRasterPos3iv;
    gl20PRasterPos3sv fnRasterPos3sv;
    gl20PRasterPos4dv fnRasterPos4dv;
    gl20PRasterPos4fv fnRasterPos4fv;
    gl20PRasterPos4iv fnRasterPos4iv;
    gl20PRasterPos4sv fnRasterPos4sv;
    gl20PReadBuffer fnReadBuffer;
    gl20PReadPixels fnReadPixels;
    gl20PRectd fnRectd;
    gl20PRectf fnRectf;
    gl20PRecti fnRecti;
    gl20PRects fnRects;
    gl20PRectdv fnRectdv;
    gl20PRectfv fnRectfv;
    gl20PRectiv fnRectiv;
    gl20PRectsv fnRectsv;
    gl20PRenderMode fnRenderMode;
    gl20PRotated fnRotated;
    gl20PRotatef fnRotatef;
    gl20PScaled fnScaled;
    gl20PScalef fnScalef;
    gl20PScissor fnScissor;
    gl20PSelectBuffer fnSelectBuffer;
    gl20PShadeModel fnShadeModel;
    gl20PStencilFunc fnStencilFunc;
    gl20PStencilMask fnStencilMask;
    gl20PStencilOp fnStencilOp;
    gl20PTexCoord1d fnTexCoord1d;
    gl20PTexCoord1f fnTexCoord1f;
    gl20PTexCoord1i fnTexCoord1i;
    gl20PTexCoord1s fnTexCoord1s;
    gl20PTexCoord2d fnTexCoord2d;
    gl20PTexCoord2f fnTexCoord2f;
    gl20PTexCoord2i fnTexCoord2i;
    gl20PTexCoord2s fnTexCoord2s;
    gl20PTexCoord3d fnTexCoord3d;
    gl20PTexCoord3f fnTexCoord3f;
    gl20PTexCoord3i fnTexCoord3i;
    gl20PTexCoord3s fnTexCoord3s;
    gl20PTexCoord4d fnTexCoord4d;
    gl20PTexCoord4f fnTexCoord4f;
    gl20PTexCoord4i fnTexCoord4i;
    gl20PTexCoord4s fnTexCoord4s;
    gl20PTexCoord1dv fnTexCoord1dv;
    gl20PTexCoord1fv fnTexCoord1fv;
    gl20PTexCoord1iv fnTexCoord1iv;
    gl20PTexCoord1sv fnTexCoord1sv;
    gl20PTexCoord2dv fnTexCoord2dv;
    gl20PTexCoord2fv fnTexCoord2fv;
    gl20PTexCoord2iv fnTexCoord2iv;
    gl20PTexCoord2sv fnTexCoord2sv;
    gl20PTexCoord3dv fnTexCoord3dv;
    gl20PTexCoord3fv fnTexCoord3fv;
    gl20PTexCoord3iv fnTexCoord3iv;
    gl20PTexCoord3sv fnTexCoord3sv;
    gl20PTexCoord4dv fnTexCoord4dv;
    gl20PTexCoord4fv fnTexCoord4fv;
    gl20PTexCoord4iv fnTexCoord4iv;
    gl20PTexCoord4sv fnTexCoord4sv;
    gl20PTexCoordPointer fnTexCoordPointer;
    gl20PTexEnvf fnTexEnvf;
    gl20PTexEnvi fnTexEnvi;
    gl20PTexEnvfv fnTexEnvfv;
    gl20PTexEnviv fnTexEnviv;
    gl20PTexGend fnTexGend;
    gl20PTexGenf fnTexGenf;
    gl20PTexGeni fnTexGeni;
    gl20PTexGendv fnTexGendv;
    gl20PTexGenfv fnTexGenfv;
    gl20PTexGeniv fnTexGeniv;
    gl20PTexImage1D fnTexImage1D;
    gl20PTexImage2D fnTexImage2D;
    gl20PTexImage3DEXT fnTexImage3DEXT;
    gl20PTexParameterf fnTexParameterf;
    gl20PTexParameteri fnTexParameteri;
    gl20PTexParameterfv fnTexParameterfv;
    gl20PTexParameteriv fnTexParameteriv;
    gl20PTexSubImage1D fnTexSubImage1D;
    gl20PTexSubImage2D fnTexSubImage2D;
    gl20PTexSubImage3DEXT fnTexSubImage3DEXT;
    gl20PTranslated fnTranslated;
    gl20PTranslatef fnTranslatef;
    gl20PVertex2s fnVertex2s;
    gl20PVertex2i fnVertex2i;
    gl20PVertex2f fnVertex2f;
    gl20PVertex2d fnVertex2d;
    gl20PVertex3s fnVertex3s;
    gl20PVertex3i fnVertex3i;
    gl20PVertex3f fnVertex3f;
    gl20PVertex3d fnVertex3d;
    gl20PVertex4s fnVertex4s;
    gl20PVertex4i fnVertex4i;
    gl20PVertex4f fnVertex4f;
    gl20PVertex4d fnVertex4d;
    gl20PVertexPointer fnVertexPointer;
    gl20PViewport fnViewport;
    gl20PAreTexturesResident fnAreTexturesResident;
    gl20PArrayElement fnArrayElement;
    gl20PDrawArrays fnDrawArrays;
    gl20PDrawElements fnDrawElements;
    gl20PGetPointerv fnGetPointerv;
    gl20PPolygonOffset fnPolygonOffset;
    gl20PCopyTexImage1D fnCopyTexImage1D;
    gl20PCopyTexImage2D fnCopyTexImage2D;
    gl20PCopyTexSubImage1D fnCopyTexSubImage1D;
    gl20PCopyTexSubImage2D fnCopyTexSubImage2D;
    gl20PBindTexture fnBindTexture;
    gl20PDeleteTextures fnDeleteTextures;
    gl20PGenTextures fnGenTextures;
    gl20PIsTexture fnIsTexture;
    gl20PColorPointer fnColorPointer;
    gl20PBlendColorEXT fnBlendColorEXT;
    gl20PBlendEquation fnBlendEquation;
    gl20PCopyTexSubImage3D fnCopyTexSubImage3D;
    gl20PActiveTexture fnActiveTexture;
    gl20PClientActiveTexture fnClientActiveTexture;
    gl20PCompressedTexImage1D fnCompressedTexImage1D;
    gl20PCompressedTexImage2D fnCompressedTexImage2D;
    gl20PCompressedTexImage3D fnCompressedTexImage3D;
    gl20PCompressedTexSubImage1D fnCompressedTexSubImage1D;
    gl20PCompressedTexSubImage2D fnCompressedTexSubImage2D;
    gl20PCompressedTexSubImage3D fnCompressedTexSubImage3D;
    gl20PBlendFuncSeparate fnBlendFuncSeparate;
    gl20PBeginQuery fnBeginQuery;
    gl20PBindBuffer fnBindBuffer;
    gl20PBufferData fnBufferData;
    gl20PBufferSubData fnBufferSubData;
    gl20PAttachShader fnAttachShader;
    gl20PBindAttribLocation fnBindAttribLocation;
    gl20PBlendEquationSeperate fnBlendEquationSeperate;
    gl20PCompileShader fnCompileShader;
    gl20PCreateProgram fnCreateProgram;
    gl20PCreateShader fnCreateShader;
} gl20Context;

extern gl20Context* gl20NewContext();
void gl20Accum(gl20Context* glc, GLenum op, GLfloat value);
void gl20AlphaFunc(gl20Context* glc, GLenum func, GLclampf ref);
void gl20Begin(gl20Context* glc, GLenum mode);
void gl20End(gl20Context* glc);
void gl20Bitmap(gl20Context* glc, GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
void gl20BlendFunc(gl20Context* glc, GLenum sfactor, GLenum dfactor);
void gl20CallList(gl20Context* glc, GLuint list);
void gl20CallLists(gl20Context* glc, GLsizei n, GLenum type, GLvoid* lists);
void gl20Clear(gl20Context* glc, GLbitfield mask);
void gl20ClearAccum(gl20Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl20ClearColor(gl20Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl20ClearDepth(gl20Context* glc, GLclampd depth);
void gl20ClearIndex(gl20Context* glc, GLfloat c);
void gl20ClearStencil(gl20Context* glc, GLint s);
void gl20ClipPlane(gl20Context* glc, GLenum plane, GLdouble* equation);
void gl20Color3b(gl20Context* glc, GLbyte red, GLbyte green, GLbyte blue);
void gl20Color3d(gl20Context* glc, GLdouble red, GLdouble green, GLdouble blue);
void gl20Color3f(gl20Context* glc, GLfloat red, GLfloat green, GLfloat blue);
void gl20Color3i(gl20Context* glc, GLint red, GLint green, GLint blue);
void gl20Color3s(gl20Context* glc, GLshort red, GLshort green, GLshort blue);
void gl20Color3ub(gl20Context* glc, GLubyte red, GLubyte green, GLubyte blue);
void gl20Color3ui(gl20Context* glc, GLuint red, GLuint green, GLuint blue);
void gl20Color3us(gl20Context* glc, GLushort red, GLushort green, GLushort blue);
void gl20Color4b(gl20Context* glc, GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void gl20Color4d(gl20Context* glc, GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void gl20Color4f(gl20Context* glc, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void gl20Color4i(gl20Context* glc, GLint red, GLint green, GLint blue, GLint alpha);
void gl20Color4s(gl20Context* glc, GLshort red, GLshort green, GLshort blue, GLshort alpha);
void gl20Color4ub(gl20Context* glc, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void gl20Color4ui(gl20Context* glc, GLuint red, GLuint green, GLuint blue, GLuint alpha);
void gl20Color4us(gl20Context* glc, GLushort red, GLushort green, GLushort blue, GLushort alpha);
void gl20Color3bv(gl20Context* glc, GLbyte* v);
void gl20Color3dv(gl20Context* glc, GLdouble* v);
void gl20Color3fv(gl20Context* glc, GLfloat* v);
void gl20Color3iv(gl20Context* glc, GLint* v);
void gl20Color3sv(gl20Context* glc, GLshort* v);
void gl20Color3ubv(gl20Context* glc, GLubyte* v);
void gl20Color3uiv(gl20Context* glc, GLuint* v);
void gl20Color3usv(gl20Context* glc, GLushort* v);
void gl20Color4bv(gl20Context* glc, GLbyte* v);
void gl20Color4dv(gl20Context* glc, GLdouble* v);
void gl20Color4fv(gl20Context* glc, GLfloat* v);
void gl20Color4iv(gl20Context* glc, GLint* v);
void gl20Color4sv(gl20Context* glc, GLshort* v);
void gl20Color4ubv(gl20Context* glc, GLubyte* v);
void gl20Color4uiv(gl20Context* glc, GLuint* v);
void gl20Color4usv(gl20Context* glc, GLushort* v);
void gl20ColorMask(gl20Context* glc, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void gl20ColorMaterial(gl20Context* glc, GLenum face, GLenum mode);
void gl20ColorTable(gl20Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl20ColorTableParameterfv(gl20Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl20ColorTableParameteriv(gl20Context* glc, GLenum target, GLenum pname, GLint* params);
void gl20ColorSubTable(gl20Context* glc, GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
void gl20CopyPixels(gl20Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void gl20CullFace(gl20Context* glc, GLenum mode);
void gl20ConvolutionFilter1D(gl20Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* data);
void gl20ConvolutionFilter2D(gl20Context* glc, GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* data);
void gl20ConvolutionParameterf(gl20Context* glc, GLenum target, GLenum pname, GLfloat params);
void gl20ConvolutionParameteri(gl20Context* glc, GLenum target, GLenum pname, GLint params);
void gl20CopyColorTable(gl20Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl20CopyColorSubTable(gl20Context* glc, GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void gl20CopyConvolutionFilter1D(gl20Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void gl20CopyConvolutionFilter2D(gl20Context* glc, GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void gl20DeleteLists(gl20Context* glc, GLuint list, GLsizei range);
void gl20DepthFunc(gl20Context* glc, GLenum func);
void gl20DepthRange(gl20Context* glc, GLclampd zNear, GLclampd zFar);
void gl20Enable(gl20Context* glc, GLenum cap);
void gl20Disable(gl20Context* glc, GLenum cap);
void gl20DrawBuffer(gl20Context* glc, GLenum mode);
void gl20DrawPixels(gl20Context* glc, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl20EdgeFlag(gl20Context* glc, GLboolean flag);
void gl20EdgeFlagv(gl20Context* glc, GLboolean* flag);
void gl20EdgeFlagPointer(gl20Context* glc, GLsizei stride, GLvoid* pointer);
void gl20EnableClientState(gl20Context* glc, GLenum cap);
void gl20DisableClientState(gl20Context* glc, GLenum cap);
void gl20EvalCoord1d(gl20Context* glc, GLdouble u);
void gl20EvalCoord1f(gl20Context* glc, GLfloat u);
void gl20EvalCoord2d(gl20Context* glc, GLdouble u, GLdouble v);
void gl20EvalCoord2f(gl20Context* glc, GLfloat u, GLfloat v);
void gl20EvalCoord1dv(gl20Context* glc, GLdouble* u);
void gl20EvalCoord1fv(gl20Context* glc, GLfloat* u);
void gl20EvalCoord2dv(gl20Context* glc, GLdouble* u);
void gl20EvalCoord2fv(gl20Context* glc, GLfloat* u);
void gl20EvalMesh1(gl20Context* glc, GLenum mode, GLint i1, GLint i2);
void gl20EvalMesh2(gl20Context* glc, GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void gl20EvalPoint1(gl20Context* glc, GLint i);
void gl20EvalPoint2(gl20Context* glc, GLint i, GLint j);
void gl20FeedbackBuffer(gl20Context* glc, GLsizei size, GLenum type, GLfloat* buffer);
void gl20Finish(gl20Context* glc);
void gl20Flush(gl20Context* glc);
void gl20Fogf(gl20Context* glc, GLenum pname, GLfloat param);
void gl20Fogi(gl20Context* glc, GLenum pname, GLint param);
void gl20Fogfv(gl20Context* glc, GLenum pname, GLfloat* params);
void gl20Fogiv(gl20Context* glc, GLenum pname, GLint* params);
void gl20FrontFace(gl20Context* glc, GLenum mode);
void gl20Frustum(gl20Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLuint gl20GenLists(gl20Context* glc, GLsizei range);
void gl20GetBooleanv(gl20Context* glc, GLenum pname, GLboolean* params);
void gl20GetDoublev(gl20Context* glc, GLenum pname, GLdouble* params);
void gl20GetFloatv(gl20Context* glc, GLenum pname, GLfloat* params);
void gl20GetIntegerv(gl20Context* glc, GLenum pname, GLint* params);
void gl20GetClipPlane(gl20Context* glc, GLenum plane, GLdouble* equation);
GLenum gl20GetError(gl20Context* glc);
void gl20GetLightfv(gl20Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl20GetLightiv(gl20Context* glc, GLenum light, GLenum pname, GLint* params);
void gl20GetMapdv(gl20Context* glc, GLenum target, GLenum query, GLdouble* v);
void gl20GetMapfv(gl20Context* glc, GLenum target, GLenum query, GLfloat* v);
void gl20GetMapiv(gl20Context* glc, GLenum target, GLenum query, GLint* v);
void gl20GetMaterialfv(gl20Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl20GetMaterialiv(gl20Context* glc, GLenum face, GLenum pname, GLint* params);
void gl20GetPixelMapfv(gl20Context* glc, GLenum map, GLfloat* values);
void gl20GetPixelMapuiv(gl20Context* glc, GLenum map, GLuint* values);
void gl20GetPixelMapusv(gl20Context* glc, GLenum map, GLushort* values);
void gl20GetPolygonStipple(gl20Context* glc, GLubyte* mask);
GLubyte* gl20GetString(gl20Context* glc, GLenum name);
void gl20GetTexEnvfv(gl20Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl20GetTexEnviv(gl20Context* glc, GLenum target, GLenum pname, GLint* params);
void gl20GetTexGendv(gl20Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl20GetTexGenfv(gl20Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl20GetTexGeniv(gl20Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl20GetTexImage(gl20Context* glc, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void gl20GetTexLevelParameterfv(gl20Context* glc, GLenum target, GLint level, GLenum pname, GLfloat* params);
void gl20GetTexLevelParameteriv(gl20Context* glc, GLenum target, GLint level, GLenum pname, GLint* params);
void gl20GetTexParameterfv(gl20Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl20GetTexParameteriv(gl20Context* glc, GLenum target, GLenum pname, GLint* params);
void gl20Hint(gl20Context* glc, GLenum target, GLenum mode);
void gl20Indexd(gl20Context* glc, GLdouble c);
void gl20Indexf(gl20Context* glc, GLfloat c);
void gl20Indexi(gl20Context* glc, GLint c);
void gl20Indexs(gl20Context* glc, GLshort c);
void gl20Indexub(gl20Context* glc, GLubyte c);
void gl20Indexdv(gl20Context* glc, GLdouble* c);
void gl20Indexfv(gl20Context* glc, GLfloat* c);
void gl20Indexiv(gl20Context* glc, GLint* c);
void gl20Indexsv(gl20Context* glc, GLshort* c);
void gl20Indexubv(gl20Context* glc, GLubyte* c);
void gl20IndexMask(gl20Context* glc, GLuint mask);
void gl20IndexPointer(gl20Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl20InitNames(gl20Context* glc);
void gl20InterleavedArrays(gl20Context* glc, GLenum format, GLsizei stride, GLvoid* pointer);
void gl20IsEnabled(gl20Context* glc, GLenum cap);
GLboolean gl20IsList(gl20Context* glc, GLuint list);
void gl20Lightf(gl20Context* glc, GLenum light, GLenum pname, GLfloat param);
void gl20Lighti(gl20Context* glc, GLenum light, GLenum pname, GLint param);
void gl20Lightfv(gl20Context* glc, GLenum light, GLenum pname, GLfloat* params);
void gl20Lightiv(gl20Context* glc, GLenum light, GLenum pname, GLint* params);
void gl20LightModelf(gl20Context* glc, GLenum pname, GLfloat param);
void gl20LightModeli(gl20Context* glc, GLenum pname, GLint param);
void gl20LightModelfv(gl20Context* glc, GLenum pname, GLfloat* params);
void gl20LightModeliv(gl20Context* glc, GLenum pname, GLint* params);
void gl20LineStipple(gl20Context* glc, GLint factor, GLushort pattern);
void gl20LineWidth(gl20Context* glc, GLfloat width);
void gl20ListBase(gl20Context* glc, GLuint base);
void gl20LoadIdentity(gl20Context* glc);
void gl20LoadMatrixd(gl20Context* glc, GLdouble* m);
void gl20LoadMatrixf(gl20Context* glc, GLfloat* m);
void gl20LoadName(gl20Context* glc, GLuint name);
void gl20LogicOp(gl20Context* glc, GLenum opcode);
void gl20Map1d(gl20Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
void gl20Map1f(gl20Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
void gl20Map2d(gl20Context* glc, GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
void gl20Map2f(gl20Context* glc, GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
void gl20MapGrid1d(gl20Context* glc, GLint un, GLdouble u1, GLdouble u2);
void gl20MapGrid1f(gl20Context* glc, GLint un, GLfloat u1, GLfloat u2);
void gl20MapGrid2d(gl20Context* glc, GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void gl20MapGrid2f(gl20Context* glc, GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void gl20Materialf(gl20Context* glc, GLenum face, GLenum pname, GLfloat param);
void gl20Materiali(gl20Context* glc, GLenum face, GLenum pname, GLint param);
void gl20Materialfv(gl20Context* glc, GLenum face, GLenum pname, GLfloat* params);
void gl20Materialiv(gl20Context* glc, GLenum face, GLenum pname, GLint* params);
void gl20MatrixMode(gl20Context* glc, GLenum mode);
void gl20MultMatrixd(gl20Context* glc, GLdouble* m);
void gl20MultMatrixf(gl20Context* glc, GLfloat* m);
void gl20NewList(gl20Context* glc, GLuint list, GLenum mode);
void gl20EndList(gl20Context* glc);
void gl20Normal3b(gl20Context* glc, GLbyte nx, GLbyte ny, GLbyte nz);
void gl20Normal3d(gl20Context* glc, GLdouble nx, GLdouble ny, GLdouble nz);
void gl20Normal3f(gl20Context* glc, GLfloat nx, GLfloat ny, GLfloat nz);
void gl20Normal3i(gl20Context* glc, GLint nx, GLint ny, GLint nz);
void gl20Normal3s(gl20Context* glc, GLshort nx, GLshort ny, GLshort nz);
void gl20Normal3bv(gl20Context* glc, GLbyte* v);
void gl20Normal3dv(gl20Context* glc, GLdouble* v);
void gl20Normal3fv(gl20Context* glc, GLfloat* v);
void gl20Normal3iv(gl20Context* glc, GLint* v);
void gl20Normal3sv(gl20Context* glc, GLshort* v);
void gl20NormalPointer(gl20Context* glc, GLenum type, GLsizei stride, GLvoid* pointer);
void gl20Ortho(gl20Context* glc, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zfar);
void gl20PassThrough(gl20Context* glc, GLfloat token);
void gl20PixelMapfv(gl20Context* glc, GLenum map, GLsizei mapsize, GLfloat* values);
void gl20PixelMapuiv(gl20Context* glc, GLenum map, GLsizei mapsize, GLuint* values);
void gl20PixelMapusv(gl20Context* glc, GLenum map, GLsizei mapsize, GLushort* values);
void gl20PixelStoref(gl20Context* glc, GLenum pname, GLfloat param);
void gl20PixelStorei(gl20Context* glc, GLenum pname, GLint param);
void gl20PixelTransferf(gl20Context* glc, GLenum pname, GLfloat param);
void gl20PixelTransferi(gl20Context* glc, GLenum pname, GLint param);
void gl20PixelZoom(gl20Context* glc, GLfloat xfactor, GLfloat yfactor);
void gl20PointSize(gl20Context* glc, GLfloat size);
void gl20PolygonMode(gl20Context* glc, GLenum face, GLenum mode);
void gl20PolygonStipple(gl20Context* glc, GLubyte* mask);
void gl20PrioritizeTextures(gl20Context* glc, GLsizei n, GLuint* textures, GLclampf* priorities);
void gl20PushAttrib(gl20Context* glc, GLbitfield mask);
void gl20PopAttrib(gl20Context* glc);
void gl20PushClientAttrib(gl20Context* glc, GLbitfield mask);
void gl20PopClientAttrib(gl20Context* glc);
void gl20PushMatrix(gl20Context* glc);
void gl20PopMatrix(gl20Context* glc);
void gl20PushName(gl20Context* glc, GLuint name);
void gl20PopName(gl20Context* glc);
void gl20RasterPos2d(gl20Context* glc, GLdouble x, GLdouble y);
void gl20RasterPos2f(gl20Context* glc, GLfloat x, GLfloat y);
void gl20RasterPos2i(gl20Context* glc, GLint x, GLint y);
void gl20RasterPos2s(gl20Context* glc, GLshort x, GLshort y);
void gl20RasterPos3d(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl20RasterPos3f(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl20RasterPos3i(gl20Context* glc, GLint x, GLint y, GLint z);
void gl20RasterPos3s(gl20Context* glc, GLshort x, GLshort y, GLshort z);
void gl20RasterPos4d(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl20RasterPos4f(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl20RasterPos4i(gl20Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl20RasterPos4s(gl20Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl20RasterPos2dv(gl20Context* glc, GLdouble* v);
void gl20RasterPos2fv(gl20Context* glc, GLfloat* v);
void gl20RasterPos2iv(gl20Context* glc, GLint* v);
void gl20RasterPos2sv(gl20Context* glc, GLshort* v);
void gl20RasterPos3dv(gl20Context* glc, GLdouble* v);
void gl20RasterPos3fv(gl20Context* glc, GLfloat* v);
void gl20RasterPos3iv(gl20Context* glc, GLint* v);
void gl20RasterPos3sv(gl20Context* glc, GLshort* v);
void gl20RasterPos4dv(gl20Context* glc, GLdouble* v);
void gl20RasterPos4fv(gl20Context* glc, GLfloat* v);
void gl20RasterPos4iv(gl20Context* glc, GLint* v);
void gl20RasterPos4sv(gl20Context* glc, GLshort* v);
void gl20ReadBuffer(gl20Context* glc, GLenum mode);
void gl20ReadPixels(gl20Context* glc, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl20Rectd(gl20Context* glc, GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void gl20Rectf(gl20Context* glc, GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void gl20Recti(gl20Context* glc, GLint x1, GLint y1, GLint x2, GLint y2);
void gl20Rects(gl20Context* glc, GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void gl20Rectdv(gl20Context* glc, GLdouble* v1, GLdouble* v2);
void gl20Rectfv(gl20Context* glc, GLfloat* v1, GLfloat* v2);
void gl20Rectiv(gl20Context* glc, GLint* v1, GLint* v2);
void gl20Rectsv(gl20Context* glc, GLshort* v1, GLshort* v2);
GLint gl20RenderMode(gl20Context* glc, GLenum mode);
void gl20Rotated(gl20Context* glc, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void gl20Rotatef(gl20Context* glc, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void gl20Scaled(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl20Scalef(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl20Scissor(gl20Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
void gl20SelectBuffer(gl20Context* glc, GLsizei size, GLuint* buffer);
void gl20ShadeModel(gl20Context* glc, GLenum mode);
void gl20StencilFunc(gl20Context* glc, GLenum func, GLint ref, GLuint mask);
void gl20StencilMask(gl20Context* glc, GLuint mask);
void gl20StencilOp(gl20Context* glc, GLenum fail, GLenum zfail, GLenum zpass);
void gl20TexCoord1d(gl20Context* glc, GLdouble s);
void gl20TexCoord1f(gl20Context* glc, GLfloat s);
void gl20TexCoord1i(gl20Context* glc, GLint s);
void gl20TexCoord1s(gl20Context* glc, GLshort s);
void gl20TexCoord2d(gl20Context* glc, GLdouble s, GLdouble t);
void gl20TexCoord2f(gl20Context* glc, GLfloat s, GLfloat t);
void gl20TexCoord2i(gl20Context* glc, GLint s, GLint t);
void gl20TexCoord2s(gl20Context* glc, GLshort s, GLshort t);
void gl20TexCoord3d(gl20Context* glc, GLdouble s, GLdouble t, GLdouble r);
void gl20TexCoord3f(gl20Context* glc, GLfloat s, GLfloat t, GLfloat r);
void gl20TexCoord3i(gl20Context* glc, GLint s, GLint t, GLint r);
void gl20TexCoord3s(gl20Context* glc, GLshort s, GLshort t, GLshort r);
void gl20TexCoord4d(gl20Context* glc, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void gl20TexCoord4f(gl20Context* glc, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void gl20TexCoord4i(gl20Context* glc, GLint s, GLint t, GLint r, GLint q);
void gl20TexCoord4s(gl20Context* glc, GLshort s, GLshort t, GLshort r, GLshort q);
void gl20TexCoord1dv(gl20Context* glc, GLdouble* v);
void gl20TexCoord1fv(gl20Context* glc, GLfloat* v);
void gl20TexCoord1iv(gl20Context* glc, GLint* v);
void gl20TexCoord1sv(gl20Context* glc, GLshort* v);
void gl20TexCoord2dv(gl20Context* glc, GLdouble* v);
void gl20TexCoord2fv(gl20Context* glc, GLfloat* v);
void gl20TexCoord2iv(gl20Context* glc, GLint* v);
void gl20TexCoord2sv(gl20Context* glc, GLshort* v);
void gl20TexCoord3dv(gl20Context* glc, GLdouble* v);
void gl20TexCoord3fv(gl20Context* glc, GLfloat* v);
void gl20TexCoord3iv(gl20Context* glc, GLint* v);
void gl20TexCoord3sv(gl20Context* glc, GLshort* v);
void gl20TexCoord4dv(gl20Context* glc, GLdouble* v);
void gl20TexCoord4fv(gl20Context* glc, GLfloat* v);
void gl20TexCoord4iv(gl20Context* glc, GLint* v);
void gl20TexCoord4sv(gl20Context* glc, GLshort* v);
void gl20TexCoordPointer(gl20Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl20TexEnvf(gl20Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl20TexEnvi(gl20Context* glc, GLenum target, GLenum pname, GLint param);
void gl20TexEnvfv(gl20Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl20TexEnviv(gl20Context* glc, GLenum target, GLenum pname, GLint* params);
void gl20TexGend(gl20Context* glc, GLenum coord, GLenum pname, GLdouble param);
void gl20TexGenf(gl20Context* glc, GLenum coord, GLenum pname, GLfloat param);
void gl20TexGeni(gl20Context* glc, GLenum coord, GLenum pname, GLint param);
void gl20TexGendv(gl20Context* glc, GLenum coord, GLenum pname, GLdouble* params);
void gl20TexGenfv(gl20Context* glc, GLenum coord, GLenum pname, GLfloat* params);
void gl20TexGeniv(gl20Context* glc, GLenum coord, GLenum pname, GLint* params);
void gl20TexImage1D(gl20Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl20TexImage2D(gl20Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl20TexImage3DEXT(gl20Context* glc, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
void gl20TexParameterf(gl20Context* glc, GLenum target, GLenum pname, GLfloat param);
void gl20TexParameteri(gl20Context* glc, GLenum target, GLenum pname, GLint param);
void gl20TexParameterfv(gl20Context* glc, GLenum target, GLenum pname, GLfloat* params);
void gl20TexParameteriv(gl20Context* glc, GLenum target, GLenum pname, GLint* params);
void gl20TexSubImage1D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
void gl20TexSubImage2D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void gl20TexSubImage3DEXT(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
void gl20Translated(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl20Translatef(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl20Vertex2s(gl20Context* glc, GLshort x, GLshort y);
void gl20Vertex2i(gl20Context* glc, GLint x, GLint y);
void gl20Vertex2f(gl20Context* glc, GLfloat x, GLfloat y);
void gl20Vertex2d(gl20Context* glc, GLdouble x, GLdouble y);
void gl20Vertex3s(gl20Context* glc, GLshort x, GLshort y, GLshort z);
void gl20Vertex3i(gl20Context* glc, GLint x, GLint y, GLint z);
void gl20Vertex3f(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z);
void gl20Vertex3d(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z);
void gl20Vertex4s(gl20Context* glc, GLshort x, GLshort y, GLshort z, GLshort w);
void gl20Vertex4i(gl20Context* glc, GLint x, GLint y, GLint z, GLint w);
void gl20Vertex4f(gl20Context* glc, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void gl20Vertex4d(gl20Context* glc, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void gl20VertexPointer(gl20Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl20Viewport(gl20Context* glc, GLint x, GLint y, GLsizei width, GLsizei height);
GLboolean gl20AreTexturesResident(gl20Context* glc, GLsizei n, GLuint* textures, GLboolean* residences);
void gl20ArrayElement(gl20Context* glc, GLint i);
void gl20DrawArrays(gl20Context* glc, GLenum mode, GLint first, GLsizei count);
void gl20DrawElements(gl20Context* glc, GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
void gl20GetPointerv(gl20Context* glc, GLenum pname, GLvoid* params);
void gl20PolygonOffset(gl20Context* glc, GLfloat factor, GLfloat units);
void gl20CopyTexImage1D(gl20Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
void gl20CopyTexImage2D(gl20Context* glc, GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void gl20CopyTexSubImage1D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void gl20CopyTexSubImage2D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl20BindTexture(gl20Context* glc, GLenum target, GLuint texture);
void gl20DeleteTextures(gl20Context* glc, GLsizei n, GLuint* textures);
void gl20GenTextures(gl20Context* glc, GLsizei n, GLuint* textures);
GLboolean gl20IsTexture(gl20Context* glc, GLuint texture);
void gl20ColorPointer(gl20Context* glc, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
void gl20BlendColorEXT(gl20Context* glc, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void gl20BlendEquation(gl20Context* glc, GLenum mode);
void gl20CopyTexSubImage3D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void gl20ActiveTexture(gl20Context* glc, GLenum texture);
void gl20ClientActiveTexture(gl20Context* glc, GLenum texture);
void gl20CompressedTexImage1D(gl20Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
void gl20CompressedTexImage2D(gl20Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
void gl20CompressedTexImage3D(gl20Context* glc, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
void gl20CompressedTexSubImage1D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
void gl20CompressedTexSubImage2D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
void gl20CompressedTexSubImage3D(gl20Context* glc, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
void gl20BlendFuncSeparate(gl20Context* glc, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void gl20BeginQuery(gl20Context* glc, GLenum target, GLuint id);
void gl20BindBuffer(gl20Context* glc, GLenum target, GLuint buffer);
void gl20BufferData(gl20Context* glc, GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
void gl20BufferSubData(gl20Context* glc, GLenum target, GLenum offset, GLsizeiptr size, GLvoid* data);
void gl20AttachShader(gl20Context* glc, GLuint program, GLuint shader);
void gl20BindAttribLocation(gl20Context* glc, GLuint program, GLuint index, GLchar* name);
void gl20BlendEquationSeperate(gl20Context* glc, GLenum modeRGB, GLenum modeAlpha);
void gl20CompileShader(gl20Context* glc, GLuint shader);
GLuint gl20CreateProgram(gl20Context* glc);
GLuint gl20CreateShader(gl20Context* glc, GLenum shaderType);
